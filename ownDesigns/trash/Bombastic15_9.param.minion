MINION 3
# AC-CSE-Times_number = 0
# AC-CSE-Times_eliminated_expressions = 0
# AC-CSE-Times_total_size = 0
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# AC-CSE-Or_number = 0
# AC-CSE-Or_eliminated_expressions = 0
# AC-CSE-Or_total_size = 0
# AC-CSE-And_number = 0
# AC-CSE-And_eliminated_expressions = 0
# AC-CSE-And_total_size = 0
# AC-CSE-Sum_number = 27
# AC-CSE-Sum_eliminated_expressions = 80
# AC-CSE-Sum_total_size = 93
# CSE_active_number = 16
# CSE_active_eliminated_expressions = 48
# CSE_active_total_size = 372
**VARIABLES**
DISCRETE moveRow_00000 #
{0..1}
DISCRETE moveRow_00001 #
{-1..1}
DISCRETE moveRow_00002 #
{-1..1}
DISCRETE moveRow_00003 #
{-1..1}
DISCRETE moveRow_00004 #
{-1..1}
DISCRETE moveRow_00005 #
{-1..1}
DISCRETE moveRow_00006 #
{-1..1}
DISCRETE moveRow_00007 #
{-1..1}
DISCRETE moveRow_00008 #
{-1..1}
DISCRETE moveCol_00000 #
{0..1}
DISCRETE moveCol_00001 #
{-1..1}
DISCRETE moveCol_00002 #
{-1..1}
DISCRETE moveCol_00003 #
{-1..1}
DISCRETE moveCol_00004 #
{-1..1}
DISCRETE moveCol_00005 #
{-1..1}
DISCRETE moveCol_00006 #
{-1..1}
DISCRETE moveCol_00007 #
{-1..1}
DISCRETE moveCol_00008 #
{-1..1}
DISCRETE avatarCurrentRow_00001 #
{2..3}
DISCRETE avatarCurrentRow_00002 #
{2..4}
DISCRETE avatarCurrentRow_00003 #
{2..5}
DISCRETE avatarCurrentRow_00004 #
{2..6}
DISCRETE avatarCurrentRow_00005 #
{2..6}
DISCRETE avatarCurrentRow_00006 #
{3..6}
DISCRETE avatarCurrentRow_00007 #
{4..7}
DISCRETE avatarCurrentRow_00008 #
{4..7}
DISCRETE avatarCurrentRow_00009 #
{3..7}
DISCRETE avatarCurrentCol_00001 #
{2..3}
DISCRETE avatarCurrentCol_00002 #
{2..4}
DISCRETE avatarCurrentCol_00003 #
{2..5}
DISCRETE avatarCurrentCol_00004 #
{2..6}
DISCRETE avatarCurrentCol_00005 #
{2..6}
DISCRETE avatarCurrentCol_00006 #
{3..6}
DISCRETE avatarCurrentCol_00007 #
{4..6}
DISCRETE avatarCurrentCol_00008 #
{4..6}
DISCRETE avatarCurrentCol_00009 #
{3..6}
DISCRETE blocksCurrentRow_00005_00000 #
{5..6}
DISCRETE blocksCurrentRow_00006_00000 #
{5..6}
DISCRETE blocksCurrentRow_00007_00000 #
{5..6}
DISCRETE blocksCurrentRow_00008_00000 #
{5..6}
DISCRETE blocksCurrentCol_00006_00000 #
{5..6}
DISCRETE blocksCurrentCol_00007_00000 #
{5..6}
DISCRETE blocksCurrentCol_00008_00000 #
{5..6}
DISCRETE aux82 #AC-CSE-Generic-+: 4 occurrences of: (7*avatarCurrentRow_00001 + avatarCurrentCol_00001-16)
{0..8}
DISCRETE aux83 #AC-CSE-Generic-+: 4 occurrences of: (7*avatarCurrentRow_00002 + avatarCurrentCol_00002-16)
{0..16}
DISCRETE aux84 #AC-CSE-Generic-+: 4 occurrences of: (7*avatarCurrentRow_00003 + avatarCurrentCol_00003-16)
{0..24}
DISCRETE aux85 #AC-CSE-Generic-+: 4 occurrences of: (7*avatarCurrentRow_00004 + avatarCurrentCol_00004-16)
{0..32}
DISCRETE aux86 #AC-CSE-Generic-+: 4 occurrences of: (7*avatarCurrentRow_00005 + avatarCurrentCol_00005-16)
{0..32}
DISCRETE aux87 #AC-CSE-Generic-+: 4 occurrences of: (7*avatarCurrentRow_00006 + avatarCurrentCol_00006-24)
{0..24}
DISCRETE aux88 #AC-CSE-Generic-+: 4 occurrences of: (7*avatarCurrentRow_00007 + avatarCurrentCol_00007-32)
{0..23}
DISCRETE aux89 #AC-CSE-Generic-+: 4 occurrences of: (7*avatarCurrentRow_00008 + avatarCurrentCol_00008-32)
{0..23}
DISCRETE aux104 #AC-CSE-Generic-+: 2 occurrences of: (7*avatarCurrentRow_00009 + avatarCurrentCol_00009-24)
{0..31}
DISCRETE aux105 #AC-CSE-Generic-+: 2 occurrences of: (-35 + 7*blocksCurrentRow_00005_00000)
{0..7}
DISCRETE aux106 #AC-CSE-Generic-+: 2 occurrences of: (blocksCurrentCol_00006_00000-40 + 7*blocksCurrentRow_00006_00000)
{0..8}
DISCRETE aux107 #AC-CSE-Generic-+: 2 occurrences of: (7*blocksCurrentRow_00007_00000-40 + blocksCurrentCol_00007_00000)
{0..8}
DISCRETE aux108 #AC-CSE-Generic-+: 2 occurrences of: (7*blocksCurrentRow_00008_00000-40 + blocksCurrentCol_00008_00000)
{0..8}
DISCRETE aux109 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..33)], aux85)
{0..2}
DISCRETE aux110 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..33)], aux86)
{0..2}
DISCRETE aux111 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..32)], aux104)
{0..2}
DISCRETE aux112 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2;int(1..25)], aux84)
{0..2}
DISCRETE aux113 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..25)], aux87)
{0..2}
DISCRETE aux114 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..24)], aux89)
{0..2}
DISCRETE aux115 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..24)], aux88)
{0..2}
DISCRETE aux116 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2;int(1..17)], aux83)
{0..2}
DISCRETE aux117 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 2, 2, 0, 0, 2, 2;int(1..9)], aux82)
{0..2}
DISCRETE aux118 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..9)], aux107)
{0..2}
DISCRETE aux119 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..9)], aux108)
{0..2}
DISCRETE aux120 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..9)], aux106)
{0..2}
DISCRETE aux121 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, 0, 0, 2, 2, 2, 2;int(1..8)], aux105)
{0..2}
BOOL aux122 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00007 != blocksCurrentRow_00006_00000)
BOOL aux123 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00009 != blocksCurrentCol_00008_00000)
BOOL aux124 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00006 != blocksCurrentRow_00005_00000)
BOOL aux127 #|moveRow_00001|
BOOL aux128 #|moveCol_00001|
BOOL aux130 #|moveRow_00002|
BOOL aux131 #|moveCol_00002|
BOOL aux133 #|moveRow_00003|
BOOL aux134 #|moveCol_00003|
BOOL aux136 #|moveRow_00004|
BOOL aux137 #|moveCol_00004|
BOOL aux139 #|moveRow_00005|
BOOL aux140 #|moveCol_00005|
BOOL aux142 #|moveRow_00006|
BOOL aux143 #|moveCol_00006|
BOOL aux145 #|moveRow_00007|
BOOL aux146 #|moveCol_00007|
BOOL aux148 #|moveRow_00008|
BOOL aux149 #|moveCol_00008|
DISCRETE aux152 #(avatarCurrentRow_00007 + moveRow_00006)
{3..8}
DISCRETE aux153 #(avatarCurrentRow_00007 + 2*moveRow_00006)
{2..9}
DISCRETE aux154 #(avatarCurrentCol_00007 + moveCol_00006)
{3..7}
DISCRETE aux155 #(avatarCurrentCol_00007 + 2*moveCol_00006)
{2..8}
DISCRETE aux156 #(avatarCurrentCol_00005 + moveCol_00004)
{1..7}
DISCRETE aux157 #(avatarCurrentCol_00005 + 2*moveCol_00004)
{0..8}
DISCRETE aux158 #(avatarCurrentRow_00005 + moveRow_00004)
{1..7}
DISCRETE aux159 #(avatarCurrentRow_00005 + 2*moveRow_00004)
{0..8}
DISCRETE aux161 #(moveRow_00008 + blocksCurrentRow_00008_00000)
{4..7}
DISCRETE aux162 #(moveCol_00008 + blocksCurrentCol_00008_00000)
{4..7}
DISCRETE aux163 #(moveRow_00004 + 5)
{4..6}
DISCRETE aux164 #(moveRow_00006 + blocksCurrentRow_00006_00000)
{4..7}
DISCRETE aux165 #(moveCol_00006 + blocksCurrentCol_00006_00000)
{4..7}
DISCRETE aux166 #(avatarCurrentRow_00002 + moveRow_00001)
{1..5}
DISCRETE aux167 #(avatarCurrentRow_00002 + 2*moveRow_00001)
{0..6}
DISCRETE aux168 #(avatarCurrentCol_00002 + moveCol_00001)
{1..5}
DISCRETE aux169 #(avatarCurrentCol_00002 + 2*moveCol_00001)
{0..6}
DISCRETE aux170 #(avatarCurrentRow_00003 + moveRow_00002)
{1..6}
DISCRETE aux171 #(avatarCurrentRow_00003 + 2*moveRow_00002)
{0..7}
DISCRETE aux172 #(avatarCurrentCol_00003 + moveCol_00002)
{1..6}
DISCRETE aux173 #(avatarCurrentCol_00003 + 2*moveCol_00002)
{0..7}
DISCRETE aux174 #(avatarCurrentRow_00004 + moveRow_00003)
{1..7}
DISCRETE aux175 #(avatarCurrentRow_00004 + 2*moveRow_00003)
{0..8}
DISCRETE aux176 #(avatarCurrentCol_00004 + moveCol_00003)
{1..7}
DISCRETE aux177 #(avatarCurrentCol_00004 + 2*moveCol_00003)
{0..8}
DISCRETE aux178 #(avatarCurrentRow_00009 + moveRow_00008)
{2..8}
DISCRETE aux179 #(avatarCurrentRow_00009 + 2*moveRow_00008)
{1..9}
DISCRETE aux180 #(avatarCurrentCol_00009 + moveCol_00008)
{2..7}
DISCRETE aux181 #(avatarCurrentCol_00009 + 2*moveCol_00008)
{1..8}
DISCRETE aux182 #(blocksCurrentRow_00007_00000 + moveRow_00007)
{4..7}
DISCRETE aux183 #(moveCol_00007 + blocksCurrentCol_00007_00000)
{4..7}
DISCRETE aux185 #(avatarCurrentCol_00006 + moveCol_00005)
{2..7}
DISCRETE aux186 #(avatarCurrentCol_00006 + 2*moveCol_00005)
{1..8}
DISCRETE aux187 #(avatarCurrentRow_00006 + moveRow_00005)
{2..7}
DISCRETE aux188 #(avatarCurrentRow_00006 + 2*moveRow_00005)
{1..8}
DISCRETE aux189 #(moveCol_00005 + 5)
{4..6}
DISCRETE aux190 #(moveRow_00005 + blocksCurrentRow_00005_00000)
{4..7}
DISCRETE aux191 #(avatarCurrentCol_00008 + moveCol_00007)
{3..7}
DISCRETE aux192 #(avatarCurrentCol_00008 + 2*moveCol_00007)
{2..8}
DISCRETE aux193 #(avatarCurrentRow_00008 + moveRow_00007)
{3..8}
DISCRETE aux194 #(avatarCurrentRow_00008 + 2*moveRow_00007)
{2..9}
**TUPLELIST**
gridInit 8 7
0 0 0 0 0 0 0 
0 2 2 2 2 2 0 
0 2 2 2 2 2 0 
0 2 2 2 2 2 0 
0 2 2 2 2 2 0 
0 2 2 2 2 2 0 
0 2 2 2 2 2 0 
0 0 0 0 0 0 0 
**VARIABLES**
ALIAS gridInit[8,7]=[[0, 0, 0, 0, 0, 0, 0], [0, 2, 2, 2, 2, 2, 0], [0, 2, 2, 2, 2, 2, 0], [0, 2, 2, 2, 2, 2, 0], [0, 2, 2, 2, 2, 2, 0], [0, 2, 2, 2, 2, 2, 0], [0, 2, 2, 2, 2, 2, 0], [0, 0, 0, 0, 0, 0, 0]]
ALIAS blocksInitRow[1]=[5]
ALIAS blocksInitCol[1]=[5]
ALIAS blocksGoalRow[1]=[6]
ALIAS blocksGoalCol[1]=[6]
**SEARCH**
PRINT[[moveRow_00000],[moveRow_00001],[moveRow_00002],[moveRow_00003],[moveRow_00004],[moveRow_00005],[moveRow_00006],[moveRow_00007],[moveRow_00008],[moveCol_00000],[moveCol_00001],[moveCol_00002],[moveCol_00003],[moveCol_00004],[moveCol_00005],[moveCol_00006],[moveCol_00007],[moveCol_00008],[avatarCurrentRow_00001],[avatarCurrentRow_00002],[avatarCurrentRow_00003],[avatarCurrentRow_00004],[avatarCurrentRow_00005],[avatarCurrentRow_00006],[avatarCurrentRow_00007],[avatarCurrentRow_00008],[avatarCurrentRow_00009],[avatarCurrentCol_00001],[avatarCurrentCol_00002],[avatarCurrentCol_00003],[avatarCurrentCol_00004],[avatarCurrentCol_00005],[avatarCurrentCol_00006],[avatarCurrentCol_00007],[avatarCurrentCol_00008],[avatarCurrentCol_00009],[blocksCurrentRow_00005_00000],[blocksCurrentRow_00006_00000],[blocksCurrentRow_00007_00000],[blocksCurrentRow_00008_00000],[blocksCurrentCol_00006_00000],[blocksCurrentCol_00007_00000],[blocksCurrentCol_00008_00000]]
VARORDER STATIC [moveRow_00000, moveRow_00001, moveRow_00002, moveRow_00003, moveRow_00004, moveRow_00005, moveRow_00006, moveRow_00007, moveRow_00008, moveCol_00000, moveCol_00001, moveCol_00002, moveCol_00003, moveCol_00004, moveCol_00005, moveCol_00006, moveCol_00007, moveCol_00008, 2, avatarCurrentRow_00001, avatarCurrentRow_00002, avatarCurrentRow_00003, avatarCurrentRow_00004, avatarCurrentRow_00005, avatarCurrentRow_00006, avatarCurrentRow_00007, avatarCurrentRow_00008, avatarCurrentRow_00009, 2, avatarCurrentCol_00001, avatarCurrentCol_00002, avatarCurrentCol_00003, avatarCurrentCol_00004, avatarCurrentCol_00005, avatarCurrentCol_00006, avatarCurrentCol_00007, avatarCurrentCol_00008, avatarCurrentCol_00009, 5, 5, 5, 5, 5, blocksCurrentRow_00005_00000, blocksCurrentRow_00006_00000, blocksCurrentRow_00007_00000, blocksCurrentRow_00008_00000, 6, 5, 5, 5, 5, 5, 5, blocksCurrentCol_00006_00000, blocksCurrentCol_00007_00000, blocksCurrentCol_00008_00000, 6, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0]
VARORDER AUX [moveRow_00000,moveRow_00001,moveRow_00002,moveRow_00003,moveRow_00004,moveRow_00005,moveRow_00006,moveRow_00007,moveRow_00008,moveCol_00000,moveCol_00001,moveCol_00002,moveCol_00003,moveCol_00004,moveCol_00005,moveCol_00006,moveCol_00007,moveCol_00008,avatarCurrentRow_00001,avatarCurrentRow_00002,avatarCurrentRow_00003,avatarCurrentRow_00004,avatarCurrentRow_00005,avatarCurrentRow_00006,avatarCurrentRow_00007,avatarCurrentRow_00008,avatarCurrentRow_00009,avatarCurrentCol_00001,avatarCurrentCol_00002,avatarCurrentCol_00003,avatarCurrentCol_00004,avatarCurrentCol_00005,avatarCurrentCol_00006,avatarCurrentCol_00007,avatarCurrentCol_00008,avatarCurrentCol_00009,blocksCurrentRow_00005_00000,blocksCurrentRow_00006_00000,blocksCurrentRow_00007_00000,blocksCurrentRow_00008_00000,blocksCurrentCol_00006_00000,blocksCurrentCol_00007_00000,blocksCurrentCol_00008_00000,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux104,aux105,aux106,aux107,aux108,aux109,aux110,aux111,aux112,aux113,aux114,aux115,aux116,aux117,aux118,aux119,aux120,aux121,aux122,aux123,aux124,aux127,aux128,aux130,aux131,aux133,aux134,aux136,aux137,aux139,aux140,aux142,aux143,aux145,aux146,aux148,aux149,aux152,aux153,aux154,aux155,aux156,aux157,aux158,aux159,aux161,aux162,aux163,aux164,aux165,aux166,aux167,aux168,aux169,aux170,aux171,aux172,aux173,aux174,aux175,aux176,aux177,aux178,aux179,aux180,aux181,aux182,aux183,aux185,aux186,aux187,aux188,aux189,aux190,aux191,aux192,aux193,aux194]
**CONSTRAINTS**
abs(aux127, moveRow_00001)
abs(aux128, moveCol_00001)
abs(aux130, moveRow_00002)
abs(aux131, moveCol_00002)
abs(aux133, moveRow_00003)
abs(aux134, moveCol_00003)
abs(aux136, moveRow_00004)
abs(aux137, moveCol_00004)
abs(aux139, moveRow_00005)
abs(aux140, moveCol_00005)
abs(aux142, moveRow_00006)
abs(aux143, moveCol_00006)
abs(aux145, moveRow_00007)
abs(aux146, moveCol_00007)
abs(aux148, moveRow_00008)
abs(aux149, moveCol_00008)
watchelement_undefzero([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2], aux85, aux109)
watchelement_undefzero([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2], aux86, aux110)
watchelement_undefzero([2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2], aux104, aux111)
watchelement_undefzero([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2], aux84, aux112)
watchelement_undefzero([2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2], aux87, aux113)
watchelement_undefzero([2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2], aux89, aux114)
watchelement_undefzero([2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2], aux88, aux115)
watchelement_undefzero([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2], aux83, aux116)
watchelement_undefzero([2, 2, 2, 2, 2, 0, 0, 2, 2], aux82, aux117)
watchelement_undefzero([2, 2, 0, 0, 2, 2, 2, 2, 2], aux107, aux118)
watchelement_undefzero([2, 2, 0, 0, 2, 2, 2, 2, 2], aux108, aux119)
watchelement_undefzero([2, 2, 0, 0, 2, 2, 2, 2, 2], aux106, aux120)
watchelement_undefzero([2, 2, 0, 0, 2, 2, 2, 2], aux105, aux121)
reify(diseq(avatarCurrentRow_00007,blocksCurrentRow_00006_00000), aux122)
reify(diseq(avatarCurrentCol_00009,blocksCurrentCol_00008_00000), aux123)
reify(diseq(avatarCurrentRow_00006,blocksCurrentRow_00005_00000), aux124)
diseq(aux121,0)
watched-or({w-literal(aux117,0),diseq(1,aux117)})
watched-or({watched-and({gaceq(blocksCurrentRow_00007_00000,avatarCurrentRow_00008),gaceq(blocksCurrentCol_00007_00000,avatarCurrentCol_00008)}),watched-and({gaceq(blocksCurrentCol_00007_00000,blocksCurrentCol_00008_00000),gaceq(blocksCurrentRow_00007_00000,blocksCurrentRow_00008_00000)})})
watched-or({diseq(avatarCurrentRow_00003,5),diseq(avatarCurrentCol_00003,5)})
watched-or({diseq(avatarCurrentRow_00004,5),diseq(avatarCurrentCol_00004,5)})
watched-or({diseq(avatarCurrentRow_00009,6),diseq(avatarCurrentCol_00009,6)})
watched-or({w-literal(aux116,0),diseq(aux116,1)})
diseq(aux120,0)
diseq(aux118,0)
diseq(aux119,0)
watched-or({w-literal(aux115,0),diseq(1,aux115)})
watched-or({w-literal(aux114,0),diseq(1,aux114)})
watched-or({diseq(avatarCurrentCol_00003,5),diseq(avatarCurrentRow_00003,5),watched-and({w-literal(moveRow_00002,0),w-literal(moveCol_00002,0)})})
watched-or({diseq(avatarCurrentCol_00004,5),diseq(avatarCurrentRow_00004,5),watched-and({w-literal(moveRow_00003,0),w-literal(moveCol_00003,0)})})
ineq(1, aux120, 0)
ineq(1, aux118, 0)
ineq(1, aux119, 0)
diseq(aux116,0)
diseq(aux109,0)
diseq(aux110,0)
ineq(1, aux121, 0)
watched-or({diseq(avatarCurrentRow_00005,blocksCurrentRow_00005_00000),diseq(avatarCurrentCol_00005,5)})
watched-or({diseq(blocksCurrentRow_00007_00000,aux152),diseq(blocksCurrentRow_00007_00000,aux153),diseq(aux154,blocksCurrentCol_00007_00000),diseq(aux155,blocksCurrentCol_00007_00000)})
watched-or({watched-and({w-literal(blocksCurrentRow_00008_00000,6),w-literal(blocksCurrentCol_00008_00000,6)}),watched-and({gaceq(blocksCurrentRow_00008_00000,avatarCurrentRow_00009),w-literal(aux123,0)})})
watched-or({diseq(aux156,5),diseq(aux157,5),diseq(blocksCurrentRow_00005_00000,aux158),diseq(blocksCurrentRow_00005_00000,aux159)})
ineq(1, aux116, 0)
ineq(1, aux109, 0)
ineq(1, aux110, 0)
watched-or({diseq(avatarCurrentCol_00007,blocksCurrentCol_00007_00000),diseq(avatarCurrentRow_00007,blocksCurrentRow_00007_00000)})
watched-or({diseq(blocksCurrentRow_00008_00000,avatarCurrentRow_00009),w-literal(aux123,1),watched-and({w-literal(aux161,6),w-literal(aux162,6)})})
watched-or({w-literal(aux109,0),diseq(aux109,1)})
watched-or({w-literal(aux110,0),diseq(aux110,1)})
watched-or({watched-and({gaceq(blocksCurrentRow_00005_00000,blocksCurrentRow_00006_00000),w-literal(blocksCurrentCol_00006_00000,5)}),watched-and({w-literal(aux124,0),w-literal(avatarCurrentCol_00006,5)})})
watched-or({watched-and({gaceq(blocksCurrentCol_00006_00000,avatarCurrentCol_00007),w-literal(aux122,0)}),watched-and({gaceq(blocksCurrentRow_00007_00000,blocksCurrentRow_00006_00000),gaceq(blocksCurrentCol_00006_00000,blocksCurrentCol_00007_00000)})})
watched-or({watched-and({gaceq(aux163,blocksCurrentRow_00005_00000),w-literal(moveCol_00004,0)}),diseq(5,avatarCurrentCol_00005),diseq(5,avatarCurrentRow_00005)})
watched-or({w-literal(aux113,0),diseq(1,aux113)})
watched-or({watched-and({gaceq(blocksCurrentRow_00007_00000,aux164),gaceq(aux165,blocksCurrentCol_00007_00000)}),diseq(blocksCurrentCol_00006_00000,avatarCurrentCol_00007),w-literal(aux122,1)})
ineq(1, aux111, 0)
diseq(0,aux111)
watched-or({diseq(5,aux166),diseq(5,aux167),diseq(aux168,5),diseq(aux169,5)})
watched-or({diseq(5,aux170),diseq(5,aux171),diseq(aux172,5),diseq(aux173,5)})
watched-or({diseq(5,aux174),diseq(5,aux175),diseq(aux176,5),diseq(aux177,5)})
watched-or({diseq(6,aux178),diseq(6,aux179),diseq(aux180,6),diseq(aux181,6)})
watched-or({watched-and({gaceq(blocksCurrentRow_00008_00000,aux182),gaceq(aux183,blocksCurrentCol_00008_00000)}),diseq(blocksCurrentRow_00007_00000,avatarCurrentRow_00008),diseq(blocksCurrentCol_00007_00000,avatarCurrentCol_00008)})
ineq(1, aux112, 0)
diseq(0,aux112)
watched-or({w-literal(aux112,0),diseq(1,aux112)})
watched-or({diseq(aux185,blocksCurrentCol_00006_00000),diseq(aux186,blocksCurrentCol_00006_00000),diseq(blocksCurrentRow_00006_00000,aux187),diseq(blocksCurrentRow_00006_00000,aux188)})
ineq(1, aux117, 0)
ineq(1, aux115, 0)
ineq(1, aux114, 0)
watched-or({diseq(avatarCurrentRow_00008,blocksCurrentRow_00008_00000),diseq(avatarCurrentCol_00008,blocksCurrentCol_00008_00000)})
watched-or({watched-and({w-literal(avatarCurrentCol_00005,5),w-literal(avatarCurrentRow_00005,5)}),w-literal(blocksCurrentRow_00005_00000,5)})
ineq(1, aux113, 0)
diseq(0,aux117)
watched-or({watched-and({gaceq(blocksCurrentCol_00006_00000,aux189),gaceq(aux190,blocksCurrentRow_00006_00000)}),w-literal(aux124,1),diseq(5,avatarCurrentCol_00006)})
diseq(0,aux115)
diseq(0,aux114)
watched-or({diseq(aux191,blocksCurrentCol_00008_00000),diseq(aux192,blocksCurrentCol_00008_00000),diseq(blocksCurrentRow_00008_00000,aux193),diseq(blocksCurrentRow_00008_00000,aux194)})
diseq(0,aux113)
watched-or({diseq(avatarCurrentCol_00006,blocksCurrentCol_00006_00000),diseq(avatarCurrentRow_00006,blocksCurrentRow_00006_00000)})
sumleq([moveRow_00000,moveCol_00000],1)
sumgeq([moveRow_00000,moveCol_00000],1)
sumleq([moveRow_00000,2],avatarCurrentRow_00001)
sumgeq([moveRow_00000,2],avatarCurrentRow_00001)
sumleq([aux127,aux128],1)
sumgeq([aux127,aux128],1)
sumleq([aux130,aux131],1)
sumgeq([aux130,aux131],1)
sumleq([aux133,aux134],1)
sumgeq([aux133,aux134],1)
sumleq([aux136,aux137],1)
sumgeq([aux136,aux137],1)
sumleq([aux139,aux140],1)
sumgeq([aux139,aux140],1)
sumleq([aux142,aux143],1)
sumgeq([aux142,aux143],1)
sumleq([aux145,aux146],1)
sumgeq([aux145,aux146],1)
sumleq([aux148,aux149],1)
sumgeq([aux148,aux149],1)
sumleq([avatarCurrentCol_00001,moveCol_00001],avatarCurrentCol_00002)
sumgeq([avatarCurrentCol_00001,moveCol_00001],avatarCurrentCol_00002)
sumleq([avatarCurrentRow_00007,moveRow_00006],aux152)
sumgeq([avatarCurrentRow_00007,moveRow_00006],aux152)
weightedsumleq([1,2],[avatarCurrentRow_00007,moveRow_00006],aux153)
weightedsumgeq([1,2],[avatarCurrentRow_00007,moveRow_00006],aux153)
sumleq([avatarCurrentCol_00007,moveCol_00006],aux154)
sumgeq([avatarCurrentCol_00007,moveCol_00006],aux154)
weightedsumleq([1,2],[avatarCurrentCol_00007,moveCol_00006],aux155)
weightedsumgeq([1,2],[avatarCurrentCol_00007,moveCol_00006],aux155)
sumleq([avatarCurrentCol_00005,moveCol_00004],aux156)
sumgeq([avatarCurrentCol_00005,moveCol_00004],aux156)
weightedsumleq([1,2],[avatarCurrentCol_00005,moveCol_00004],aux157)
weightedsumgeq([1,2],[avatarCurrentCol_00005,moveCol_00004],aux157)
sumleq([avatarCurrentRow_00005,moveRow_00004],aux158)
sumgeq([avatarCurrentRow_00005,moveRow_00004],aux158)
weightedsumleq([1,2],[avatarCurrentRow_00005,moveRow_00004],aux159)
weightedsumgeq([1,2],[avatarCurrentRow_00005,moveRow_00004],aux159)
sumleq([moveCol_00000,2],avatarCurrentCol_00001)
sumgeq([moveCol_00000,2],avatarCurrentCol_00001)
sumleq([moveRow_00008,blocksCurrentRow_00008_00000],aux161)
sumgeq([moveRow_00008,blocksCurrentRow_00008_00000],aux161)
sumleq([moveCol_00008,blocksCurrentCol_00008_00000],aux162)
sumgeq([moveCol_00008,blocksCurrentCol_00008_00000],aux162)
sumleq([moveRow_00004,5],aux163)
sumgeq([moveRow_00004,5],aux163)
sumleq([moveRow_00006,blocksCurrentRow_00006_00000],aux164)
sumgeq([moveRow_00006,blocksCurrentRow_00006_00000],aux164)
sumleq([moveCol_00006,blocksCurrentCol_00006_00000],aux165)
sumgeq([moveCol_00006,blocksCurrentCol_00006_00000],aux165)
sumleq([avatarCurrentRow_00002,moveRow_00001],aux166)
sumgeq([avatarCurrentRow_00002,moveRow_00001],aux166)
weightedsumleq([1,2],[avatarCurrentRow_00002,moveRow_00001],aux167)
weightedsumgeq([1,2],[avatarCurrentRow_00002,moveRow_00001],aux167)
sumleq([avatarCurrentCol_00002,moveCol_00001],aux168)
sumgeq([avatarCurrentCol_00002,moveCol_00001],aux168)
weightedsumleq([1,2],[avatarCurrentCol_00002,moveCol_00001],aux169)
weightedsumgeq([1,2],[avatarCurrentCol_00002,moveCol_00001],aux169)
sumleq([avatarCurrentRow_00003,moveRow_00002],aux170)
sumgeq([avatarCurrentRow_00003,moveRow_00002],aux170)
weightedsumleq([1,2],[avatarCurrentRow_00003,moveRow_00002],aux171)
weightedsumgeq([1,2],[avatarCurrentRow_00003,moveRow_00002],aux171)
sumleq([avatarCurrentCol_00003,moveCol_00002],aux172)
sumgeq([avatarCurrentCol_00003,moveCol_00002],aux172)
weightedsumleq([1,2],[avatarCurrentCol_00003,moveCol_00002],aux173)
weightedsumgeq([1,2],[avatarCurrentCol_00003,moveCol_00002],aux173)
sumleq([avatarCurrentRow_00004,moveRow_00003],aux174)
sumgeq([avatarCurrentRow_00004,moveRow_00003],aux174)
weightedsumleq([1,2],[avatarCurrentRow_00004,moveRow_00003],aux175)
weightedsumgeq([1,2],[avatarCurrentRow_00004,moveRow_00003],aux175)
sumleq([avatarCurrentCol_00004,moveCol_00003],aux176)
sumgeq([avatarCurrentCol_00004,moveCol_00003],aux176)
weightedsumleq([1,2],[avatarCurrentCol_00004,moveCol_00003],aux177)
weightedsumgeq([1,2],[avatarCurrentCol_00004,moveCol_00003],aux177)
sumleq([avatarCurrentRow_00009,moveRow_00008],aux178)
sumgeq([avatarCurrentRow_00009,moveRow_00008],aux178)
weightedsumleq([1,2],[avatarCurrentRow_00009,moveRow_00008],aux179)
weightedsumgeq([1,2],[avatarCurrentRow_00009,moveRow_00008],aux179)
sumleq([avatarCurrentCol_00009,moveCol_00008],aux180)
sumgeq([avatarCurrentCol_00009,moveCol_00008],aux180)
weightedsumleq([1,2],[avatarCurrentCol_00009,moveCol_00008],aux181)
weightedsumgeq([1,2],[avatarCurrentCol_00009,moveCol_00008],aux181)
sumleq([blocksCurrentRow_00007_00000,moveRow_00007],aux182)
sumgeq([blocksCurrentRow_00007_00000,moveRow_00007],aux182)
sumleq([moveCol_00007,blocksCurrentCol_00007_00000],aux183)
sumgeq([moveCol_00007,blocksCurrentCol_00007_00000],aux183)
sumleq([avatarCurrentRow_00001,moveRow_00001],avatarCurrentRow_00002)
sumgeq([avatarCurrentRow_00001,moveRow_00001],avatarCurrentRow_00002)
sumleq([avatarCurrentCol_00006,moveCol_00005],aux185)
sumgeq([avatarCurrentCol_00006,moveCol_00005],aux185)
weightedsumleq([1,2],[avatarCurrentCol_00006,moveCol_00005],aux186)
weightedsumgeq([1,2],[avatarCurrentCol_00006,moveCol_00005],aux186)
sumleq([avatarCurrentRow_00006,moveRow_00005],aux187)
sumgeq([avatarCurrentRow_00006,moveRow_00005],aux187)
weightedsumleq([1,2],[avatarCurrentRow_00006,moveRow_00005],aux188)
weightedsumgeq([1,2],[avatarCurrentRow_00006,moveRow_00005],aux188)
sumleq([moveCol_00005,5],aux189)
sumgeq([moveCol_00005,5],aux189)
sumleq([moveRow_00005,blocksCurrentRow_00005_00000],aux190)
sumgeq([moveRow_00005,blocksCurrentRow_00005_00000],aux190)
sumleq([avatarCurrentCol_00008,moveCol_00007],aux191)
sumgeq([avatarCurrentCol_00008,moveCol_00007],aux191)
weightedsumleq([1,2],[avatarCurrentCol_00008,moveCol_00007],aux192)
weightedsumgeq([1,2],[avatarCurrentCol_00008,moveCol_00007],aux192)
sumleq([avatarCurrentRow_00008,moveRow_00007],aux193)
sumgeq([avatarCurrentRow_00008,moveRow_00007],aux193)
weightedsumleq([1,2],[avatarCurrentRow_00008,moveRow_00007],aux194)
weightedsumgeq([1,2],[avatarCurrentRow_00008,moveRow_00007],aux194)
weightedsumleq([7,1,1],[avatarCurrentRow_00001,avatarCurrentCol_00001,-16],aux82)
weightedsumgeq([7,1,1],[avatarCurrentRow_00001,avatarCurrentCol_00001,-16],aux82)
weightedsumleq([7,1,1],[avatarCurrentRow_00002,avatarCurrentCol_00002,-16],aux83)
weightedsumgeq([7,1,1],[avatarCurrentRow_00002,avatarCurrentCol_00002,-16],aux83)
weightedsumleq([7,1,1],[avatarCurrentRow_00003,avatarCurrentCol_00003,-16],aux84)
weightedsumgeq([7,1,1],[avatarCurrentRow_00003,avatarCurrentCol_00003,-16],aux84)
weightedsumleq([7,1,1],[avatarCurrentRow_00004,avatarCurrentCol_00004,-16],aux85)
weightedsumgeq([7,1,1],[avatarCurrentRow_00004,avatarCurrentCol_00004,-16],aux85)
weightedsumleq([7,1,1],[avatarCurrentRow_00005,avatarCurrentCol_00005,-16],aux86)
weightedsumgeq([7,1,1],[avatarCurrentRow_00005,avatarCurrentCol_00005,-16],aux86)
weightedsumleq([7,1,1],[avatarCurrentRow_00006,avatarCurrentCol_00006,-24],aux87)
weightedsumgeq([7,1,1],[avatarCurrentRow_00006,avatarCurrentCol_00006,-24],aux87)
weightedsumleq([7,1,1],[avatarCurrentRow_00007,avatarCurrentCol_00007,-32],aux88)
weightedsumgeq([7,1,1],[avatarCurrentRow_00007,avatarCurrentCol_00007,-32],aux88)
weightedsumleq([7,1,1],[avatarCurrentRow_00008,avatarCurrentCol_00008,-32],aux89)
weightedsumgeq([7,1,1],[avatarCurrentRow_00008,avatarCurrentCol_00008,-32],aux89)
sumleq([avatarCurrentCol_00004,moveCol_00004],avatarCurrentCol_00005)
sumgeq([avatarCurrentCol_00004,moveCol_00004],avatarCurrentCol_00005)
sumleq([avatarCurrentRow_00004,moveRow_00004],avatarCurrentRow_00005)
sumgeq([avatarCurrentRow_00004,moveRow_00004],avatarCurrentRow_00005)
sumleq([avatarCurrentCol_00005,moveCol_00005],avatarCurrentCol_00006)
sumgeq([avatarCurrentCol_00005,moveCol_00005],avatarCurrentCol_00006)
sumleq([avatarCurrentRow_00005,moveRow_00005],avatarCurrentRow_00006)
sumgeq([avatarCurrentRow_00005,moveRow_00005],avatarCurrentRow_00006)
sumleq([avatarCurrentCol_00006,moveCol_00006],avatarCurrentCol_00007)
sumgeq([avatarCurrentCol_00006,moveCol_00006],avatarCurrentCol_00007)
sumleq([avatarCurrentRow_00006,moveRow_00006],avatarCurrentRow_00007)
sumgeq([avatarCurrentRow_00006,moveRow_00006],avatarCurrentRow_00007)
sumleq([avatarCurrentCol_00007,moveCol_00007],avatarCurrentCol_00008)
sumgeq([avatarCurrentCol_00007,moveCol_00007],avatarCurrentCol_00008)
sumleq([avatarCurrentRow_00007,moveRow_00007],avatarCurrentRow_00008)
sumgeq([avatarCurrentRow_00007,moveRow_00007],avatarCurrentRow_00008)
sumleq([avatarCurrentCol_00008,moveCol_00008],avatarCurrentCol_00009)
sumgeq([avatarCurrentCol_00008,moveCol_00008],avatarCurrentCol_00009)
sumleq([avatarCurrentRow_00008,moveRow_00008],avatarCurrentRow_00009)
sumgeq([avatarCurrentRow_00008,moveRow_00008],avatarCurrentRow_00009)
sumleq([avatarCurrentCol_00002,moveCol_00002],avatarCurrentCol_00003)
sumgeq([avatarCurrentCol_00002,moveCol_00002],avatarCurrentCol_00003)
sumleq([avatarCurrentRow_00002,moveRow_00002],avatarCurrentRow_00003)
sumgeq([avatarCurrentRow_00002,moveRow_00002],avatarCurrentRow_00003)
sumleq([avatarCurrentCol_00003,moveCol_00003],avatarCurrentCol_00004)
sumgeq([avatarCurrentCol_00003,moveCol_00003],avatarCurrentCol_00004)
sumleq([avatarCurrentRow_00003,moveRow_00003],avatarCurrentRow_00004)
sumgeq([avatarCurrentRow_00003,moveRow_00003],avatarCurrentRow_00004)
weightedsumleq([7,1,1],[avatarCurrentRow_00009,avatarCurrentCol_00009,-24],aux104)
weightedsumgeq([7,1,1],[avatarCurrentRow_00009,avatarCurrentCol_00009,-24],aux104)
weightedsumleq([1,7],[-35,blocksCurrentRow_00005_00000],aux105)
weightedsumgeq([1,7],[-35,blocksCurrentRow_00005_00000],aux105)
weightedsumleq([1,1,7],[blocksCurrentCol_00006_00000,-40,blocksCurrentRow_00006_00000],aux106)
weightedsumgeq([1,1,7],[blocksCurrentCol_00006_00000,-40,blocksCurrentRow_00006_00000],aux106)
weightedsumleq([7,1,1],[blocksCurrentRow_00007_00000,-40,blocksCurrentCol_00007_00000],aux107)
weightedsumgeq([7,1,1],[blocksCurrentRow_00007_00000,-40,blocksCurrentCol_00007_00000],aux107)
weightedsumleq([7,1,1],[blocksCurrentRow_00008_00000,-40,blocksCurrentCol_00008_00000],aux108)
weightedsumgeq([7,1,1],[blocksCurrentRow_00008_00000,-40,blocksCurrentCol_00008_00000],aux108)
**EOF**
