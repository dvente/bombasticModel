MINION 3
# AC-CSE-Times_number = 0
# AC-CSE-Times_eliminated_expressions = 0
# AC-CSE-Times_total_size = 0
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# AC-CSE-Or_number = 0
# AC-CSE-Or_eliminated_expressions = 0
# AC-CSE-Or_total_size = 0
# AC-CSE-And_number = 0
# AC-CSE-And_eliminated_expressions = 0
# AC-CSE-And_total_size = 0
# AC-CSE-Sum_number = 31
# AC-CSE-Sum_eliminated_expressions = 92
# AC-CSE-Sum_total_size = 107
# CSE_active_number = 21
# CSE_active_eliminated_expressions = 60
# CSE_active_total_size = 501
**VARIABLES**
DISCRETE moveRow_00000 #
{0..1}
DISCRETE moveRow_00001 #
{-1..1}
DISCRETE moveRow_00002 #
{-1..1}
DISCRETE moveRow_00003 #
{-1..1}
DISCRETE moveRow_00004 #
{-1..1}
DISCRETE moveRow_00005 #
{-1..1}
DISCRETE moveRow_00006 #
{-1..1}
DISCRETE moveRow_00007 #
{-1..1}
DISCRETE moveRow_00008 #
{-1..1}
DISCRETE moveRow_00009 #
{-1..1}
DISCRETE moveCol_00000 #
{0..1}
DISCRETE moveCol_00001 #
{-1..1}
DISCRETE moveCol_00002 #
{-1..1}
DISCRETE moveCol_00003 #
{-1..1}
DISCRETE moveCol_00004 #
{-1..1}
DISCRETE moveCol_00005 #
{-1..1}
DISCRETE moveCol_00006 #
{-1..1}
DISCRETE moveCol_00007 #
{-1..1}
DISCRETE moveCol_00008 #
{-1..1}
DISCRETE moveCol_00009 #
{-1..1}
DISCRETE avatarCurrentRow_00001 #
{2..3}
DISCRETE avatarCurrentRow_00002 #
{2..4}
DISCRETE avatarCurrentRow_00003 #
{2..5}
DISCRETE avatarCurrentRow_00004 #
{2..6}
DISCRETE avatarCurrentRow_00005 #
{2..7}
DISCRETE avatarCurrentRow_00006 #
{2..7}
DISCRETE avatarCurrentRow_00007 #
{3..7}
DISCRETE avatarCurrentRow_00008 #
{3..7}
DISCRETE avatarCurrentRow_00009 #
{3..7}
DISCRETE avatarCurrentRow_00010 #
{2..7}
DISCRETE avatarCurrentCol_00001 #
{2..3}
DISCRETE avatarCurrentCol_00002 #
{2..4}
DISCRETE avatarCurrentCol_00003 #
{2..5}
DISCRETE avatarCurrentCol_00004 #
{2..6}
DISCRETE avatarCurrentCol_00005 #
{2..6}
DISCRETE avatarCurrentCol_00006 #
{2..6}
DISCRETE avatarCurrentCol_00007 #
{3..6}
DISCRETE avatarCurrentCol_00008 #
{3..6}
DISCRETE avatarCurrentCol_00009 #
{2..6}
DISCRETE avatarCurrentCol_00010 #
{2..6}
DISCRETE blocksCurrentRow_00005_00000 #
{5..6}
DISCRETE blocksCurrentRow_00006_00000 #
{5..6}
DISCRETE blocksCurrentRow_00007_00000 #
{5..6}
DISCRETE blocksCurrentRow_00008_00000 #
{5..6}
DISCRETE blocksCurrentRow_00009_00000 #
{5..6}
DISCRETE blocksCurrentCol_00006_00000 #
{4..6}
DISCRETE blocksCurrentCol_00007_00000 #
{4..6}
DISCRETE blocksCurrentCol_00008_00000 #
{4..6}
DISCRETE blocksCurrentCol_00009_00000 #
{5..6}
DISCRETE aux82 #AC-CSE-Generic-+: 4 occurrences of: (7*avatarCurrentRow_00001 + avatarCurrentCol_00001-16)
{0..8}
DISCRETE aux83 #AC-CSE-Generic-+: 4 occurrences of: (7*avatarCurrentRow_00002 + avatarCurrentCol_00002-16)
{0..16}
DISCRETE aux84 #AC-CSE-Generic-+: 4 occurrences of: (7*avatarCurrentRow_00003 + avatarCurrentCol_00003-16)
{0..24}
DISCRETE aux85 #AC-CSE-Generic-+: 4 occurrences of: (7*avatarCurrentRow_00004 + avatarCurrentCol_00004-16)
{0..32}
DISCRETE aux86 #AC-CSE-Generic-+: 4 occurrences of: (7*avatarCurrentRow_00005 + avatarCurrentCol_00005-16)
{0..39}
DISCRETE aux87 #AC-CSE-Generic-+: 4 occurrences of: (7*avatarCurrentRow_00006 + avatarCurrentCol_00006-16)
{0..39}
DISCRETE aux88 #AC-CSE-Generic-+: 4 occurrences of: (7*avatarCurrentRow_00007 + avatarCurrentCol_00007-24)
{0..31}
DISCRETE aux89 #AC-CSE-Generic-+: 4 occurrences of: (7*avatarCurrentRow_00008 + avatarCurrentCol_00008-24)
{0..31}
DISCRETE aux90 #AC-CSE-Generic-+: 4 occurrences of: (7*avatarCurrentRow_00009 + avatarCurrentCol_00009-23)
{0..32}
DISCRETE aux107 #AC-CSE-Generic-+: 2 occurrences of: (7*avatarCurrentRow_00010 + avatarCurrentCol_00010-16)
{0..39}
DISCRETE aux108 #AC-CSE-Generic-+: 2 occurrences of: (-35 + 7*blocksCurrentRow_00005_00000)
{0..7}
DISCRETE aux109 #AC-CSE-Generic-+: 2 occurrences of: (blocksCurrentCol_00006_00000-39 + 7*blocksCurrentRow_00006_00000)
{0..9}
DISCRETE aux110 #AC-CSE-Generic-+: 2 occurrences of: (7*blocksCurrentRow_00007_00000-39 + blocksCurrentCol_00007_00000)
{0..9}
DISCRETE aux111 #AC-CSE-Generic-+: 2 occurrences of: (7*blocksCurrentRow_00008_00000-39 + blocksCurrentCol_00008_00000)
{0..9}
DISCRETE aux112 #AC-CSE-Generic-+: 2 occurrences of: (7*blocksCurrentRow_00009_00000-40 + blocksCurrentCol_00009_00000)
{0..8}
DISCRETE aux113 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..40)], aux107)
{0..2}
DISCRETE aux114 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..40)], aux87)
{0..2}
DISCRETE aux115 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..40)], aux86)
{0..2}
DISCRETE aux116 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..33)], aux85)
{0..2}
DISCRETE aux117 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..33)], aux90)
{0..2}
DISCRETE aux118 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..32)], aux88)
{0..2}
DISCRETE aux119 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..32)], aux89)
{0..2}
DISCRETE aux120 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2;int(1..25)], aux84)
{0..2}
DISCRETE aux121 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2;int(1..17)], aux83)
{0..2}
DISCRETE aux122 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..10)], aux109)
{0..2}
DISCRETE aux123 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..10)], aux110)
{0..2}
DISCRETE aux124 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..10)], aux111)
{0..2}
DISCRETE aux125 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([2, 2, 2, 2, 2, 0, 0, 2, 2;int(1..9)], aux82)
{0..2}
DISCRETE aux126 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, 0, 0, 2, 2, 2, 2, 2;int(1..9)], aux112)
{0..2}
DISCRETE aux127 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, 0, 0, 2, 2, 2, 2;int(1..8)], aux108)
{0..2}
BOOL aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00007 != blocksCurrentRow_00006_00000)
BOOL aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00009 != blocksCurrentCol_00008_00000)
BOOL aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00009 != blocksCurrentRow_00008_00000)
BOOL aux131 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00006 != blocksCurrentRow_00005_00000)
BOOL aux132 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00010 != blocksCurrentRow_00009_00000)
BOOL aux133 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00010 != blocksCurrentCol_00009_00000)
BOOL aux136 #|moveRow_00001|
BOOL aux137 #|moveCol_00001|
BOOL aux139 #|moveRow_00002|
BOOL aux140 #|moveCol_00002|
BOOL aux142 #|moveRow_00003|
BOOL aux143 #|moveCol_00003|
BOOL aux145 #|moveRow_00004|
BOOL aux146 #|moveCol_00004|
BOOL aux148 #|moveRow_00005|
BOOL aux149 #|moveCol_00005|
BOOL aux151 #|moveRow_00006|
BOOL aux152 #|moveCol_00006|
BOOL aux154 #|moveRow_00007|
BOOL aux155 #|moveCol_00007|
BOOL aux157 #|moveRow_00008|
BOOL aux158 #|moveCol_00008|
BOOL aux160 #|moveRow_00009|
BOOL aux161 #|moveCol_00009|
DISCRETE aux164 #(avatarCurrentRow_00007 + moveRow_00006)
{2..8}
DISCRETE aux165 #(avatarCurrentRow_00007 + 2*moveRow_00006)
{1..9}
DISCRETE aux166 #(avatarCurrentCol_00007 + moveCol_00006)
{2..7}
DISCRETE aux167 #(avatarCurrentCol_00007 + 2*moveCol_00006)
{1..8}
DISCRETE aux168 #(moveRow_00009 + blocksCurrentRow_00009_00000)
{4..7}
DISCRETE aux169 #(moveCol_00009 + blocksCurrentCol_00009_00000)
{4..7}
DISCRETE aux170 #(avatarCurrentCol_00005 + moveCol_00004)
{1..7}
DISCRETE aux171 #(avatarCurrentCol_00005 + 2*moveCol_00004)
{0..8}
DISCRETE aux172 #(avatarCurrentRow_00005 + moveRow_00004)
{1..8}
DISCRETE aux173 #(avatarCurrentRow_00005 + 2*moveRow_00004)
{0..9}
DISCRETE aux175 #(moveRow_00008 + blocksCurrentRow_00008_00000)
{4..7}
DISCRETE aux176 #(moveCol_00008 + blocksCurrentCol_00008_00000)
{3..7}
DISCRETE aux177 #(moveRow_00004 + 5)
{4..6}
DISCRETE aux178 #(moveRow_00006 + blocksCurrentRow_00006_00000)
{4..7}
DISCRETE aux179 #(moveCol_00006 + blocksCurrentCol_00006_00000)
{3..7}
DISCRETE aux180 #(avatarCurrentRow_00009 + moveRow_00008)
{2..8}
DISCRETE aux181 #(avatarCurrentRow_00009 + 2*moveRow_00008)
{1..9}
DISCRETE aux182 #(avatarCurrentCol_00009 + moveCol_00008)
{1..7}
DISCRETE aux183 #(avatarCurrentCol_00009 + 2*moveCol_00008)
{0..8}
DISCRETE aux184 #(avatarCurrentRow_00002 + moveRow_00001)
{1..5}
DISCRETE aux185 #(avatarCurrentRow_00002 + 2*moveRow_00001)
{0..6}
DISCRETE aux186 #(avatarCurrentCol_00002 + moveCol_00001)
{1..5}
DISCRETE aux187 #(avatarCurrentCol_00002 + 2*moveCol_00001)
{0..6}
DISCRETE aux188 #(avatarCurrentRow_00003 + moveRow_00002)
{1..6}
DISCRETE aux189 #(avatarCurrentRow_00003 + 2*moveRow_00002)
{0..7}
DISCRETE aux190 #(avatarCurrentCol_00003 + moveCol_00002)
{1..6}
DISCRETE aux191 #(avatarCurrentCol_00003 + 2*moveCol_00002)
{0..7}
DISCRETE aux192 #(avatarCurrentRow_00004 + moveRow_00003)
{1..7}
DISCRETE aux193 #(avatarCurrentRow_00004 + 2*moveRow_00003)
{0..8}
DISCRETE aux194 #(avatarCurrentCol_00004 + moveCol_00003)
{1..7}
DISCRETE aux195 #(avatarCurrentCol_00004 + 2*moveCol_00003)
{0..8}
DISCRETE aux196 #(blocksCurrentRow_00007_00000 + moveRow_00007)
{4..7}
DISCRETE aux197 #(moveCol_00007 + blocksCurrentCol_00007_00000)
{3..7}
DISCRETE aux198 #(avatarCurrentRow_00010 + moveRow_00009)
{1..8}
DISCRETE aux199 #(avatarCurrentRow_00010 + 2*moveRow_00009)
{0..9}
DISCRETE aux200 #(avatarCurrentCol_00010 + moveCol_00009)
{1..7}
DISCRETE aux201 #(avatarCurrentCol_00010 + 2*moveCol_00009)
{0..8}
DISCRETE aux203 #(avatarCurrentCol_00006 + moveCol_00005)
{1..7}
DISCRETE aux204 #(avatarCurrentCol_00006 + 2*moveCol_00005)
{0..8}
DISCRETE aux205 #(avatarCurrentRow_00006 + moveRow_00005)
{1..8}
DISCRETE aux206 #(avatarCurrentRow_00006 + 2*moveRow_00005)
{0..9}
DISCRETE aux207 #(moveCol_00005 + 5)
{4..6}
DISCRETE aux208 #(moveRow_00005 + blocksCurrentRow_00005_00000)
{4..7}
DISCRETE aux209 #(avatarCurrentCol_00008 + moveCol_00007)
{2..7}
DISCRETE aux210 #(avatarCurrentCol_00008 + 2*moveCol_00007)
{1..8}
DISCRETE aux211 #(avatarCurrentRow_00008 + moveRow_00007)
{2..8}
DISCRETE aux212 #(avatarCurrentRow_00008 + 2*moveRow_00007)
{1..9}
**TUPLELIST**
gridInit 8 7
0 0 0 0 0 0 0 
0 2 2 2 2 2 0 
0 2 2 2 2 2 0 
0 2 2 2 2 2 0 
0 2 2 2 2 2 0 
0 2 2 2 2 2 0 
0 2 2 2 2 2 0 
0 0 0 0 0 0 0 
**VARIABLES**
ALIAS gridInit[8,7]=[[0, 0, 0, 0, 0, 0, 0], [0, 2, 2, 2, 2, 2, 0], [0, 2, 2, 2, 2, 2, 0], [0, 2, 2, 2, 2, 2, 0], [0, 2, 2, 2, 2, 2, 0], [0, 2, 2, 2, 2, 2, 0], [0, 2, 2, 2, 2, 2, 0], [0, 0, 0, 0, 0, 0, 0]]
ALIAS blocksInitRow[1]=[5]
ALIAS blocksInitCol[1]=[5]
ALIAS blocksGoalRow[1]=[6]
ALIAS blocksGoalCol[1]=[6]
**SEARCH**
PRINT[[moveRow_00000],[moveRow_00001],[moveRow_00002],[moveRow_00003],[moveRow_00004],[moveRow_00005],[moveRow_00006],[moveRow_00007],[moveRow_00008],[moveRow_00009],[moveCol_00000],[moveCol_00001],[moveCol_00002],[moveCol_00003],[moveCol_00004],[moveCol_00005],[moveCol_00006],[moveCol_00007],[moveCol_00008],[moveCol_00009],[avatarCurrentRow_00001],[avatarCurrentRow_00002],[avatarCurrentRow_00003],[avatarCurrentRow_00004],[avatarCurrentRow_00005],[avatarCurrentRow_00006],[avatarCurrentRow_00007],[avatarCurrentRow_00008],[avatarCurrentRow_00009],[avatarCurrentRow_00010],[avatarCurrentCol_00001],[avatarCurrentCol_00002],[avatarCurrentCol_00003],[avatarCurrentCol_00004],[avatarCurrentCol_00005],[avatarCurrentCol_00006],[avatarCurrentCol_00007],[avatarCurrentCol_00008],[avatarCurrentCol_00009],[avatarCurrentCol_00010],[blocksCurrentRow_00005_00000],[blocksCurrentRow_00006_00000],[blocksCurrentRow_00007_00000],[blocksCurrentRow_00008_00000],[blocksCurrentRow_00009_00000],[blocksCurrentCol_00006_00000],[blocksCurrentCol_00007_00000],[blocksCurrentCol_00008_00000],[blocksCurrentCol_00009_00000]]
VARORDER STATIC [moveRow_00000, moveRow_00001, moveRow_00002, moveRow_00003, moveRow_00004, moveRow_00005, moveRow_00006, moveRow_00007, moveRow_00008, moveRow_00009, moveCol_00000, moveCol_00001, moveCol_00002, moveCol_00003, moveCol_00004, moveCol_00005, moveCol_00006, moveCol_00007, moveCol_00008, moveCol_00009, 2, avatarCurrentRow_00001, avatarCurrentRow_00002, avatarCurrentRow_00003, avatarCurrentRow_00004, avatarCurrentRow_00005, avatarCurrentRow_00006, avatarCurrentRow_00007, avatarCurrentRow_00008, avatarCurrentRow_00009, avatarCurrentRow_00010, 2, avatarCurrentCol_00001, avatarCurrentCol_00002, avatarCurrentCol_00003, avatarCurrentCol_00004, avatarCurrentCol_00005, avatarCurrentCol_00006, avatarCurrentCol_00007, avatarCurrentCol_00008, avatarCurrentCol_00009, avatarCurrentCol_00010, 5, 5, 5, 5, 5, blocksCurrentRow_00005_00000, blocksCurrentRow_00006_00000, blocksCurrentRow_00007_00000, blocksCurrentRow_00008_00000, blocksCurrentRow_00009_00000, 6, 5, 5, 5, 5, 5, 5, blocksCurrentCol_00006_00000, blocksCurrentCol_00007_00000, blocksCurrentCol_00008_00000, blocksCurrentCol_00009_00000, 6, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0]
VARORDER AUX [moveRow_00000,moveRow_00001,moveRow_00002,moveRow_00003,moveRow_00004,moveRow_00005,moveRow_00006,moveRow_00007,moveRow_00008,moveRow_00009,moveCol_00000,moveCol_00001,moveCol_00002,moveCol_00003,moveCol_00004,moveCol_00005,moveCol_00006,moveCol_00007,moveCol_00008,moveCol_00009,avatarCurrentRow_00001,avatarCurrentRow_00002,avatarCurrentRow_00003,avatarCurrentRow_00004,avatarCurrentRow_00005,avatarCurrentRow_00006,avatarCurrentRow_00007,avatarCurrentRow_00008,avatarCurrentRow_00009,avatarCurrentRow_00010,avatarCurrentCol_00001,avatarCurrentCol_00002,avatarCurrentCol_00003,avatarCurrentCol_00004,avatarCurrentCol_00005,avatarCurrentCol_00006,avatarCurrentCol_00007,avatarCurrentCol_00008,avatarCurrentCol_00009,avatarCurrentCol_00010,blocksCurrentRow_00005_00000,blocksCurrentRow_00006_00000,blocksCurrentRow_00007_00000,blocksCurrentRow_00008_00000,blocksCurrentRow_00009_00000,blocksCurrentCol_00006_00000,blocksCurrentCol_00007_00000,blocksCurrentCol_00008_00000,blocksCurrentCol_00009_00000,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux90,aux107,aux108,aux109,aux110,aux111,aux112,aux113,aux114,aux115,aux116,aux117,aux118,aux119,aux120,aux121,aux122,aux123,aux124,aux125,aux126,aux127,aux128,aux129,aux130,aux131,aux132,aux133,aux136,aux137,aux139,aux140,aux142,aux143,aux145,aux146,aux148,aux149,aux151,aux152,aux154,aux155,aux157,aux158,aux160,aux161,aux164,aux165,aux166,aux167,aux168,aux169,aux170,aux171,aux172,aux173,aux175,aux176,aux177,aux178,aux179,aux180,aux181,aux182,aux183,aux184,aux185,aux186,aux187,aux188,aux189,aux190,aux191,aux192,aux193,aux194,aux195,aux196,aux197,aux198,aux199,aux200,aux201,aux203,aux204,aux205,aux206,aux207,aux208,aux209,aux210,aux211,aux212]
**CONSTRAINTS**
abs(aux136, moveRow_00001)
abs(aux137, moveCol_00001)
abs(aux139, moveRow_00002)
abs(aux140, moveCol_00002)
abs(aux142, moveRow_00003)
abs(aux143, moveCol_00003)
abs(aux145, moveRow_00004)
abs(aux146, moveCol_00004)
abs(aux148, moveRow_00005)
abs(aux149, moveCol_00005)
abs(aux151, moveRow_00006)
abs(aux152, moveCol_00006)
abs(aux154, moveRow_00007)
abs(aux155, moveCol_00007)
abs(aux157, moveRow_00008)
abs(aux158, moveCol_00008)
abs(aux160, moveRow_00009)
abs(aux161, moveCol_00009)
watchelement_undefzero([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2], aux107, aux113)
watchelement_undefzero([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2], aux87, aux114)
watchelement_undefzero([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2], aux86, aux115)
watchelement_undefzero([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2], aux85, aux116)
watchelement_undefzero([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2], aux90, aux117)
watchelement_undefzero([2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2], aux88, aux118)
watchelement_undefzero([2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2], aux89, aux119)
watchelement_undefzero([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2], aux84, aux120)
watchelement_undefzero([2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2], aux83, aux121)
watchelement_undefzero([2, 2, 2, 0, 0, 2, 2, 2, 2, 2], aux109, aux122)
watchelement_undefzero([2, 2, 2, 0, 0, 2, 2, 2, 2, 2], aux110, aux123)
watchelement_undefzero([2, 2, 2, 0, 0, 2, 2, 2, 2, 2], aux111, aux124)
watchelement_undefzero([2, 2, 2, 2, 2, 0, 0, 2, 2], aux82, aux125)
watchelement_undefzero([2, 2, 0, 0, 2, 2, 2, 2, 2], aux112, aux126)
watchelement_undefzero([2, 2, 0, 0, 2, 2, 2, 2], aux108, aux127)
reify(diseq(avatarCurrentRow_00007,blocksCurrentRow_00006_00000), aux128)
reify(diseq(avatarCurrentCol_00009,blocksCurrentCol_00008_00000), aux129)
reify(diseq(avatarCurrentRow_00009,blocksCurrentRow_00008_00000), aux130)
reify(diseq(avatarCurrentRow_00006,blocksCurrentRow_00005_00000), aux131)
reify(diseq(avatarCurrentRow_00010,blocksCurrentRow_00009_00000), aux132)
reify(diseq(avatarCurrentCol_00010,blocksCurrentCol_00009_00000), aux133)
diseq(aux127,0)
watched-or({w-literal(aux125,0),diseq(1,aux125)})
watched-or({watched-and({gaceq(blocksCurrentRow_00007_00000,avatarCurrentRow_00008),gaceq(blocksCurrentCol_00007_00000,avatarCurrentCol_00008)}),watched-and({gaceq(blocksCurrentCol_00007_00000,blocksCurrentCol_00008_00000),gaceq(blocksCurrentRow_00007_00000,blocksCurrentRow_00008_00000)})})
watched-or({diseq(avatarCurrentRow_00003,5),diseq(avatarCurrentCol_00003,5)})
watched-or({diseq(avatarCurrentRow_00004,5),diseq(avatarCurrentCol_00004,5)})
watched-or({diseq(avatarCurrentRow_00010,6),diseq(avatarCurrentCol_00010,6)})
ineq(1, aux118, 0)
ineq(1, aux119, 0)
watched-or({w-literal(aux121,0),diseq(aux121,1)})
diseq(0,aux118)
diseq(0,aux119)
watched-or({watched-and({w-literal(blocksCurrentCol_00009_00000,6),w-literal(blocksCurrentRow_00009_00000,6)}),watched-and({w-literal(aux132,0),w-literal(aux133,0)})})
watched-or({w-literal(aux115,0),diseq(1,aux115)})
watched-or({w-literal(aux114,0),diseq(1,aux114)})
diseq(aux126,0)
watched-or({diseq(avatarCurrentCol_00003,5),diseq(avatarCurrentRow_00003,5),watched-and({w-literal(moveRow_00002,0),w-literal(moveCol_00002,0)})})
watched-or({diseq(avatarCurrentCol_00004,5),diseq(avatarCurrentRow_00004,5),watched-and({w-literal(moveRow_00003,0),w-literal(moveCol_00003,0)})})
ineq(1, aux126, 0)
diseq(aux121,0)
diseq(aux116,0)
diseq(aux117,0)
diseq(aux113,0)
watched-or({watched-and({w-literal(aux130,0),w-literal(aux129,0)}),watched-and({gaceq(blocksCurrentRow_00008_00000,blocksCurrentRow_00009_00000),gaceq(blocksCurrentCol_00008_00000,blocksCurrentCol_00009_00000)})})
ineq(1, aux127, 0)
watched-or({diseq(avatarCurrentRow_00005,blocksCurrentRow_00005_00000),diseq(avatarCurrentCol_00005,5)})
watched-or({diseq(blocksCurrentRow_00007_00000,aux164),diseq(blocksCurrentRow_00007_00000,aux165),diseq(aux166,blocksCurrentCol_00007_00000),diseq(aux167,blocksCurrentCol_00007_00000)})
watched-or({w-literal(aux132,1),watched-and({w-literal(aux168,6),w-literal(aux169,6)}),w-literal(aux133,1)})
watched-or({diseq(aux170,5),diseq(aux171,5),diseq(blocksCurrentRow_00005_00000,aux172),diseq(blocksCurrentRow_00005_00000,aux173)})
ineq(1, aux121, 0)
ineq(1, aux116, 0)
ineq(1, aux117, 0)
ineq(1, aux113, 0)
watched-or({diseq(avatarCurrentCol_00007,blocksCurrentCol_00007_00000),diseq(avatarCurrentRow_00007,blocksCurrentRow_00007_00000)})
watched-or({w-literal(aux116,0),diseq(aux116,1)})
watched-or({w-literal(aux117,0),diseq(aux117,1)})
ineq(1, aux122, 0)
ineq(1, aux123, 0)
ineq(1, aux124, 0)
watched-or({watched-and({gaceq(blocksCurrentRow_00005_00000,blocksCurrentRow_00006_00000),w-literal(blocksCurrentCol_00006_00000,5)}),watched-and({w-literal(aux131,0),w-literal(avatarCurrentCol_00006,5)})})
watched-or({w-literal(aux130,1),watched-and({gaceq(blocksCurrentRow_00009_00000,aux175),gaceq(aux176,blocksCurrentCol_00009_00000)}),w-literal(aux129,1)})
watched-or({watched-and({gaceq(blocksCurrentCol_00006_00000,avatarCurrentCol_00007),w-literal(aux128,0)}),watched-and({gaceq(blocksCurrentRow_00007_00000,blocksCurrentRow_00006_00000),gaceq(blocksCurrentCol_00006_00000,blocksCurrentCol_00007_00000)})})
diseq(0,aux122)
diseq(0,aux123)
diseq(0,aux124)
watched-or({watched-and({gaceq(aux177,blocksCurrentRow_00005_00000),w-literal(moveCol_00004,0)}),diseq(5,avatarCurrentCol_00005),diseq(5,avatarCurrentRow_00005)})
watched-or({watched-and({gaceq(blocksCurrentRow_00007_00000,aux178),gaceq(aux179,blocksCurrentCol_00007_00000)}),diseq(blocksCurrentCol_00006_00000,avatarCurrentCol_00007),w-literal(aux128,1)})
watched-or({diseq(blocksCurrentRow_00009_00000,aux180),diseq(blocksCurrentRow_00009_00000,aux181),diseq(aux182,blocksCurrentCol_00009_00000),diseq(aux183,blocksCurrentCol_00009_00000)})
watched-or({diseq(5,aux184),diseq(5,aux185),diseq(aux186,5),diseq(aux187,5)})
watched-or({diseq(5,aux188),diseq(5,aux189),diseq(aux190,5),diseq(aux191,5)})
watched-or({diseq(5,aux192),diseq(5,aux193),diseq(aux194,5),diseq(aux195,5)})
watched-or({diseq(avatarCurrentCol_00009,blocksCurrentCol_00009_00000),diseq(avatarCurrentRow_00009,blocksCurrentRow_00009_00000)})
watched-or({watched-and({gaceq(blocksCurrentRow_00008_00000,aux196),gaceq(aux197,blocksCurrentCol_00008_00000)}),diseq(blocksCurrentRow_00007_00000,avatarCurrentRow_00008),diseq(blocksCurrentCol_00007_00000,avatarCurrentCol_00008)})
watched-or({diseq(6,aux198),diseq(6,aux199),diseq(aux200,6),diseq(aux201,6)})
ineq(1, aux120, 0)
diseq(0,aux120)
watched-or({w-literal(aux118,0),diseq(1,aux118)})
watched-or({w-literal(aux119,0),diseq(1,aux119)})
watched-or({w-literal(aux120,0),diseq(1,aux120)})
watched-or({diseq(aux203,blocksCurrentCol_00006_00000),diseq(aux204,blocksCurrentCol_00006_00000),diseq(blocksCurrentRow_00006_00000,aux205),diseq(blocksCurrentRow_00006_00000,aux206)})
ineq(1, aux125, 0)
ineq(1, aux115, 0)
ineq(1, aux114, 0)
watched-or({diseq(avatarCurrentRow_00008,blocksCurrentRow_00008_00000),diseq(avatarCurrentCol_00008,blocksCurrentCol_00008_00000)})
watched-or({watched-and({w-literal(avatarCurrentCol_00005,5),w-literal(avatarCurrentRow_00005,5)}),w-literal(blocksCurrentRow_00005_00000,5)})
diseq(0,aux125)
watched-or({watched-and({gaceq(blocksCurrentCol_00006_00000,aux207),gaceq(aux208,blocksCurrentRow_00006_00000)}),w-literal(aux131,1),diseq(5,avatarCurrentCol_00006)})
diseq(0,aux115)
diseq(0,aux114)
watched-or({diseq(aux209,blocksCurrentCol_00008_00000),diseq(aux210,blocksCurrentCol_00008_00000),diseq(blocksCurrentRow_00008_00000,aux211),diseq(blocksCurrentRow_00008_00000,aux212)})
watched-or({diseq(avatarCurrentCol_00006,blocksCurrentCol_00006_00000),diseq(avatarCurrentRow_00006,blocksCurrentRow_00006_00000)})
sumleq([moveRow_00000,moveCol_00000],1)
sumgeq([moveRow_00000,moveCol_00000],1)
sumleq([moveRow_00000,2],avatarCurrentRow_00001)
sumgeq([moveRow_00000,2],avatarCurrentRow_00001)
sumleq([aux136,aux137],1)
sumgeq([aux136,aux137],1)
sumleq([aux139,aux140],1)
sumgeq([aux139,aux140],1)
sumleq([aux142,aux143],1)
sumgeq([aux142,aux143],1)
sumleq([aux145,aux146],1)
sumgeq([aux145,aux146],1)
sumleq([aux148,aux149],1)
sumgeq([aux148,aux149],1)
sumleq([aux151,aux152],1)
sumgeq([aux151,aux152],1)
sumleq([aux154,aux155],1)
sumgeq([aux154,aux155],1)
sumleq([aux157,aux158],1)
sumgeq([aux157,aux158],1)
sumleq([aux160,aux161],1)
sumgeq([aux160,aux161],1)
sumleq([avatarCurrentCol_00001,moveCol_00001],avatarCurrentCol_00002)
sumgeq([avatarCurrentCol_00001,moveCol_00001],avatarCurrentCol_00002)
sumleq([avatarCurrentRow_00007,moveRow_00006],aux164)
sumgeq([avatarCurrentRow_00007,moveRow_00006],aux164)
weightedsumleq([1,2],[avatarCurrentRow_00007,moveRow_00006],aux165)
weightedsumgeq([1,2],[avatarCurrentRow_00007,moveRow_00006],aux165)
sumleq([avatarCurrentCol_00007,moveCol_00006],aux166)
sumgeq([avatarCurrentCol_00007,moveCol_00006],aux166)
weightedsumleq([1,2],[avatarCurrentCol_00007,moveCol_00006],aux167)
weightedsumgeq([1,2],[avatarCurrentCol_00007,moveCol_00006],aux167)
sumleq([moveRow_00009,blocksCurrentRow_00009_00000],aux168)
sumgeq([moveRow_00009,blocksCurrentRow_00009_00000],aux168)
sumleq([moveCol_00009,blocksCurrentCol_00009_00000],aux169)
sumgeq([moveCol_00009,blocksCurrentCol_00009_00000],aux169)
sumleq([avatarCurrentCol_00005,moveCol_00004],aux170)
sumgeq([avatarCurrentCol_00005,moveCol_00004],aux170)
weightedsumleq([1,2],[avatarCurrentCol_00005,moveCol_00004],aux171)
weightedsumgeq([1,2],[avatarCurrentCol_00005,moveCol_00004],aux171)
sumleq([avatarCurrentRow_00005,moveRow_00004],aux172)
sumgeq([avatarCurrentRow_00005,moveRow_00004],aux172)
weightedsumleq([1,2],[avatarCurrentRow_00005,moveRow_00004],aux173)
weightedsumgeq([1,2],[avatarCurrentRow_00005,moveRow_00004],aux173)
sumleq([moveCol_00000,2],avatarCurrentCol_00001)
sumgeq([moveCol_00000,2],avatarCurrentCol_00001)
sumleq([moveRow_00008,blocksCurrentRow_00008_00000],aux175)
sumgeq([moveRow_00008,blocksCurrentRow_00008_00000],aux175)
sumleq([moveCol_00008,blocksCurrentCol_00008_00000],aux176)
sumgeq([moveCol_00008,blocksCurrentCol_00008_00000],aux176)
sumleq([moveRow_00004,5],aux177)
sumgeq([moveRow_00004,5],aux177)
sumleq([moveRow_00006,blocksCurrentRow_00006_00000],aux178)
sumgeq([moveRow_00006,blocksCurrentRow_00006_00000],aux178)
sumleq([moveCol_00006,blocksCurrentCol_00006_00000],aux179)
sumgeq([moveCol_00006,blocksCurrentCol_00006_00000],aux179)
sumleq([avatarCurrentRow_00009,moveRow_00008],aux180)
sumgeq([avatarCurrentRow_00009,moveRow_00008],aux180)
weightedsumleq([1,2],[avatarCurrentRow_00009,moveRow_00008],aux181)
weightedsumgeq([1,2],[avatarCurrentRow_00009,moveRow_00008],aux181)
sumleq([avatarCurrentCol_00009,moveCol_00008],aux182)
sumgeq([avatarCurrentCol_00009,moveCol_00008],aux182)
weightedsumleq([1,2],[avatarCurrentCol_00009,moveCol_00008],aux183)
weightedsumgeq([1,2],[avatarCurrentCol_00009,moveCol_00008],aux183)
sumleq([avatarCurrentRow_00002,moveRow_00001],aux184)
sumgeq([avatarCurrentRow_00002,moveRow_00001],aux184)
weightedsumleq([1,2],[avatarCurrentRow_00002,moveRow_00001],aux185)
weightedsumgeq([1,2],[avatarCurrentRow_00002,moveRow_00001],aux185)
sumleq([avatarCurrentCol_00002,moveCol_00001],aux186)
sumgeq([avatarCurrentCol_00002,moveCol_00001],aux186)
weightedsumleq([1,2],[avatarCurrentCol_00002,moveCol_00001],aux187)
weightedsumgeq([1,2],[avatarCurrentCol_00002,moveCol_00001],aux187)
sumleq([avatarCurrentRow_00003,moveRow_00002],aux188)
sumgeq([avatarCurrentRow_00003,moveRow_00002],aux188)
weightedsumleq([1,2],[avatarCurrentRow_00003,moveRow_00002],aux189)
weightedsumgeq([1,2],[avatarCurrentRow_00003,moveRow_00002],aux189)
sumleq([avatarCurrentCol_00003,moveCol_00002],aux190)
sumgeq([avatarCurrentCol_00003,moveCol_00002],aux190)
weightedsumleq([1,2],[avatarCurrentCol_00003,moveCol_00002],aux191)
weightedsumgeq([1,2],[avatarCurrentCol_00003,moveCol_00002],aux191)
sumleq([avatarCurrentRow_00004,moveRow_00003],aux192)
sumgeq([avatarCurrentRow_00004,moveRow_00003],aux192)
weightedsumleq([1,2],[avatarCurrentRow_00004,moveRow_00003],aux193)
weightedsumgeq([1,2],[avatarCurrentRow_00004,moveRow_00003],aux193)
sumleq([avatarCurrentCol_00004,moveCol_00003],aux194)
sumgeq([avatarCurrentCol_00004,moveCol_00003],aux194)
weightedsumleq([1,2],[avatarCurrentCol_00004,moveCol_00003],aux195)
weightedsumgeq([1,2],[avatarCurrentCol_00004,moveCol_00003],aux195)
sumleq([blocksCurrentRow_00007_00000,moveRow_00007],aux196)
sumgeq([blocksCurrentRow_00007_00000,moveRow_00007],aux196)
sumleq([moveCol_00007,blocksCurrentCol_00007_00000],aux197)
sumgeq([moveCol_00007,blocksCurrentCol_00007_00000],aux197)
sumleq([avatarCurrentRow_00010,moveRow_00009],aux198)
sumgeq([avatarCurrentRow_00010,moveRow_00009],aux198)
weightedsumleq([1,2],[avatarCurrentRow_00010,moveRow_00009],aux199)
weightedsumgeq([1,2],[avatarCurrentRow_00010,moveRow_00009],aux199)
sumleq([avatarCurrentCol_00010,moveCol_00009],aux200)
sumgeq([avatarCurrentCol_00010,moveCol_00009],aux200)
weightedsumleq([1,2],[avatarCurrentCol_00010,moveCol_00009],aux201)
weightedsumgeq([1,2],[avatarCurrentCol_00010,moveCol_00009],aux201)
sumleq([avatarCurrentRow_00001,moveRow_00001],avatarCurrentRow_00002)
sumgeq([avatarCurrentRow_00001,moveRow_00001],avatarCurrentRow_00002)
sumleq([avatarCurrentCol_00006,moveCol_00005],aux203)
sumgeq([avatarCurrentCol_00006,moveCol_00005],aux203)
weightedsumleq([1,2],[avatarCurrentCol_00006,moveCol_00005],aux204)
weightedsumgeq([1,2],[avatarCurrentCol_00006,moveCol_00005],aux204)
sumleq([avatarCurrentRow_00006,moveRow_00005],aux205)
sumgeq([avatarCurrentRow_00006,moveRow_00005],aux205)
weightedsumleq([1,2],[avatarCurrentRow_00006,moveRow_00005],aux206)
weightedsumgeq([1,2],[avatarCurrentRow_00006,moveRow_00005],aux206)
sumleq([moveCol_00005,5],aux207)
sumgeq([moveCol_00005,5],aux207)
sumleq([moveRow_00005,blocksCurrentRow_00005_00000],aux208)
sumgeq([moveRow_00005,blocksCurrentRow_00005_00000],aux208)
sumleq([avatarCurrentCol_00008,moveCol_00007],aux209)
sumgeq([avatarCurrentCol_00008,moveCol_00007],aux209)
weightedsumleq([1,2],[avatarCurrentCol_00008,moveCol_00007],aux210)
weightedsumgeq([1,2],[avatarCurrentCol_00008,moveCol_00007],aux210)
sumleq([avatarCurrentRow_00008,moveRow_00007],aux211)
sumgeq([avatarCurrentRow_00008,moveRow_00007],aux211)
weightedsumleq([1,2],[avatarCurrentRow_00008,moveRow_00007],aux212)
weightedsumgeq([1,2],[avatarCurrentRow_00008,moveRow_00007],aux212)
weightedsumleq([7,1,1],[avatarCurrentRow_00001,avatarCurrentCol_00001,-16],aux82)
weightedsumgeq([7,1,1],[avatarCurrentRow_00001,avatarCurrentCol_00001,-16],aux82)
weightedsumleq([7,1,1],[avatarCurrentRow_00002,avatarCurrentCol_00002,-16],aux83)
weightedsumgeq([7,1,1],[avatarCurrentRow_00002,avatarCurrentCol_00002,-16],aux83)
weightedsumleq([7,1,1],[avatarCurrentRow_00003,avatarCurrentCol_00003,-16],aux84)
weightedsumgeq([7,1,1],[avatarCurrentRow_00003,avatarCurrentCol_00003,-16],aux84)
weightedsumleq([7,1,1],[avatarCurrentRow_00004,avatarCurrentCol_00004,-16],aux85)
weightedsumgeq([7,1,1],[avatarCurrentRow_00004,avatarCurrentCol_00004,-16],aux85)
weightedsumleq([7,1,1],[avatarCurrentRow_00005,avatarCurrentCol_00005,-16],aux86)
weightedsumgeq([7,1,1],[avatarCurrentRow_00005,avatarCurrentCol_00005,-16],aux86)
weightedsumleq([7,1,1],[avatarCurrentRow_00006,avatarCurrentCol_00006,-16],aux87)
weightedsumgeq([7,1,1],[avatarCurrentRow_00006,avatarCurrentCol_00006,-16],aux87)
weightedsumleq([7,1,1],[avatarCurrentRow_00007,avatarCurrentCol_00007,-24],aux88)
weightedsumgeq([7,1,1],[avatarCurrentRow_00007,avatarCurrentCol_00007,-24],aux88)
weightedsumleq([7,1,1],[avatarCurrentRow_00008,avatarCurrentCol_00008,-24],aux89)
weightedsumgeq([7,1,1],[avatarCurrentRow_00008,avatarCurrentCol_00008,-24],aux89)
weightedsumleq([7,1,1],[avatarCurrentRow_00009,avatarCurrentCol_00009,-23],aux90)
weightedsumgeq([7,1,1],[avatarCurrentRow_00009,avatarCurrentCol_00009,-23],aux90)
sumleq([avatarCurrentCol_00004,moveCol_00004],avatarCurrentCol_00005)
sumgeq([avatarCurrentCol_00004,moveCol_00004],avatarCurrentCol_00005)
sumleq([avatarCurrentRow_00004,moveRow_00004],avatarCurrentRow_00005)
sumgeq([avatarCurrentRow_00004,moveRow_00004],avatarCurrentRow_00005)
sumleq([avatarCurrentCol_00005,moveCol_00005],avatarCurrentCol_00006)
sumgeq([avatarCurrentCol_00005,moveCol_00005],avatarCurrentCol_00006)
sumleq([avatarCurrentRow_00005,moveRow_00005],avatarCurrentRow_00006)
sumgeq([avatarCurrentRow_00005,moveRow_00005],avatarCurrentRow_00006)
sumleq([avatarCurrentCol_00006,moveCol_00006],avatarCurrentCol_00007)
sumgeq([avatarCurrentCol_00006,moveCol_00006],avatarCurrentCol_00007)
sumleq([avatarCurrentRow_00006,moveRow_00006],avatarCurrentRow_00007)
sumgeq([avatarCurrentRow_00006,moveRow_00006],avatarCurrentRow_00007)
sumleq([avatarCurrentCol_00007,moveCol_00007],avatarCurrentCol_00008)
sumgeq([avatarCurrentCol_00007,moveCol_00007],avatarCurrentCol_00008)
sumleq([avatarCurrentRow_00007,moveRow_00007],avatarCurrentRow_00008)
sumgeq([avatarCurrentRow_00007,moveRow_00007],avatarCurrentRow_00008)
sumleq([avatarCurrentCol_00008,moveCol_00008],avatarCurrentCol_00009)
sumgeq([avatarCurrentCol_00008,moveCol_00008],avatarCurrentCol_00009)
sumleq([avatarCurrentRow_00008,moveRow_00008],avatarCurrentRow_00009)
sumgeq([avatarCurrentRow_00008,moveRow_00008],avatarCurrentRow_00009)
sumleq([avatarCurrentCol_00009,moveCol_00009],avatarCurrentCol_00010)
sumgeq([avatarCurrentCol_00009,moveCol_00009],avatarCurrentCol_00010)
sumleq([avatarCurrentRow_00009,moveRow_00009],avatarCurrentRow_00010)
sumgeq([avatarCurrentRow_00009,moveRow_00009],avatarCurrentRow_00010)
sumleq([avatarCurrentCol_00002,moveCol_00002],avatarCurrentCol_00003)
sumgeq([avatarCurrentCol_00002,moveCol_00002],avatarCurrentCol_00003)
sumleq([avatarCurrentRow_00002,moveRow_00002],avatarCurrentRow_00003)
sumgeq([avatarCurrentRow_00002,moveRow_00002],avatarCurrentRow_00003)
sumleq([avatarCurrentCol_00003,moveCol_00003],avatarCurrentCol_00004)
sumgeq([avatarCurrentCol_00003,moveCol_00003],avatarCurrentCol_00004)
sumleq([avatarCurrentRow_00003,moveRow_00003],avatarCurrentRow_00004)
sumgeq([avatarCurrentRow_00003,moveRow_00003],avatarCurrentRow_00004)
weightedsumleq([7,1,1],[avatarCurrentRow_00010,avatarCurrentCol_00010,-16],aux107)
weightedsumgeq([7,1,1],[avatarCurrentRow_00010,avatarCurrentCol_00010,-16],aux107)
weightedsumleq([1,7],[-35,blocksCurrentRow_00005_00000],aux108)
weightedsumgeq([1,7],[-35,blocksCurrentRow_00005_00000],aux108)
weightedsumleq([1,1,7],[blocksCurrentCol_00006_00000,-39,blocksCurrentRow_00006_00000],aux109)
weightedsumgeq([1,1,7],[blocksCurrentCol_00006_00000,-39,blocksCurrentRow_00006_00000],aux109)
weightedsumleq([7,1,1],[blocksCurrentRow_00007_00000,-39,blocksCurrentCol_00007_00000],aux110)
weightedsumgeq([7,1,1],[blocksCurrentRow_00007_00000,-39,blocksCurrentCol_00007_00000],aux110)
weightedsumleq([7,1,1],[blocksCurrentRow_00008_00000,-39,blocksCurrentCol_00008_00000],aux111)
weightedsumgeq([7,1,1],[blocksCurrentRow_00008_00000,-39,blocksCurrentCol_00008_00000],aux111)
weightedsumleq([7,1,1],[blocksCurrentRow_00009_00000,-40,blocksCurrentCol_00009_00000],aux112)
weightedsumgeq([7,1,1],[blocksCurrentRow_00009_00000,-40,blocksCurrentCol_00009_00000],aux112)
**EOF**
