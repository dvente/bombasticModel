language ESSENCE' 1.0
$ Minion SolverNodes: 3271
$ Minion SolverTotalTime: 0.147097
$ Minion SolverTimeOut: 0
$ Savile Row TotalTime: 1.384
letting avatarCurrentCol be [2, 2, 3, 2, 2, 3, 3, 2, 2, 3, 4;int(0..10)]
letting avatarCurrentRow be [2, 3, 3, 3, 4, 4, 3, 3, 2, 2, 2;int(0..10)]
letting blocksCurrentCol be [[3, 3, 3;int(1..3)], 
[3, 3, 3;int(1..3)], 
[3, 4, 3;int(1..3)], 
[3, 4, 3;int(1..3)], 
[3, 4, 3;int(1..3)], 
[3, 4, 4;int(1..3)], 
[3, 4, 4;int(1..3)], 
[3, 4, 4;int(1..3)], 
[3, 4, 4;int(1..3)], 
[4, 4, 4;int(1..3)], 
[5, 4, 4;int(1..3)];int(0..10)]
letting blocksCurrentRow be [[2, 3, 4;int(1..3)], 
[2, 3, 4;int(1..3)], 
[2, 3, 4;int(1..3)], 
[2, 3, 4;int(1..3)], 
[2, 3, 4;int(1..3)], 
[2, 3, 4;int(1..3)], 
[2, 3, 4;int(1..3)], 
[2, 3, 4;int(1..3)], 
[2, 3, 4;int(1..3)], 
[2, 3, 4;int(1..3)], 
[2, 3, 4;int(1..3)];int(0..10)]
letting gridCurrent be [[[0, 0, 0, 0, 0, 0;int(1..6)], 
[0, 2, 1, 2, 2, 0;int(1..6)], 
[0, 2, 2, 2, 0, 0;int(1..6)], 
[0, 1, 2, 2, 0, 0;int(1..6)], 
[0, 0, 0, 0, 0, 0;int(1..6)];int(1..5)], 
[[0, 0, 0, 0, 0, 0;int(1..6)], 
[0, 2, 1, 2, 2, 0;int(1..6)], 
[0, 2, 2, 2, 0, 0;int(1..6)], 
[0, 1, 2, 2, 0, 0;int(1..6)], 
[0, 0, 0, 0, 0, 0;int(1..6)];int(1..5)], 
[[0, 0, 0, 0, 0, 0;int(1..6)], 
[0, 2, 1, 2, 2, 0;int(1..6)], 
[0, 2, 2, 2, 0, 0;int(1..6)], 
[0, 1, 2, 2, 0, 0;int(1..6)], 
[0, 0, 0, 0, 0, 0;int(1..6)];int(1..5)], 
[[0, 0, 0, 0, 0, 0;int(1..6)], 
[0, 2, 1, 2, 2, 0;int(1..6)], 
[0, 2, 2, 2, 0, 0;int(1..6)], 
[0, 1, 2, 2, 0, 0;int(1..6)], 
[0, 0, 0, 0, 0, 0;int(1..6)];int(1..5)], 
[[0, 0, 0, 0, 0, 0;int(1..6)], 
[0, 2, 1, 2, 2, 0;int(1..6)], 
[0, 2, 2, 2, 0, 0;int(1..6)], 
[0, 1, 2, 2, 0, 0;int(1..6)], 
[0, 0, 0, 0, 0, 0;int(1..6)];int(1..5)], 
[[0, 0, 0, 0, 0, 0;int(1..6)], 
[0, 2, 1, 2, 2, 0;int(1..6)], 
[0, 2, 2, 2, 0, 0;int(1..6)], 
[0, 0, 2, 2, 0, 0;int(1..6)], 
[0, 0, 0, 0, 0, 0;int(1..6)];int(1..5)], 
[[0, 0, 0, 0, 0, 0;int(1..6)], 
[0, 2, 1, 2, 2, 0;int(1..6)], 
[0, 2, 2, 2, 0, 0;int(1..6)], 
[0, 0, 2, 2, 0, 0;int(1..6)], 
[0, 0, 0, 0, 0, 0;int(1..6)];int(1..5)], 
[[0, 0, 0, 0, 0, 0;int(1..6)], 
[0, 2, 1, 2, 2, 0;int(1..6)], 
[0, 2, 2, 2, 0, 0;int(1..6)], 
[0, 0, 2, 2, 0, 0;int(1..6)], 
[0, 0, 0, 0, 0, 0;int(1..6)];int(1..5)], 
[[0, 0, 0, 0, 0, 0;int(1..6)], 
[0, 2, 1, 2, 2, 0;int(1..6)], 
[0, 2, 2, 2, 0, 0;int(1..6)], 
[0, 0, 2, 2, 0, 0;int(1..6)], 
[0, 0, 0, 0, 0, 0;int(1..6)];int(1..5)], 
[[0, 0, 0, 0, 0, 0;int(1..6)], 
[0, 2, 1, 2, 2, 0;int(1..6)], 
[0, 2, 2, 2, 0, 0;int(1..6)], 
[0, 0, 2, 2, 0, 0;int(1..6)], 
[0, 0, 0, 0, 0, 0;int(1..6)];int(1..5)], 
[[0, 0, 0, 0, 0, 0;int(1..6)], 
[0, 2, 0, 2, 2, 0;int(1..6)], 
[0, 2, 2, 2, 0, 0;int(1..6)], 
[0, 0, 2, 2, 0, 0;int(1..6)], 
[0, 0, 0, 0, 0, 0;int(1..6)];int(1..5)];int(0..10)]
letting moveCol be [0, 1, -1, 0, 1, 0, -1, 0, 1, 1;int(1..10)]
letting moveRow be [1, 0, 0, 1, 0, -1, 0, -1, 0, 0;int(1..10)]
