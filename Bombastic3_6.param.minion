MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 27
# CSE_active_eliminated_expressions = 75
# CSE_active_total_size = 214
**VARIABLES**
DISCRETE moveRow_00000 #
{0..1}
DISCRETE moveRow_00001 #
{-1..1}
DISCRETE moveRow_00002 #
{-1..1}
DISCRETE moveRow_00003 #
{-1..1}
DISCRETE moveRow_00004 #
{-1..1}
DISCRETE moveRow_00005 #
{-1..1}
DISCRETE moveCol_00000 #
{0..1}
DISCRETE moveCol_00001 #
{-1..1}
DISCRETE moveCol_00002 #
{-1..1}
DISCRETE moveCol_00003 #
{-1..1}
DISCRETE moveCol_00004 #
{-1..1}
DISCRETE moveCol_00005 #
{-1..1}
DISCRETE avatarCurrentRow_00001 #
{2..3}
DISCRETE avatarCurrentRow_00002 #
{2..3}
DISCRETE avatarCurrentRow_00003 #
{2..3}
DISCRETE avatarCurrentRow_00004 #
{2..3}
DISCRETE avatarCurrentRow_00005 #
{2..3}
DISCRETE avatarCurrentRow_00006 #
{2..3}
DISCRETE avatarCurrentCol_00001 #
{2..3}
DISCRETE avatarCurrentCol_00002 #
{2..4}
DISCRETE avatarCurrentCol_00003 #
{2..4}
DISCRETE avatarCurrentCol_00004 #
{3..5}
DISCRETE avatarCurrentCol_00005 #
{3..5}
DISCRETE avatarCurrentCol_00006 #
{2..5}
DISCRETE blocksCurrentCol_00002_00000 #
{4..5}
DISCRETE blocksCurrentCol_00003_00000 #
{4..5}
DISCRETE blocksCurrentCol_00003_00001 #
{4..5}
DISCRETE blocksCurrentCol_00004_00000 #
{4..5}
DISCRETE blocksCurrentCol_00004_00001 #
{4..5}
DISCRETE blocksCurrentCol_00005_00000 #
{4..5}
DISCRETE blocksCurrentCol_00005_00001 #
{4..5}
DISCRETE gridCurrent_00001_00001_00002 #
{0..2}
DISCRETE gridCurrent_00002_00001_00002 #
{0..2}
DISCRETE gridCurrent_00003_00001_00002 #
{0..2}
DISCRETE gridCurrent_00004_00001_00002 #
{0..2}
DISCRETE gridCurrent_00005_00001_00002 #
{0..2}
DISCRETE gridCurrent_00006_00001_00002 #
{0..2}
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([gridCurrent_00005_00001_00002, 2, 2, 0, 0, 2, 2, 2, 2;int(1..9)], (6*avatarCurrentRow_00005 + avatarCurrentCol_00005-15))
{0..2}
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, gridCurrent_00003_00001_00002, 2, 2, 0, 0, 2, 2, 2;int(1..9)], (6*avatarCurrentRow_00003 + avatarCurrentCol_00003-14))
{0..2}
DISCRETE aux60 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([gridCurrent_00004_00001_00002, 2, 2, 0, 0, 2, 2, 2, 2;int(1..9)], (6*avatarCurrentRow_00004 + avatarCurrentCol_00004-15))
{0..2}
DISCRETE aux61 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, gridCurrent_00002_00001_00002, 2, 2, 0, 0, 2, 2, 2;int(1..9)], (6*avatarCurrentRow_00002 + avatarCurrentCol_00002-14))
{0..2}
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, gridCurrent_00001_00001_00002, 2, 2, 0, 0, 2, 2;int(1..8)], (6*avatarCurrentRow_00001 + avatarCurrentCol_00001-14))
{0..2}
BOOL aux63 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00004 + moveCol_00004) != blocksCurrentCol_00004_00001)
BOOL aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (blocksCurrentCol_00005_00001 != (avatarCurrentCol_00005 + moveCol_00005))
BOOL aux65 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00002 + moveCol_00002) != blocksCurrentCol_00002_00000)
BOOL aux66 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00004 + moveCol_00004) != blocksCurrentCol_00004_00000)
BOOL aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (blocksCurrentCol_00005_00000 != (avatarCurrentCol_00005 + moveCol_00005))
BOOL aux68 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00003 + moveCol_00003) != blocksCurrentCol_00003_00000)
BOOL aux69 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00003 + moveCol_00003) != blocksCurrentCol_00003_00001)
DISCRETE aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (6*avatarCurrentRow_00001 + avatarCurrentCol_00001-14)
{0..7}
DISCRETE aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (6*avatarCurrentRow_00002 + avatarCurrentCol_00002-14)
{0..8}
DISCRETE aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (6*avatarCurrentRow_00005 + avatarCurrentCol_00005-15)
{0..8}
DISCRETE aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (6*avatarCurrentRow_00003 + avatarCurrentCol_00003-14)
{0..8}
DISCRETE aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (6*avatarCurrentRow_00004 + avatarCurrentCol_00004-15)
{0..8}
DISCRETE aux85 #(6*avatarCurrentRow_00006 + avatarCurrentCol_00006-14)
{0..9}
DISCRETE aux86 #SafeElement([2, gridCurrent_00006_00001_00002, 2, 2, 0, 0, 2, 2, 2, 2;int(1..10)], aux85)
{0..2}
BOOL aux88 #|moveRow_00001|
BOOL aux89 #|moveCol_00001|
BOOL aux91 #|moveRow_00002|
BOOL aux92 #|moveCol_00002|
BOOL aux94 #|moveRow_00003|
BOOL aux95 #|moveCol_00003|
BOOL aux97 #|moveRow_00004|
BOOL aux98 #|moveCol_00004|
BOOL aux100 #|moveRow_00005|
BOOL aux101 #|moveCol_00005|
DISCRETE aux105 #SafeElement([2, gridCurrent_00002_00001_00002, 2, 2, 0, 0, 2, 2;int(1..8)], aux70)
{0..2}
DISCRETE aux106 #SafeElement([2, gridCurrent_00003_00001_00002, 2, 2, 0, 0, 2, 2, 2;int(1..9)], aux71)
{0..2}
DISCRETE aux107 #SafeElement([2, gridCurrent_00004_00001_00002, 2, 2, 0, 0, 2, 2, 2;int(1..9)], aux73)
{0..2}
DISCRETE aux108 #SafeElement([gridCurrent_00005_00001_00002, 2, 2, 0, 0, 2, 2, 2, 2;int(1..9)], aux74)
{0..2}
DISCRETE aux109 #SafeElement([gridCurrent_00006_00001_00002, 2, 2, 0, 0, 2, 2, 2, 2;int(1..9)], aux72)
{0..2}
DISCRETE aux110 #(moveCol_00001 + 4)
{3..5}
DISCRETE aux111 #(moveCol_00002 + blocksCurrentCol_00002_00000)
{3..6}
DISCRETE aux112 #(moveCol_00002 + 4)
{3..5}
DISCRETE aux113 #(moveCol_00003 + blocksCurrentCol_00003_00000)
{3..6}
DISCRETE aux114 #(moveCol_00003 + blocksCurrentCol_00003_00001)
{3..6}
DISCRETE aux115 #(moveCol_00004 + blocksCurrentCol_00004_00000)
{3..6}
DISCRETE aux116 #(moveCol_00004 + blocksCurrentCol_00004_00001)
{3..6}
DISCRETE aux117 #(blocksCurrentCol_00005_00000 + moveCol_00005)
{3..6}
DISCRETE aux118 #(blocksCurrentCol_00005_00001 + moveCol_00005)
{3..6}
BOOL aux119 #(blocksCurrentCol_00002_00000-4)
DISCRETE aux120 #SafeElement([2, 2;int(1..2)], aux119)
{0..2}
BOOL aux121 #(-4 + blocksCurrentCol_00003_00000)
DISCRETE aux122 #SafeElement([2, 2;int(1..2)], aux121)
{0..2}
BOOL aux123 #(-4 + blocksCurrentCol_00003_00001)
DISCRETE aux124 #SafeElement([2, 2;int(1..2)], aux123)
{0..2}
BOOL aux125 #(-4 + blocksCurrentCol_00004_00000)
DISCRETE aux126 #SafeElement([2, 2;int(1..2)], aux125)
{0..2}
BOOL aux127 #(-4 + blocksCurrentCol_00004_00001)
DISCRETE aux128 #SafeElement([2, 2;int(1..2)], aux127)
{0..2}
BOOL aux129 #(blocksCurrentCol_00005_00000-4)
DISCRETE aux130 #SafeElement([2, 2;int(1..2)], aux129)
{0..2}
BOOL aux131 #(blocksCurrentCol_00005_00001-4)
DISCRETE aux132 #SafeElement([2, 2;int(1..2)], aux131)
{0..2}
**TUPLELIST**
gridInit 4 6
0 0 0 0 0 0 
0 2 1 2 2 0 
0 2 2 2 2 0 
0 0 0 0 0 0 
**VARIABLES**
ALIAS gridInit[4,6]=[[0, 0, 0, 0, 0, 0], [0, 2, 1, 2, 2, 0], [0, 2, 2, 2, 2, 0], [0, 0, 0, 0, 0, 0]]
ALIAS blocksInitRow[2]=[2, 3]
ALIAS blocksInitCol[2]=[4, 4]
ALIAS blocksGoalRow[2]=[2, 3]
ALIAS blocksGoalCol[2]=[5, 5]
**SEARCH**
PRINT[[moveRow_00000],[moveRow_00001],[moveRow_00002],[moveRow_00003],[moveRow_00004],[moveRow_00005],[moveCol_00000],[moveCol_00001],[moveCol_00002],[moveCol_00003],[moveCol_00004],[moveCol_00005],[avatarCurrentRow_00001],[avatarCurrentRow_00002],[avatarCurrentRow_00003],[avatarCurrentRow_00004],[avatarCurrentRow_00005],[avatarCurrentRow_00006],[avatarCurrentCol_00001],[avatarCurrentCol_00002],[avatarCurrentCol_00003],[avatarCurrentCol_00004],[avatarCurrentCol_00005],[avatarCurrentCol_00006],[blocksCurrentCol_00002_00000],[blocksCurrentCol_00003_00000],[blocksCurrentCol_00003_00001],[blocksCurrentCol_00004_00000],[blocksCurrentCol_00004_00001],[blocksCurrentCol_00005_00000],[blocksCurrentCol_00005_00001],[gridCurrent_00001_00001_00002],[gridCurrent_00002_00001_00002],[gridCurrent_00003_00001_00002],[gridCurrent_00004_00001_00002],[gridCurrent_00005_00001_00002],[gridCurrent_00006_00001_00002]]
VARORDER STATIC [moveRow_00000, moveRow_00001, moveRow_00002, moveRow_00003, moveRow_00004, moveRow_00005, moveCol_00000, moveCol_00001, moveCol_00002, moveCol_00003, moveCol_00004, moveCol_00005, 2, avatarCurrentRow_00001, avatarCurrentRow_00002, avatarCurrentRow_00003, avatarCurrentRow_00004, avatarCurrentRow_00005, avatarCurrentRow_00006, 2, avatarCurrentCol_00001, avatarCurrentCol_00002, avatarCurrentCol_00003, avatarCurrentCol_00004, avatarCurrentCol_00005, avatarCurrentCol_00006, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 4, 4, 4, 4, blocksCurrentCol_00002_00000, 4, blocksCurrentCol_00003_00000, blocksCurrentCol_00003_00001, blocksCurrentCol_00004_00000, blocksCurrentCol_00004_00001, blocksCurrentCol_00005_00000, blocksCurrentCol_00005_00001, 5, 5, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, gridCurrent_00001_00001_00002, 2, 2, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, gridCurrent_00002_00001_00002, 2, 2, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, gridCurrent_00003_00001_00002, 2, 2, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, gridCurrent_00004_00001_00002, 2, 2, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, gridCurrent_00005_00001_00002, 2, 2, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, gridCurrent_00006_00001_00002, 2, 2, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0]
VARORDER AUX [moveRow_00000,moveRow_00001,moveRow_00002,moveRow_00003,moveRow_00004,moveRow_00005,moveCol_00000,moveCol_00001,moveCol_00002,moveCol_00003,moveCol_00004,moveCol_00005,avatarCurrentRow_00001,avatarCurrentRow_00002,avatarCurrentRow_00003,avatarCurrentRow_00004,avatarCurrentRow_00005,avatarCurrentRow_00006,avatarCurrentCol_00001,avatarCurrentCol_00002,avatarCurrentCol_00003,avatarCurrentCol_00004,avatarCurrentCol_00005,avatarCurrentCol_00006,blocksCurrentCol_00002_00000,blocksCurrentCol_00003_00000,blocksCurrentCol_00003_00001,blocksCurrentCol_00004_00000,blocksCurrentCol_00004_00001,blocksCurrentCol_00005_00000,blocksCurrentCol_00005_00001,gridCurrent_00001_00001_00002,gridCurrent_00002_00001_00002,gridCurrent_00003_00001_00002,gridCurrent_00004_00001_00002,gridCurrent_00005_00001_00002,gridCurrent_00006_00001_00002,aux58,aux59,aux60,aux61,aux62,aux63,aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,aux72,aux73,aux74,aux85,aux86,aux88,aux89,aux91,aux92,aux94,aux95,aux97,aux98,aux100,aux101,aux105,aux106,aux107,aux108,aux109,aux110,aux111,aux112,aux113,aux114,aux115,aux116,aux117,aux118,aux119,aux120,aux121,aux122,aux123,aux124,aux125,aux126,aux127,aux128,aux129,aux130,aux131,aux132]
**CONSTRAINTS**
watchelement_undefzero([2, gridCurrent_00006_00001_00002, 2, 2, 0, 0, 2, 2, 2, 2], aux85, aux86)
abs(aux88, moveRow_00001)
abs(aux89, moveCol_00001)
abs(aux91, moveRow_00002)
abs(aux92, moveCol_00002)
abs(aux94, moveRow_00003)
abs(aux95, moveCol_00003)
abs(aux97, moveRow_00004)
abs(aux98, moveCol_00004)
abs(aux100, moveRow_00005)
abs(aux101, moveCol_00005)
watchelement_undefzero([2, gridCurrent_00002_00001_00002, 2, 2, 0, 0, 2, 2], aux70, aux105)
watchelement_undefzero([2, gridCurrent_00003_00001_00002, 2, 2, 0, 0, 2, 2, 2], aux71, aux106)
watchelement_undefzero([2, gridCurrent_00004_00001_00002, 2, 2, 0, 0, 2, 2, 2], aux73, aux107)
watchelement_undefzero([gridCurrent_00005_00001_00002, 2, 2, 0, 0, 2, 2, 2, 2], aux74, aux108)
watchelement_undefzero([gridCurrent_00006_00001_00002, 2, 2, 0, 0, 2, 2, 2, 2], aux72, aux109)
watchelement_undefzero([2, 2], aux119, aux120)
watchelement_undefzero([2, 2], aux121, aux122)
watchelement_undefzero([2, 2], aux123, aux124)
watchelement_undefzero([2, 2], aux125, aux126)
watchelement_undefzero([2, 2], aux127, aux128)
watchelement_undefzero([2, 2], aux129, aux130)
watchelement_undefzero([2, 2], aux131, aux132)
watchelement_undefzero([gridCurrent_00005_00001_00002, 2, 2, 0, 0, 2, 2, 2, 2], aux72, aux58)
watchelement_undefzero([2, gridCurrent_00003_00001_00002, 2, 2, 0, 0, 2, 2, 2], aux73, aux59)
watchelement_undefzero([gridCurrent_00004_00001_00002, 2, 2, 0, 0, 2, 2, 2, 2], aux74, aux60)
watchelement_undefzero([2, gridCurrent_00002_00001_00002, 2, 2, 0, 0, 2, 2, 2], aux71, aux61)
watchelement_undefzero([2, gridCurrent_00001_00001_00002, 2, 2, 0, 0, 2, 2], aux70, aux62)
reify(diseq(avatarCurrentCol_00005,blocksCurrentCol_00004_00001), aux63)
reify(diseq(blocksCurrentCol_00005_00001,avatarCurrentCol_00006), aux64)
reify(diseq(avatarCurrentCol_00003,blocksCurrentCol_00002_00000), aux65)
reify(diseq(avatarCurrentCol_00005,blocksCurrentCol_00004_00000), aux66)
reify(diseq(blocksCurrentCol_00005_00000,avatarCurrentCol_00006), aux67)
reify(diseq(avatarCurrentCol_00004,blocksCurrentCol_00003_00000), aux68)
reify(diseq(avatarCurrentCol_00004,blocksCurrentCol_00003_00001), aux69)
diseq(0,aux62)
diseq(0,aux61)
diseq(0,aux59)
diseq(0,aux60)
diseq(aux58,0)
diseq(aux86,0)
watched-or({diseq(0,gridCurrent_00001_00001_00002),w-literal(gridCurrent_00002_00001_00002,0)})
watched-or({w-literal(gridCurrent_00003_00001_00002,0),diseq(0,gridCurrent_00002_00001_00002)})
watched-or({w-literal(gridCurrent_00004_00001_00002,0),diseq(0,gridCurrent_00003_00001_00002)})
watched-or({w-literal(gridCurrent_00005_00001_00002,0),diseq(0,gridCurrent_00004_00001_00002)})
watched-or({w-literal(gridCurrent_00006_00001_00002,0),diseq(0,gridCurrent_00005_00001_00002)})
watched-or({diseq(2,gridCurrent_00001_00001_00002),w-literal(gridCurrent_00002_00001_00002,2)})
watched-or({w-literal(gridCurrent_00003_00001_00002,2),diseq(2,gridCurrent_00002_00001_00002)})
watched-or({w-literal(gridCurrent_00004_00001_00002,2),diseq(2,gridCurrent_00003_00001_00002)})
watched-or({w-literal(gridCurrent_00005_00001_00002,2),diseq(2,gridCurrent_00004_00001_00002)})
watched-or({w-literal(gridCurrent_00006_00001_00002,2),diseq(2,gridCurrent_00005_00001_00002)})
watched-or({diseq(1,aux62),w-literal(aux105,0)})
watched-or({diseq(1,aux61),w-literal(aux106,0)})
watched-or({diseq(1,aux59),w-literal(aux107,0)})
watched-or({w-literal(aux108,0),diseq(1,aux60)})
watched-or({diseq(aux58,1),w-literal(aux109,0)})
watched-or({diseq(2,avatarCurrentRow_00002),diseq(avatarCurrentCol_00002,4),watched-and({gaceq(aux110,blocksCurrentCol_00002_00000),w-literal(moveRow_00001,0)})})
watched-or({diseq(3,avatarCurrentRow_00002),diseq(avatarCurrentCol_00002,4),watched-and({w-literal(moveRow_00001,0),w-literal(moveCol_00001,0)})})
watched-or({diseq(2,avatarCurrentRow_00003),w-literal(aux65,1),watched-and({w-literal(moveRow_00002,0),gaceq(aux111,blocksCurrentCol_00003_00000)})})
watched-or({diseq(3,avatarCurrentRow_00003),watched-and({gaceq(aux112,blocksCurrentCol_00003_00001),w-literal(moveRow_00002,0)}),diseq(avatarCurrentCol_00003,4)})
watched-or({diseq(2,avatarCurrentRow_00004),watched-and({gaceq(aux113,blocksCurrentCol_00004_00000),w-literal(moveRow_00003,0)}),w-literal(aux68,1)})
watched-or({diseq(3,avatarCurrentRow_00004),watched-and({gaceq(aux114,blocksCurrentCol_00004_00001),w-literal(moveRow_00003,0)}),w-literal(aux69,1)})
watched-or({diseq(2,avatarCurrentRow_00005),watched-and({w-literal(moveRow_00004,0),gaceq(blocksCurrentCol_00005_00000,aux115)}),w-literal(aux66,1)})
watched-or({diseq(3,avatarCurrentRow_00005),watched-and({w-literal(moveRow_00004,0),gaceq(blocksCurrentCol_00005_00001,aux116)}),w-literal(aux63,1)})
watched-or({watched-and({w-literal(moveRow_00005,0),w-literal(aux117,5)}),diseq(2,avatarCurrentRow_00006),w-literal(aux67,1)})
watched-or({watched-and({w-literal(moveRow_00005,0),w-literal(aux118,5)}),diseq(3,avatarCurrentRow_00006),w-literal(aux64,1)})
watched-or({watched-and({w-literal(avatarCurrentRow_00002,2),w-literal(avatarCurrentCol_00002,4)}),w-literal(blocksCurrentCol_00002_00000,4)})
watched-or({gaceq(blocksCurrentCol_00002_00000,blocksCurrentCol_00003_00000),watched-and({w-literal(avatarCurrentRow_00003,2),w-literal(aux65,0)})})
watched-or({watched-and({w-literal(avatarCurrentRow_00003,3),w-literal(avatarCurrentCol_00003,4)}),w-literal(blocksCurrentCol_00003_00001,4)})
watched-or({gaceq(blocksCurrentCol_00003_00000,blocksCurrentCol_00004_00000),watched-and({w-literal(avatarCurrentRow_00004,2),w-literal(aux68,0)})})
watched-or({gaceq(blocksCurrentCol_00003_00001,blocksCurrentCol_00004_00001),watched-and({w-literal(avatarCurrentRow_00004,3),w-literal(aux69,0)})})
watched-or({watched-and({w-literal(avatarCurrentRow_00005,2),w-literal(aux66,0)}),gaceq(blocksCurrentCol_00005_00000,blocksCurrentCol_00004_00000)})
watched-or({watched-and({w-literal(avatarCurrentRow_00005,3),w-literal(aux63,0)}),gaceq(blocksCurrentCol_00005_00001,blocksCurrentCol_00004_00001)})
watched-or({watched-and({w-literal(avatarCurrentRow_00006,2),w-literal(aux67,0)}),w-literal(blocksCurrentCol_00005_00000,5)})
watched-or({watched-and({w-literal(avatarCurrentRow_00006,3),w-literal(aux64,0)}),w-literal(blocksCurrentCol_00005_00001,5)})
diseq(0,aux120)
diseq(aux122,0)
diseq(aux124,0)
diseq(0,aux126)
diseq(0,aux128)
diseq(0,aux130)
diseq(0,aux132)
weightedsumleq([6,1,1],[avatarCurrentRow_00006,avatarCurrentCol_00006,-14],aux85)
weightedsumgeq([6,1,1],[avatarCurrentRow_00006,avatarCurrentCol_00006,-14],aux85)
sumleq([moveRow_00000,moveCol_00000],1)
sumgeq([moveRow_00000,moveCol_00000],1)
sumleq([aux88,aux89],1)
sumgeq([aux88,aux89],1)
sumleq([aux91,aux92],1)
sumgeq([aux91,aux92],1)
sumleq([aux94,aux95],1)
sumgeq([aux94,aux95],1)
sumleq([aux97,aux98],1)
sumgeq([aux97,aux98],1)
sumleq([aux100,aux101],1)
sumgeq([aux100,aux101],1)
sumleq([moveCol_00000,2],avatarCurrentCol_00001)
sumgeq([moveCol_00000,2],avatarCurrentCol_00001)
sumleq([moveRow_00000,2],avatarCurrentRow_00001)
sumgeq([moveRow_00000,2],avatarCurrentRow_00001)
sumleq([moveCol_00001,4],aux110)
sumgeq([moveCol_00001,4],aux110)
sumleq([moveCol_00002,blocksCurrentCol_00002_00000],aux111)
sumgeq([moveCol_00002,blocksCurrentCol_00002_00000],aux111)
sumleq([moveCol_00002,4],aux112)
sumgeq([moveCol_00002,4],aux112)
sumleq([moveCol_00003,blocksCurrentCol_00003_00000],aux113)
sumgeq([moveCol_00003,blocksCurrentCol_00003_00000],aux113)
sumleq([moveCol_00003,blocksCurrentCol_00003_00001],aux114)
sumgeq([moveCol_00003,blocksCurrentCol_00003_00001],aux114)
sumleq([moveCol_00004,blocksCurrentCol_00004_00000],aux115)
sumgeq([moveCol_00004,blocksCurrentCol_00004_00000],aux115)
sumleq([moveCol_00004,blocksCurrentCol_00004_00001],aux116)
sumgeq([moveCol_00004,blocksCurrentCol_00004_00001],aux116)
sumleq([blocksCurrentCol_00005_00000,moveCol_00005],aux117)
sumgeq([blocksCurrentCol_00005_00000,moveCol_00005],aux117)
sumleq([blocksCurrentCol_00005_00001,moveCol_00005],aux118)
sumgeq([blocksCurrentCol_00005_00001,moveCol_00005],aux118)
sumleq([blocksCurrentCol_00002_00000,-4],aux119)
sumgeq([blocksCurrentCol_00002_00000,-4],aux119)
sumleq([-4,blocksCurrentCol_00003_00000],aux121)
sumgeq([-4,blocksCurrentCol_00003_00000],aux121)
sumleq([-4,blocksCurrentCol_00003_00001],aux123)
sumgeq([-4,blocksCurrentCol_00003_00001],aux123)
sumleq([-4,blocksCurrentCol_00004_00000],aux125)
sumgeq([-4,blocksCurrentCol_00004_00000],aux125)
sumleq([-4,blocksCurrentCol_00004_00001],aux127)
sumgeq([-4,blocksCurrentCol_00004_00001],aux127)
sumleq([blocksCurrentCol_00005_00000,-4],aux129)
sumgeq([blocksCurrentCol_00005_00000,-4],aux129)
sumleq([blocksCurrentCol_00005_00001,-4],aux131)
sumgeq([blocksCurrentCol_00005_00001,-4],aux131)
weightedsumleq([6,1,1],[avatarCurrentRow_00001,avatarCurrentCol_00001,-14],aux70)
weightedsumgeq([6,1,1],[avatarCurrentRow_00001,avatarCurrentCol_00001,-14],aux70)
weightedsumleq([6,1,1],[avatarCurrentRow_00002,avatarCurrentCol_00002,-14],aux71)
weightedsumgeq([6,1,1],[avatarCurrentRow_00002,avatarCurrentCol_00002,-14],aux71)
weightedsumleq([6,1,1],[avatarCurrentRow_00005,avatarCurrentCol_00005,-15],aux72)
weightedsumgeq([6,1,1],[avatarCurrentRow_00005,avatarCurrentCol_00005,-15],aux72)
weightedsumleq([6,1,1],[avatarCurrentRow_00003,avatarCurrentCol_00003,-14],aux73)
weightedsumgeq([6,1,1],[avatarCurrentRow_00003,avatarCurrentCol_00003,-14],aux73)
weightedsumleq([6,1,1],[avatarCurrentRow_00004,avatarCurrentCol_00004,-15],aux74)
weightedsumgeq([6,1,1],[avatarCurrentRow_00004,avatarCurrentCol_00004,-15],aux74)
sumleq([avatarCurrentCol_00004,moveCol_00004],avatarCurrentCol_00005)
sumgeq([avatarCurrentCol_00004,moveCol_00004],avatarCurrentCol_00005)
sumleq([avatarCurrentCol_00003,moveCol_00003],avatarCurrentCol_00004)
sumgeq([avatarCurrentCol_00003,moveCol_00003],avatarCurrentCol_00004)
sumleq([avatarCurrentCol_00002,moveCol_00002],avatarCurrentCol_00003)
sumgeq([avatarCurrentCol_00002,moveCol_00002],avatarCurrentCol_00003)
sumleq([avatarCurrentCol_00005,moveCol_00005],avatarCurrentCol_00006)
sumgeq([avatarCurrentCol_00005,moveCol_00005],avatarCurrentCol_00006)
sumleq([avatarCurrentRow_00001,moveRow_00001],avatarCurrentRow_00002)
sumgeq([avatarCurrentRow_00001,moveRow_00001],avatarCurrentRow_00002)
sumleq([avatarCurrentRow_00002,moveRow_00002],avatarCurrentRow_00003)
sumgeq([avatarCurrentRow_00002,moveRow_00002],avatarCurrentRow_00003)
sumleq([avatarCurrentRow_00003,moveRow_00003],avatarCurrentRow_00004)
sumgeq([avatarCurrentRow_00003,moveRow_00003],avatarCurrentRow_00004)
sumleq([avatarCurrentRow_00004,moveRow_00004],avatarCurrentRow_00005)
sumgeq([avatarCurrentRow_00004,moveRow_00004],avatarCurrentRow_00005)
sumleq([avatarCurrentRow_00005,moveRow_00005],avatarCurrentRow_00006)
sumgeq([avatarCurrentRow_00005,moveRow_00005],avatarCurrentRow_00006)
sumleq([avatarCurrentCol_00001,moveCol_00001],avatarCurrentCol_00002)
sumgeq([avatarCurrentCol_00001,moveCol_00001],avatarCurrentCol_00002)
**EOF**
