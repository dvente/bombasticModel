MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 112
# CSE_active_eliminated_expressions = 340
# CSE_active_total_size = 1317
**VARIABLES**
DISCRETE moveRow_00000 #
{0..1}
DISCRETE moveRow_00001 #
{-1..1}
DISCRETE moveRow_00002 #
{-1..1}
DISCRETE moveRow_00003 #
{-1..1}
DISCRETE moveRow_00004 #
{-1..1}
DISCRETE moveRow_00005 #
{-1..1}
DISCRETE moveRow_00006 #
{-1..1}
DISCRETE moveRow_00007 #
{-1..1}
DISCRETE moveRow_00008 #
{-1..1}
DISCRETE moveRow_00009 #
{-1..1}
DISCRETE moveCol_00000 #
{0..1}
DISCRETE moveCol_00001 #
{-1..1}
DISCRETE moveCol_00002 #
{-1..1}
DISCRETE moveCol_00003 #
{-1..1}
DISCRETE moveCol_00004 #
{-1..1}
DISCRETE moveCol_00005 #
{-1..1}
DISCRETE moveCol_00006 #
{-1..1}
DISCRETE moveCol_00007 #
{-1..1}
DISCRETE moveCol_00008 #
{-1..1}
DISCRETE moveCol_00009 #
{-1..1}
DISCRETE avatarCurrentRow_00001 #
{2..3}
DISCRETE avatarCurrentRow_00002 #
{2..4}
DISCRETE avatarCurrentRow_00003 #
{2..4}
DISCRETE avatarCurrentRow_00004 #
{2..4}
DISCRETE avatarCurrentRow_00005 #
{2..4}
DISCRETE avatarCurrentRow_00006 #
{2..4}
DISCRETE avatarCurrentRow_00007 #
{2..4}
DISCRETE avatarCurrentRow_00008 #
{2..4}
DISCRETE avatarCurrentRow_00009 #
{2..4}
DISCRETE avatarCurrentRow_00010 #
{2..4}
DISCRETE avatarCurrentCol_00001 #
{2..3}
DISCRETE avatarCurrentCol_00002 #
{2..4}
DISCRETE avatarCurrentCol_00003 #
{2..4}
DISCRETE avatarCurrentCol_00004 #
{2..4}
DISCRETE avatarCurrentCol_00005 #
{2..5}
DISCRETE avatarCurrentCol_00006 #
{2..5}
DISCRETE avatarCurrentCol_00007 #
{2..5}
DISCRETE avatarCurrentCol_00008 #
{2..4}
DISCRETE avatarCurrentCol_00009 #
{2..4}
DISCRETE avatarCurrentCol_00010 #
{2..4}
DISCRETE blocksCurrentCol_00001_00000 #
{3..4}
DISCRETE blocksCurrentCol_00002_00000 #
{3..5}
DISCRETE blocksCurrentCol_00002_00001 #
{3..4}
DISCRETE blocksCurrentCol_00003_00000 #
{3..5}
DISCRETE blocksCurrentCol_00003_00001 #
{3..4}
DISCRETE blocksCurrentCol_00003_00002 #
{3..4}
DISCRETE blocksCurrentCol_00004_00000 #
{3..5}
DISCRETE blocksCurrentCol_00004_00001 #
{3..4}
DISCRETE blocksCurrentCol_00004_00002 #
{3..4}
DISCRETE blocksCurrentCol_00005_00000 #
{3..5}
DISCRETE blocksCurrentCol_00005_00001 #
{3..4}
DISCRETE blocksCurrentCol_00005_00002 #
{3..4}
DISCRETE blocksCurrentCol_00006_00000 #
{3..5}
DISCRETE blocksCurrentCol_00006_00001 #
{3..4}
DISCRETE blocksCurrentCol_00006_00002 #
{3..4}
DISCRETE blocksCurrentCol_00007_00000 #
{3..5}
DISCRETE blocksCurrentCol_00007_00001 #
{3..4}
DISCRETE blocksCurrentCol_00007_00002 #
{3..4}
DISCRETE blocksCurrentCol_00008_00000 #
{3..5}
DISCRETE blocksCurrentCol_00008_00001 #
{3..4}
DISCRETE blocksCurrentCol_00008_00002 #
{3..4}
DISCRETE blocksCurrentCol_00009_00000 #
{4..5}
DISCRETE blocksCurrentCol_00009_00001 #
{3..4}
DISCRETE blocksCurrentCol_00009_00002 #
{3..4}
DISCRETE gridCurrent_00002_00001_00002 #
{0..1}
DISCRETE gridCurrent_00003_00001_00002 #
{0..1}
DISCRETE gridCurrent_00003_00003_00001 #
{0..1}
DISCRETE gridCurrent_00004_00001_00002 #
{0..1}
DISCRETE gridCurrent_00004_00003_00001 #
{0..1}
DISCRETE gridCurrent_00005_00001_00002 #
{0..1}
DISCRETE gridCurrent_00005_00003_00001 #
{0..1}
DISCRETE gridCurrent_00006_00001_00002 #
{0..1}
DISCRETE gridCurrent_00006_00003_00001 #
{0..1}
DISCRETE gridCurrent_00007_00001_00002 #
{0..1}
DISCRETE gridCurrent_00007_00003_00001 #
{0..1}
DISCRETE gridCurrent_00008_00001_00002 #
{0..1}
DISCRETE gridCurrent_00008_00003_00001 #
{0..1}
DISCRETE gridCurrent_00009_00001_00002 #
{0..1}
DISCRETE gridCurrent_00009_00003_00001 #
{0..1}
DISCRETE gridCurrent_00010_00001_00002 #
{0..1}
DISCRETE gridCurrent_00010_00003_00001 #
{0..1}
BOOL aux82 #Active-CSE: 3 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00006 + 2*moveRow_00005)) \/ ((avatarCurrentCol_00006 + 2*moveCol_00005) != blocksCurrentCol_00006_00000)) /\ ((3 != (avatarCurrentRow_00006 + 2*moveRow_00005)) \/ ((avatarCurrentCol_00006 + 2*moveCol_00005) != blocksCurrentCol_00006_00001)) /\ ((4 != (avatarCurrentRow_00006 + 2*moveRow_00005)) \/ ((avatarCurrentCol_00006 + 2*moveCol_00005) != blocksCurrentCol_00006_00002)))
BOOL aux83 #Active-CSE: 3 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00002 + 2*moveRow_00001)) \/ ((avatarCurrentCol_00002 + 2*moveCol_00001) != blocksCurrentCol_00002_00000)) /\ ((3 != (avatarCurrentRow_00002 + 2*moveRow_00001)) \/ ((avatarCurrentCol_00002 + 2*moveCol_00001) != blocksCurrentCol_00002_00001)) /\ ((4 != (avatarCurrentRow_00002 + 2*moveRow_00001)) \/ ((avatarCurrentCol_00002 + 2*moveCol_00001) != 3)))
BOOL aux84 #Active-CSE: 3 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00004 + 2*moveRow_00003)) \/ ((avatarCurrentCol_00004 + 2*moveCol_00003) != blocksCurrentCol_00004_00000)) /\ ((3 != (avatarCurrentRow_00004 + 2*moveRow_00003)) \/ ((avatarCurrentCol_00004 + 2*moveCol_00003) != blocksCurrentCol_00004_00001)) /\ ((4 != (avatarCurrentRow_00004 + 2*moveRow_00003)) \/ ((avatarCurrentCol_00004 + 2*moveCol_00003) != blocksCurrentCol_00004_00002)))
BOOL aux85 #Active-CSE: 3 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00010 + 2*moveRow_00009)) \/ ((avatarCurrentCol_00010 + 2*moveCol_00009) != 5)) /\ ((3 != (avatarCurrentRow_00010 + 2*moveRow_00009)) \/ ((avatarCurrentCol_00010 + 2*moveCol_00009) != 4)) /\ ((4 != (avatarCurrentRow_00010 + 2*moveRow_00009)) \/ ((avatarCurrentCol_00010 + 2*moveCol_00009) != 4)))
BOOL aux86 #Active-CSE: 3 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00003 + 2*moveRow_00002)) \/ ((avatarCurrentCol_00003 + 2*moveCol_00002) != blocksCurrentCol_00003_00000)) /\ ((3 != (avatarCurrentRow_00003 + 2*moveRow_00002)) \/ ((avatarCurrentCol_00003 + 2*moveCol_00002) != blocksCurrentCol_00003_00001)) /\ ((4 != (avatarCurrentRow_00003 + 2*moveRow_00002)) \/ ((avatarCurrentCol_00003 + 2*moveCol_00002) != blocksCurrentCol_00003_00002)))
BOOL aux87 #Active-CSE: 3 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00007 + 2*moveRow_00006)) \/ ((avatarCurrentCol_00007 + 2*moveCol_00006) != blocksCurrentCol_00007_00000)) /\ ((3 != (avatarCurrentRow_00007 + 2*moveRow_00006)) \/ ((avatarCurrentCol_00007 + 2*moveCol_00006) != blocksCurrentCol_00007_00001)) /\ ((4 != (avatarCurrentRow_00007 + 2*moveRow_00006)) \/ ((avatarCurrentCol_00007 + 2*moveCol_00006) != blocksCurrentCol_00007_00002)))
BOOL aux88 #Active-CSE: 3 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00001 + 2*moveRow_00000)) \/ ((avatarCurrentCol_00001 + 2*moveCol_00000) != blocksCurrentCol_00001_00000)) /\ ((3 != (avatarCurrentRow_00001 + 2*moveRow_00000)) \/ ((avatarCurrentCol_00001 + 2*moveCol_00000) != 3)) /\ ((4 != (avatarCurrentRow_00001 + 2*moveRow_00000)) \/ ((avatarCurrentCol_00001 + 2*moveCol_00000) != 3)))
BOOL aux89 #Active-CSE: 3 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00009 + 2*moveRow_00008)) \/ ((avatarCurrentCol_00009 + 2*moveCol_00008) != blocksCurrentCol_00009_00000)) /\ ((3 != (avatarCurrentRow_00009 + 2*moveRow_00008)) \/ ((avatarCurrentCol_00009 + 2*moveCol_00008) != blocksCurrentCol_00009_00001)) /\ ((4 != (avatarCurrentRow_00009 + 2*moveRow_00008)) \/ ((avatarCurrentCol_00009 + 2*moveCol_00008) != blocksCurrentCol_00009_00002)))
BOOL aux90 #Active-CSE: 3 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00008 + 2*moveRow_00007)) \/ ((avatarCurrentCol_00008 + 2*moveCol_00007) != blocksCurrentCol_00008_00000)) /\ ((3 != (avatarCurrentRow_00008 + 2*moveRow_00007)) \/ ((avatarCurrentCol_00008 + 2*moveCol_00007) != blocksCurrentCol_00008_00001)) /\ ((4 != (avatarCurrentRow_00008 + 2*moveRow_00007)) \/ ((avatarCurrentCol_00008 + 2*moveCol_00007) != blocksCurrentCol_00008_00002)))
BOOL aux91 #Active-CSE: 3 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00005 + 2*moveRow_00004)) \/ (blocksCurrentCol_00005_00000 != (avatarCurrentCol_00005 + 2*moveCol_00004))) /\ ((3 != (avatarCurrentRow_00005 + 2*moveRow_00004)) \/ (blocksCurrentCol_00005_00001 != (avatarCurrentCol_00005 + 2*moveCol_00004))) /\ ((4 != (avatarCurrentRow_00005 + 2*moveRow_00004)) \/ (blocksCurrentCol_00005_00002 != (avatarCurrentCol_00005 + 2*moveCol_00004))))
DISCRETE aux92 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, gridCurrent_00006_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00006_00003_00001, 2, 2, 0;int(1..16)], (6*avatarCurrentRow_00006 + avatarCurrentCol_00006-14))
{0..2}
DISCRETE aux93 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, gridCurrent_00007_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00007_00003_00001, 2, 2, 0;int(1..16)], (6*avatarCurrentRow_00007 + avatarCurrentCol_00007-14))
{0..2}
DISCRETE aux94 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, gridCurrent_00005_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00005_00003_00001, 2, 2, 0;int(1..16)], (6*avatarCurrentRow_00005 + avatarCurrentCol_00005-14))
{0..2}
DISCRETE aux95 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, gridCurrent_00002_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, 1, 2, 2;int(1..15)], (6*avatarCurrentRow_00002 + avatarCurrentCol_00002-14))
{0..2}
DISCRETE aux96 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, gridCurrent_00009_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00009_00003_00001, 2, 2;int(1..15)], (6*avatarCurrentRow_00009 + avatarCurrentCol_00009-14))
{0..2}
DISCRETE aux97 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, gridCurrent_00003_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00003_00003_00001, 2, 2;int(1..15)], (6*avatarCurrentRow_00003 + avatarCurrentCol_00003-14))
{0..2}
DISCRETE aux98 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, gridCurrent_00008_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00008_00003_00001, 2, 2;int(1..15)], (6*avatarCurrentRow_00008 + avatarCurrentCol_00008-14))
{0..2}
DISCRETE aux99 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, gridCurrent_00004_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00004_00003_00001, 2, 2;int(1..15)], (6*avatarCurrentRow_00004 + avatarCurrentCol_00004-14))
{0..2}
DISCRETE aux100 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 1, 2, 2, 0, 0, 2, 2;int(1..8)], (6*avatarCurrentRow_00001 + avatarCurrentCol_00001-14))
{0..2}
BOOL aux101 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00007 + moveCol_00007) != blocksCurrentCol_00007_00001)
BOOL aux102 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00008 + moveCol_00008) != blocksCurrentCol_00008_00000)
BOOL aux103 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00006 + moveCol_00006) != blocksCurrentCol_00006_00002)
BOOL aux104 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00007 + moveCol_00007) != blocksCurrentCol_00007_00002)
BOOL aux105 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00006 + moveCol_00006) != blocksCurrentCol_00006_00001)
BOOL aux106 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00009 + moveCol_00009) != blocksCurrentCol_00009_00000)
BOOL aux107 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00009 + moveCol_00009) != blocksCurrentCol_00009_00002)
BOOL aux108 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00004 + moveCol_00004) != blocksCurrentCol_00004_00001)
BOOL aux109 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00002 + moveCol_00002) != blocksCurrentCol_00002_00001)
BOOL aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (blocksCurrentCol_00005_00001 != (avatarCurrentCol_00005 + moveCol_00005))
BOOL aux111 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00006 + moveCol_00006) != blocksCurrentCol_00006_00000)
BOOL aux112 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00009 + moveCol_00009) != blocksCurrentCol_00009_00001)
BOOL aux113 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00004 + moveCol_00004) != blocksCurrentCol_00004_00002)
BOOL aux114 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00002 + moveCol_00002) != blocksCurrentCol_00002_00000)
BOOL aux115 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00004 + moveCol_00004) != blocksCurrentCol_00004_00000)
BOOL aux116 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00008 + moveCol_00008) != blocksCurrentCol_00008_00001)
BOOL aux117 #Active-CSE: 2 occurrences of this expression or equivalent: (blocksCurrentCol_00005_00000 != (avatarCurrentCol_00005 + moveCol_00005))
BOOL aux118 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00001 + moveCol_00001) != blocksCurrentCol_00001_00000)
BOOL aux119 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00008 + moveCol_00008) != blocksCurrentCol_00008_00002)
BOOL aux120 #Active-CSE: 2 occurrences of this expression or equivalent: (blocksCurrentCol_00005_00002 != (avatarCurrentCol_00005 + moveCol_00005))
BOOL aux121 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00003 + moveCol_00003) != blocksCurrentCol_00003_00000)
BOOL aux122 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00003 + moveCol_00003) != blocksCurrentCol_00003_00002)
BOOL aux123 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00003 + moveCol_00003) != blocksCurrentCol_00003_00001)
BOOL aux124 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00007 + moveCol_00007) != blocksCurrentCol_00007_00000)
DISCRETE aux125 #Active-CSE: 2 occurrences of this expression or equivalent: (6*avatarCurrentRow_00001 + avatarCurrentCol_00001-14)
{0..7}
DISCRETE aux126 #Active-CSE: 2 occurrences of this expression or equivalent: (6*avatarCurrentRow_00002 + avatarCurrentCol_00002-14)
{0..14}
DISCRETE aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (6*avatarCurrentRow_00005 + avatarCurrentCol_00005-14)
{0..15}
DISCRETE aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (6*avatarCurrentRow_00007 + avatarCurrentCol_00007-14)
{0..15}
DISCRETE aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (6*avatarCurrentRow_00006 + avatarCurrentCol_00006-14)
{0..15}
DISCRETE aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (6*avatarCurrentRow_00003 + avatarCurrentCol_00003-14)
{0..14}
DISCRETE aux131 #Active-CSE: 2 occurrences of this expression or equivalent: (6*avatarCurrentRow_00004 + avatarCurrentCol_00004-14)
{0..14}
DISCRETE aux132 #Active-CSE: 2 occurrences of this expression or equivalent: (6*avatarCurrentRow_00008 + avatarCurrentCol_00008-14)
{0..14}
DISCRETE aux133 #Active-CSE: 2 occurrences of this expression or equivalent: (6*avatarCurrentRow_00009 + avatarCurrentCol_00009-14)
{0..14}
DISCRETE aux138 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00007 + 2*moveRow_00006)
{0..6}
DISCRETE aux139 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00009 + moveCol_00008)
{1..5}
DISCRETE aux140 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00006 + moveCol_00005)
{1..6}
DISCRETE aux141 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00005 + moveCol_00004)
{1..6}
DISCRETE aux142 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00008 + moveCol_00007)
{1..5}
DISCRETE aux143 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00007 + moveCol_00006)
{1..6}
DISCRETE aux144 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00002 + moveCol_00001)
{1..5}
DISCRETE aux145 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00001 + moveCol_00000)
{2..4}
DISCRETE aux146 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00004 + moveCol_00003)
{1..5}
DISCRETE aux147 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00003 + moveCol_00002)
{1..5}
DISCRETE aux148 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00010 + moveCol_00009)
{1..5}
DISCRETE aux149 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00007 + 2*moveCol_00006)
{0..7}
DISCRETE aux152 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00002 + moveRow_00001)
{1..5}
DISCRETE aux153 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00001 + moveRow_00000)
{2..4}
DISCRETE aux154 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00004 + moveRow_00003)
{1..5}
DISCRETE aux155 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00003 + moveRow_00002)
{1..5}
DISCRETE aux156 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00006 + moveRow_00005)
{1..5}
DISCRETE aux157 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00005 + moveRow_00004)
{1..5}
DISCRETE aux158 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00008 + moveRow_00007)
{1..5}
DISCRETE aux159 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00007 + moveRow_00006)
{1..5}
DISCRETE aux160 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00009 + moveRow_00008)
{1..5}
DISCRETE aux161 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00010 + moveRow_00009)
{1..5}
DISCRETE aux162 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00004 + 2*moveRow_00003)
{0..6}
DISCRETE aux164 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00008 + 2*moveCol_00007)
{0..6}
DISCRETE aux168 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00001 + 2*moveRow_00000)
{2..5}
DISCRETE aux169 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00005 + 2*moveCol_00004)
{0..7}
DISCRETE aux170 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00002 + 2*moveCol_00001)
{0..6}
DISCRETE aux171 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00010 + 2*moveCol_00009)
{0..6}
DISCRETE aux174 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00009 + 2*moveRow_00008)
{0..6}
DISCRETE aux177 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00009 + 2*moveCol_00008)
{0..6}
DISCRETE aux178 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00003 + 2*moveCol_00002)
{0..6}
DISCRETE aux179 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00006 + 2*moveRow_00005)
{0..6}
DISCRETE aux181 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00006 + 2*moveCol_00005)
{0..7}
DISCRETE aux183 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00003 + 2*moveRow_00002)
{0..6}
DISCRETE aux186 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00004 + 2*moveCol_00003)
{0..6}
DISCRETE aux189 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentCol_00001 + 2*moveCol_00000)
{2..5}
DISCRETE aux190 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00005 + 2*moveRow_00004)
{0..6}
DISCRETE aux191 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00008 + 2*moveRow_00007)
{0..6}
DISCRETE aux192 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00002 + 2*moveRow_00001)
{0..6}
DISCRETE aux193 #Active-CSE: 3 occurrences of this expression or equivalent: (avatarCurrentRow_00010 + 2*moveRow_00009)
{0..6}
DISCRETE aux194 #(-3 + blocksCurrentCol_00007_00000)
{0..2}
DISCRETE aux195 #SafeElement([gridCurrent_00007_00001_00002, 2, 2;int(1..3)], aux194)
{0..2}
BOOL aux196 #(blocksCurrentCol_00005_00002-3)
DISCRETE aux197 #SafeElement([2, 2;int(1..2)], aux196)
{0..2}
DISCRETE aux198 #SafeElement([2, gridCurrent_00004_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00004_00003_00001, 2, 2;int(1..15)], aux130)
{0..2}
DISCRETE aux199 #(moveCol_00008 + blocksCurrentCol_00008_00000)
{2..6}
BOOL aux200 #(-3 + blocksCurrentCol_00007_00002)
DISCRETE aux201 #SafeElement([2, 2;int(1..2)], aux200)
{0..2}
DISCRETE aux202 #(moveCol_00007 + blocksCurrentCol_00007_00001)
{2..5}
DISCRETE aux203 #(moveCol_00004 + blocksCurrentCol_00004_00002)
{2..5}
DISCRETE aux204 #SafeElement([2, gridCurrent_00008_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00008_00003_00001, 2, 2, 0;int(1..16)], aux128)
{0..2}
DISCRETE aux205 #(blocksCurrentCol_00005_00000-3)
{0..2}
DISCRETE aux206 #SafeElement([gridCurrent_00005_00001_00002, 2, 2;int(1..3)], aux205)
{0..2}
BOOL aux207 #(-3 + blocksCurrentCol_00009_00001)
DISCRETE aux208 #SafeElement([2, 2;int(1..2)], aux207)
{0..2}
DISCRETE aux209 #(moveCol_00002 + 3)
{2..4}
DISCRETE aux210 #(moveCol_00008 + blocksCurrentCol_00008_00002)
{2..5}
BOOL aux211 #|moveRow_00001|
BOOL aux212 #|moveCol_00001|
DISCRETE aux214 #(moveCol_00000 + 3)
{3..4}
BOOL aux215 #(blocksCurrentCol_00002_00001-3)
DISCRETE aux216 #SafeElement([2, 2;int(1..2)], aux215)
{0..2}
BOOL aux217 #(-3 + blocksCurrentCol_00004_00001)
DISCRETE aux218 #SafeElement([2, 2;int(1..2)], aux217)
{0..2}
BOOL aux219 #|moveRow_00003|
BOOL aux220 #|moveCol_00003|
DISCRETE aux222 #SafeElement([2, gridCurrent_00010_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00010_00003_00001, 2, 2;int(1..15)], aux133)
{0..2}
BOOL aux223 #(-3 + blocksCurrentCol_00003_00001)
DISCRETE aux224 #SafeElement([2, 2;int(1..2)], aux223)
{0..2}
DISCRETE aux225 #SafeElement([2, gridCurrent_00002_00001_00002, 2, 2, 0, 0, 2, 2;int(1..8)], aux125)
{0..2}
BOOL aux226 #|moveRow_00005|
BOOL aux227 #|moveCol_00005|
DISCRETE aux229 #(blocksCurrentCol_00005_00002 + moveCol_00005)
{2..5}
BOOL aux230 #(-3 + blocksCurrentCol_00008_00001)
DISCRETE aux231 #SafeElement([2, 2;int(1..2)], aux230)
{0..2}
BOOL aux232 #|moveRow_00007|
BOOL aux233 #|moveCol_00007|
DISCRETE aux235 #(-3 + blocksCurrentCol_00003_00000)
{0..2}
DISCRETE aux236 #SafeElement([gridCurrent_00003_00001_00002, 2, 2;int(1..3)], aux235)
{0..2}
BOOL aux237 #|moveRow_00009|
BOOL aux238 #|moveCol_00009|
DISCRETE aux240 #(moveCol_00001 + blocksCurrentCol_00001_00000)
{2..5}
DISCRETE aux241 #(moveCol_00002 + blocksCurrentCol_00002_00001)
{2..5}
DISCRETE aux242 #(moveCol_00001 + 3)
{2..4}
DISCRETE aux243 #(moveCol_00002 + blocksCurrentCol_00002_00000)
{2..6}
DISCRETE aux244 #SafeElement([2, gridCurrent_00003_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00003_00003_00001, 2, 2;int(1..15)], aux126)
{0..2}
BOOL aux245 #(blocksCurrentCol_00006_00001-3)
DISCRETE aux246 #SafeElement([2, 2;int(1..2)], aux245)
{0..2}
DISCRETE aux247 #(moveCol_00004 + blocksCurrentCol_00004_00001)
{2..5}
DISCRETE aux248 #(moveCol_00003 + blocksCurrentCol_00003_00001)
{2..5}
DISCRETE aux249 #(moveCol_00004 + blocksCurrentCol_00004_00000)
{2..6}
DISCRETE aux250 #(moveCol_00007 + blocksCurrentCol_00007_00000)
{2..6}
DISCRETE aux251 #(blocksCurrentCol_00005_00000 + moveCol_00005)
{2..6}
BOOL aux252 #(-3 + blocksCurrentCol_00007_00001)
DISCRETE aux253 #SafeElement([2, 2;int(1..2)], aux252)
{0..2}
DISCRETE aux254 #SafeElement([2, gridCurrent_00009_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00009_00003_00001, 2, 2;int(1..15)], aux132)
{0..2}
DISCRETE aux255 #(moveCol_00008 + blocksCurrentCol_00008_00001)
{2..5}
BOOL aux256 #(blocksCurrentCol_00005_00001-3)
DISCRETE aux257 #SafeElement([2, 2;int(1..2)], aux256)
{0..2}
BOOL aux258 #(-4 + blocksCurrentCol_00009_00000)
DISCRETE aux259 #SafeElement([2, 2;int(1..2)], aux258)
{0..2}
DISCRETE aux260 #(moveCol_00006 + blocksCurrentCol_00006_00001)
{2..5}
DISCRETE aux261 #SafeElement([2, gridCurrent_00005_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00005_00003_00001, 2, 2;int(1..15)], aux131)
{0..2}
DISCRETE aux262 #(moveCol_00006 + blocksCurrentCol_00006_00000)
{2..6}
DISCRETE aux263 #(moveCol_00003 + blocksCurrentCol_00003_00000)
{2..6}
DISCRETE aux264 #(moveCol_00006 + blocksCurrentCol_00006_00002)
{2..5}
BOOL aux265 #(-3 + blocksCurrentCol_00003_00002)
DISCRETE aux266 #SafeElement([2, 2;int(1..2)], aux265)
{0..2}
DISCRETE aux267 #(-3 + blocksCurrentCol_00004_00000)
{0..2}
DISCRETE aux268 #SafeElement([gridCurrent_00004_00001_00002, 2, 2;int(1..3)], aux267)
{0..2}
DISCRETE aux270 #(moveCol_00009 + blocksCurrentCol_00009_00002)
{2..5}
BOOL aux271 #(-3 + blocksCurrentCol_00009_00002)
DISCRETE aux272 #SafeElement([2, 2;int(1..2)], aux271)
{0..2}
DISCRETE aux273 #(blocksCurrentCol_00002_00000-3)
{0..2}
DISCRETE aux274 #SafeElement([gridCurrent_00002_00001_00002, 2, 2;int(1..3)], aux273)
{0..2}
BOOL aux275 #|moveRow_00002|
BOOL aux276 #|moveCol_00002|
BOOL aux278 #(-3 + blocksCurrentCol_00004_00002)
DISCRETE aux279 #SafeElement([2, 2;int(1..2)], aux278)
{0..2}
BOOL aux280 #|moveRow_00004|
BOOL aux281 #|moveCol_00004|
DISCRETE aux283 #SafeElement([2, gridCurrent_00006_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00006_00003_00001, 2, 2, 0;int(1..16)], aux127)
{0..2}
DISCRETE aux284 #(moveCol_00009 + blocksCurrentCol_00009_00001)
{2..5}
BOOL aux285 #|moveRow_00006|
BOOL aux286 #|moveCol_00006|
BOOL aux288 #(-3 + blocksCurrentCol_00008_00002)
DISCRETE aux289 #SafeElement([2, 2;int(1..2)], aux288)
{0..2}
DISCRETE aux290 #(moveCol_00007 + blocksCurrentCol_00007_00002)
{2..5}
DISCRETE aux291 #(moveCol_00009 + blocksCurrentCol_00009_00000)
{3..6}
BOOL aux292 #|moveRow_00008|
BOOL aux293 #|moveCol_00008|
DISCRETE aux295 #(blocksCurrentCol_00006_00000-3)
{0..2}
DISCRETE aux296 #SafeElement([gridCurrent_00006_00001_00002, 2, 2;int(1..3)], aux295)
{0..2}
DISCRETE aux297 #(blocksCurrentCol_00005_00001 + moveCol_00005)
{2..5}
BOOL aux298 #(blocksCurrentCol_00001_00000-3)
DISCRETE aux299 #SafeElement([1, 2;int(1..2)], aux298)
{0..2}
DISCRETE aux300 #SafeElement([2, gridCurrent_00007_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00007_00003_00001, 2, 2, 0;int(1..16)], aux129)
{0..2}
DISCRETE aux301 #(6*avatarCurrentRow_00010 + avatarCurrentCol_00010-14)
{0..14}
DISCRETE aux302 #SafeElement([2, gridCurrent_00010_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00010_00003_00001, 2, 2;int(1..15)], aux301)
{0..2}
DISCRETE aux303 #(-3 + blocksCurrentCol_00008_00000)
{0..2}
DISCRETE aux304 #SafeElement([gridCurrent_00008_00001_00002, 2, 2;int(1..3)], aux303)
{0..2}
BOOL aux305 #(blocksCurrentCol_00006_00002-3)
DISCRETE aux306 #SafeElement([2, 2;int(1..2)], aux305)
{0..2}
DISCRETE aux307 #(moveCol_00003 + blocksCurrentCol_00003_00002)
{2..5}
**TUPLELIST**
gridInit 5 6
0 0 0 0 0 0 
0 2 1 2 2 0 
0 2 2 2 0 0 
0 1 2 2 0 0 
0 0 0 0 0 0 
**VARIABLES**
ALIAS gridInit[5,6]=[[0, 0, 0, 0, 0, 0], [0, 2, 1, 2, 2, 0], [0, 2, 2, 2, 0, 0], [0, 1, 2, 2, 0, 0], [0, 0, 0, 0, 0, 0]]
ALIAS blocksInitRow[3]=[2, 3, 4]
ALIAS blocksInitCol[3]=[3, 3, 3]
ALIAS blocksGoalRow[3]=[2, 3, 4]
ALIAS blocksGoalCol[3]=[5, 4, 4]
**SEARCH**
PRINT[[moveRow_00000],[moveRow_00001],[moveRow_00002],[moveRow_00003],[moveRow_00004],[moveRow_00005],[moveRow_00006],[moveRow_00007],[moveRow_00008],[moveRow_00009],[moveCol_00000],[moveCol_00001],[moveCol_00002],[moveCol_00003],[moveCol_00004],[moveCol_00005],[moveCol_00006],[moveCol_00007],[moveCol_00008],[moveCol_00009],[avatarCurrentRow_00001],[avatarCurrentRow_00002],[avatarCurrentRow_00003],[avatarCurrentRow_00004],[avatarCurrentRow_00005],[avatarCurrentRow_00006],[avatarCurrentRow_00007],[avatarCurrentRow_00008],[avatarCurrentRow_00009],[avatarCurrentRow_00010],[avatarCurrentCol_00001],[avatarCurrentCol_00002],[avatarCurrentCol_00003],[avatarCurrentCol_00004],[avatarCurrentCol_00005],[avatarCurrentCol_00006],[avatarCurrentCol_00007],[avatarCurrentCol_00008],[avatarCurrentCol_00009],[avatarCurrentCol_00010],[blocksCurrentCol_00001_00000],[blocksCurrentCol_00002_00000],[blocksCurrentCol_00002_00001],[blocksCurrentCol_00003_00000],[blocksCurrentCol_00003_00001],[blocksCurrentCol_00003_00002],[blocksCurrentCol_00004_00000],[blocksCurrentCol_00004_00001],[blocksCurrentCol_00004_00002],[blocksCurrentCol_00005_00000],[blocksCurrentCol_00005_00001],[blocksCurrentCol_00005_00002],[blocksCurrentCol_00006_00000],[blocksCurrentCol_00006_00001],[blocksCurrentCol_00006_00002],[blocksCurrentCol_00007_00000],[blocksCurrentCol_00007_00001],[blocksCurrentCol_00007_00002],[blocksCurrentCol_00008_00000],[blocksCurrentCol_00008_00001],[blocksCurrentCol_00008_00002],[blocksCurrentCol_00009_00000],[blocksCurrentCol_00009_00001],[blocksCurrentCol_00009_00002],[gridCurrent_00002_00001_00002],[gridCurrent_00003_00001_00002],[gridCurrent_00003_00003_00001],[gridCurrent_00004_00001_00002],[gridCurrent_00004_00003_00001],[gridCurrent_00005_00001_00002],[gridCurrent_00005_00003_00001],[gridCurrent_00006_00001_00002],[gridCurrent_00006_00003_00001],[gridCurrent_00007_00001_00002],[gridCurrent_00007_00003_00001],[gridCurrent_00008_00001_00002],[gridCurrent_00008_00003_00001],[gridCurrent_00009_00001_00002],[gridCurrent_00009_00003_00001],[gridCurrent_00010_00001_00002],[gridCurrent_00010_00003_00001]]
VARORDER STATIC [moveRow_00000, moveRow_00001, moveRow_00002, moveRow_00003, moveRow_00004, moveRow_00005, moveRow_00006, moveRow_00007, moveRow_00008, moveRow_00009, moveCol_00000, moveCol_00001, moveCol_00002, moveCol_00003, moveCol_00004, moveCol_00005, moveCol_00006, moveCol_00007, moveCol_00008, moveCol_00009, 2, avatarCurrentRow_00001, avatarCurrentRow_00002, avatarCurrentRow_00003, avatarCurrentRow_00004, avatarCurrentRow_00005, avatarCurrentRow_00006, avatarCurrentRow_00007, avatarCurrentRow_00008, avatarCurrentRow_00009, avatarCurrentRow_00010, 2, avatarCurrentCol_00001, avatarCurrentCol_00002, avatarCurrentCol_00003, avatarCurrentCol_00004, avatarCurrentCol_00005, avatarCurrentCol_00006, avatarCurrentCol_00007, avatarCurrentCol_00008, avatarCurrentCol_00009, avatarCurrentCol_00010, 2, 3, 4, 2, 3, 4, 2, 3, 4, 2, 3, 4, 2, 3, 4, 2, 3, 4, 2, 3, 4, 2, 3, 4, 2, 3, 4, 2, 3, 4, 2, 3, 4, 3, 3, 3, blocksCurrentCol_00001_00000, 3, 3, blocksCurrentCol_00002_00000, blocksCurrentCol_00002_00001, 3, blocksCurrentCol_00003_00000, blocksCurrentCol_00003_00001, blocksCurrentCol_00003_00002, blocksCurrentCol_00004_00000, blocksCurrentCol_00004_00001, blocksCurrentCol_00004_00002, blocksCurrentCol_00005_00000, blocksCurrentCol_00005_00001, blocksCurrentCol_00005_00002, blocksCurrentCol_00006_00000, blocksCurrentCol_00006_00001, blocksCurrentCol_00006_00002, blocksCurrentCol_00007_00000, blocksCurrentCol_00007_00001, blocksCurrentCol_00007_00002, blocksCurrentCol_00008_00000, blocksCurrentCol_00008_00001, blocksCurrentCol_00008_00002, blocksCurrentCol_00009_00000, blocksCurrentCol_00009_00001, blocksCurrentCol_00009_00002, 5, 4, 4, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, gridCurrent_00002_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, gridCurrent_00003_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00003_00003_00001, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, gridCurrent_00004_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00004_00003_00001, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, gridCurrent_00005_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00005_00003_00001, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, gridCurrent_00006_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00006_00003_00001, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, gridCurrent_00007_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00007_00003_00001, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, gridCurrent_00008_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00008_00003_00001, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, gridCurrent_00009_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00009_00003_00001, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, gridCurrent_00010_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00010_00003_00001, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0]
VARORDER AUX [moveRow_00000,moveRow_00001,moveRow_00002,moveRow_00003,moveRow_00004,moveRow_00005,moveRow_00006,moveRow_00007,moveRow_00008,moveRow_00009,moveCol_00000,moveCol_00001,moveCol_00002,moveCol_00003,moveCol_00004,moveCol_00005,moveCol_00006,moveCol_00007,moveCol_00008,moveCol_00009,avatarCurrentRow_00001,avatarCurrentRow_00002,avatarCurrentRow_00003,avatarCurrentRow_00004,avatarCurrentRow_00005,avatarCurrentRow_00006,avatarCurrentRow_00007,avatarCurrentRow_00008,avatarCurrentRow_00009,avatarCurrentRow_00010,avatarCurrentCol_00001,avatarCurrentCol_00002,avatarCurrentCol_00003,avatarCurrentCol_00004,avatarCurrentCol_00005,avatarCurrentCol_00006,avatarCurrentCol_00007,avatarCurrentCol_00008,avatarCurrentCol_00009,avatarCurrentCol_00010,blocksCurrentCol_00001_00000,blocksCurrentCol_00002_00000,blocksCurrentCol_00002_00001,blocksCurrentCol_00003_00000,blocksCurrentCol_00003_00001,blocksCurrentCol_00003_00002,blocksCurrentCol_00004_00000,blocksCurrentCol_00004_00001,blocksCurrentCol_00004_00002,blocksCurrentCol_00005_00000,blocksCurrentCol_00005_00001,blocksCurrentCol_00005_00002,blocksCurrentCol_00006_00000,blocksCurrentCol_00006_00001,blocksCurrentCol_00006_00002,blocksCurrentCol_00007_00000,blocksCurrentCol_00007_00001,blocksCurrentCol_00007_00002,blocksCurrentCol_00008_00000,blocksCurrentCol_00008_00001,blocksCurrentCol_00008_00002,blocksCurrentCol_00009_00000,blocksCurrentCol_00009_00001,blocksCurrentCol_00009_00002,gridCurrent_00002_00001_00002,gridCurrent_00003_00001_00002,gridCurrent_00003_00003_00001,gridCurrent_00004_00001_00002,gridCurrent_00004_00003_00001,gridCurrent_00005_00001_00002,gridCurrent_00005_00003_00001,gridCurrent_00006_00001_00002,gridCurrent_00006_00003_00001,gridCurrent_00007_00001_00002,gridCurrent_00007_00003_00001,gridCurrent_00008_00001_00002,gridCurrent_00008_00003_00001,gridCurrent_00009_00001_00002,gridCurrent_00009_00003_00001,gridCurrent_00010_00001_00002,gridCurrent_00010_00003_00001,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,aux104,aux105,aux106,aux107,aux108,aux109,aux110,aux111,aux112,aux113,aux114,aux115,aux116,aux117,aux118,aux119,aux120,aux121,aux122,aux123,aux124,aux125,aux126,aux127,aux128,aux129,aux130,aux131,aux132,aux133,aux138,aux139,aux140,aux141,aux142,aux143,aux144,aux145,aux146,aux147,aux148,aux149,aux152,aux153,aux154,aux155,aux156,aux157,aux158,aux159,aux160,aux161,aux162,aux164,aux168,aux169,aux170,aux171,aux174,aux177,aux178,aux179,aux181,aux183,aux186,aux189,aux190,aux191,aux192,aux193,aux194,aux195,aux196,aux197,aux198,aux199,aux200,aux201,aux202,aux203,aux204,aux205,aux206,aux207,aux208,aux209,aux210,aux211,aux212,aux214,aux215,aux216,aux217,aux218,aux219,aux220,aux222,aux223,aux224,aux225,aux226,aux227,aux229,aux230,aux231,aux232,aux233,aux235,aux236,aux237,aux238,aux240,aux241,aux242,aux243,aux244,aux245,aux246,aux247,aux248,aux249,aux250,aux251,aux252,aux253,aux254,aux255,aux256,aux257,aux258,aux259,aux260,aux261,aux262,aux263,aux264,aux265,aux266,aux267,aux268,aux270,aux271,aux272,aux273,aux274,aux275,aux276,aux278,aux279,aux280,aux281,aux283,aux284,aux285,aux286,aux288,aux289,aux290,aux291,aux292,aux293,aux295,aux296,aux297,aux298,aux299,aux300,aux301,aux302,aux303,aux304,aux305,aux306,aux307]
**CONSTRAINTS**
watchelement_undefzero([gridCurrent_00007_00001_00002, 2, 2], aux194, aux195)
watchelement_undefzero([2, 2], aux196, aux197)
watchelement_undefzero([2, gridCurrent_00004_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00004_00003_00001, 2, 2], aux130, aux198)
watchelement_undefzero([2, 2], aux200, aux201)
watchelement_undefzero([2, gridCurrent_00008_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00008_00003_00001, 2, 2, 0], aux128, aux204)
watchelement_undefzero([gridCurrent_00005_00001_00002, 2, 2], aux205, aux206)
watchelement_undefzero([2, 2], aux207, aux208)
abs(aux211, moveRow_00001)
abs(aux212, moveCol_00001)
watchelement_undefzero([2, 2], aux215, aux216)
watchelement_undefzero([2, 2], aux217, aux218)
abs(aux219, moveRow_00003)
abs(aux220, moveCol_00003)
watchelement_undefzero([2, gridCurrent_00010_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00010_00003_00001, 2, 2], aux133, aux222)
watchelement_undefzero([2, 2], aux223, aux224)
watchelement_undefzero([2, gridCurrent_00002_00001_00002, 2, 2, 0, 0, 2, 2], aux125, aux225)
abs(aux226, moveRow_00005)
abs(aux227, moveCol_00005)
watchelement_undefzero([2, 2], aux230, aux231)
abs(aux232, moveRow_00007)
abs(aux233, moveCol_00007)
watchelement_undefzero([gridCurrent_00003_00001_00002, 2, 2], aux235, aux236)
abs(aux237, moveRow_00009)
abs(aux238, moveCol_00009)
watchelement_undefzero([2, gridCurrent_00003_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00003_00003_00001, 2, 2], aux126, aux244)
watchelement_undefzero([2, 2], aux245, aux246)
watchelement_undefzero([2, 2], aux252, aux253)
watchelement_undefzero([2, gridCurrent_00009_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00009_00003_00001, 2, 2], aux132, aux254)
watchelement_undefzero([2, 2], aux256, aux257)
watchelement_undefzero([2, 2], aux258, aux259)
watchelement_undefzero([2, gridCurrent_00005_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00005_00003_00001, 2, 2], aux131, aux261)
watchelement_undefzero([2, 2], aux265, aux266)
watchelement_undefzero([gridCurrent_00004_00001_00002, 2, 2], aux267, aux268)
watchelement_undefzero([2, 2], aux271, aux272)
watchelement_undefzero([gridCurrent_00002_00001_00002, 2, 2], aux273, aux274)
abs(aux275, moveRow_00002)
abs(aux276, moveCol_00002)
watchelement_undefzero([2, 2], aux278, aux279)
abs(aux280, moveRow_00004)
abs(aux281, moveCol_00004)
watchelement_undefzero([2, gridCurrent_00006_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00006_00003_00001, 2, 2, 0], aux127, aux283)
abs(aux285, moveRow_00006)
abs(aux286, moveCol_00006)
watchelement_undefzero([2, 2], aux288, aux289)
abs(aux292, moveRow_00008)
abs(aux293, moveCol_00008)
watchelement_undefzero([gridCurrent_00006_00001_00002, 2, 2], aux295, aux296)
watchelement_undefzero([1, 2], aux298, aux299)
watchelement_undefzero([2, gridCurrent_00007_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00007_00003_00001, 2, 2, 0], aux129, aux300)
watchelement_undefzero([2, gridCurrent_00010_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00010_00003_00001, 2, 2], aux301, aux302)
watchelement_undefzero([gridCurrent_00008_00001_00002, 2, 2], aux303, aux304)
watchelement_undefzero([2, 2], aux305, aux306)
reify(watched-and({watched-or({diseq(2,aux179),diseq(aux181,blocksCurrentCol_00006_00000)}),watched-or({diseq(3,aux179),diseq(aux181,blocksCurrentCol_00006_00001)}),watched-or({diseq(4,aux179),diseq(aux181,blocksCurrentCol_00006_00002)})}), aux82)
reify(watched-and({watched-or({diseq(2,aux192),diseq(aux170,blocksCurrentCol_00002_00000)}),watched-or({diseq(3,aux192),diseq(aux170,blocksCurrentCol_00002_00001)}),watched-or({diseq(4,aux192),diseq(aux170,3)})}), aux83)
reify(watched-and({watched-or({diseq(2,aux162),diseq(aux186,blocksCurrentCol_00004_00000)}),watched-or({diseq(3,aux162),diseq(aux186,blocksCurrentCol_00004_00001)}),watched-or({diseq(4,aux162),diseq(aux186,blocksCurrentCol_00004_00002)})}), aux84)
reify(watched-and({watched-or({diseq(2,aux193),diseq(aux171,5)}),watched-or({diseq(3,aux193),diseq(aux171,4)}),watched-or({diseq(4,aux193),diseq(aux171,4)})}), aux85)
reify(watched-and({watched-or({diseq(2,aux183),diseq(aux178,blocksCurrentCol_00003_00000)}),watched-or({diseq(3,aux183),diseq(aux178,blocksCurrentCol_00003_00001)}),watched-or({diseq(4,aux183),diseq(aux178,blocksCurrentCol_00003_00002)})}), aux86)
reify(watched-and({watched-or({diseq(2,aux138),diseq(aux149,blocksCurrentCol_00007_00000)}),watched-or({diseq(3,aux138),diseq(aux149,blocksCurrentCol_00007_00001)}),watched-or({diseq(4,aux138),diseq(aux149,blocksCurrentCol_00007_00002)})}), aux87)
reify(watched-and({watched-or({diseq(2,aux168),diseq(aux189,blocksCurrentCol_00001_00000)}),watched-or({diseq(3,aux168),diseq(aux189,3)}),watched-or({diseq(4,aux168),diseq(aux189,3)})}), aux88)
reify(watched-and({watched-or({diseq(2,aux174),diseq(aux177,blocksCurrentCol_00009_00000)}),watched-or({diseq(3,aux174),diseq(aux177,blocksCurrentCol_00009_00001)}),watched-or({diseq(4,aux174),diseq(aux177,blocksCurrentCol_00009_00002)})}), aux89)
reify(watched-and({watched-or({diseq(2,aux191),diseq(aux164,blocksCurrentCol_00008_00000)}),watched-or({diseq(3,aux191),diseq(aux164,blocksCurrentCol_00008_00001)}),watched-or({diseq(4,aux191),diseq(aux164,blocksCurrentCol_00008_00002)})}), aux90)
reify(watched-and({watched-or({diseq(2,aux190),diseq(blocksCurrentCol_00005_00000,aux169)}),watched-or({diseq(3,aux190),diseq(blocksCurrentCol_00005_00001,aux169)}),watched-or({diseq(4,aux190),diseq(blocksCurrentCol_00005_00002,aux169)})}), aux91)
watchelement_undefzero([2, gridCurrent_00006_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00006_00003_00001, 2, 2, 0], aux129, aux92)
watchelement_undefzero([2, gridCurrent_00007_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00007_00003_00001, 2, 2, 0], aux128, aux93)
watchelement_undefzero([2, gridCurrent_00005_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00005_00003_00001, 2, 2, 0], aux127, aux94)
watchelement_undefzero([2, gridCurrent_00002_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, 1, 2, 2], aux126, aux95)
watchelement_undefzero([2, gridCurrent_00009_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00009_00003_00001, 2, 2], aux133, aux96)
watchelement_undefzero([2, gridCurrent_00003_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00003_00003_00001, 2, 2], aux130, aux97)
watchelement_undefzero([2, gridCurrent_00008_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00008_00003_00001, 2, 2], aux132, aux98)
watchelement_undefzero([2, gridCurrent_00004_00001_00002, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, gridCurrent_00004_00003_00001, 2, 2], aux131, aux99)
watchelement_undefzero([2, 1, 2, 2, 0, 0, 2, 2], aux125, aux100)
reify(diseq(avatarCurrentCol_00008,blocksCurrentCol_00007_00001), aux101)
reify(diseq(avatarCurrentCol_00009,blocksCurrentCol_00008_00000), aux102)
reify(diseq(avatarCurrentCol_00007,blocksCurrentCol_00006_00002), aux103)
reify(diseq(avatarCurrentCol_00008,blocksCurrentCol_00007_00002), aux104)
reify(diseq(avatarCurrentCol_00007,blocksCurrentCol_00006_00001), aux105)
reify(diseq(avatarCurrentCol_00010,blocksCurrentCol_00009_00000), aux106)
reify(diseq(avatarCurrentCol_00010,blocksCurrentCol_00009_00002), aux107)
reify(diseq(avatarCurrentCol_00005,blocksCurrentCol_00004_00001), aux108)
reify(diseq(avatarCurrentCol_00003,blocksCurrentCol_00002_00001), aux109)
reify(diseq(blocksCurrentCol_00005_00001,avatarCurrentCol_00006), aux110)
reify(diseq(avatarCurrentCol_00007,blocksCurrentCol_00006_00000), aux111)
reify(diseq(avatarCurrentCol_00010,blocksCurrentCol_00009_00001), aux112)
reify(diseq(avatarCurrentCol_00005,blocksCurrentCol_00004_00002), aux113)
reify(diseq(avatarCurrentCol_00003,blocksCurrentCol_00002_00000), aux114)
reify(diseq(avatarCurrentCol_00005,blocksCurrentCol_00004_00000), aux115)
reify(diseq(avatarCurrentCol_00009,blocksCurrentCol_00008_00001), aux116)
reify(diseq(blocksCurrentCol_00005_00000,avatarCurrentCol_00006), aux117)
reify(diseq(avatarCurrentCol_00002,blocksCurrentCol_00001_00000), aux118)
reify(diseq(avatarCurrentCol_00009,blocksCurrentCol_00008_00002), aux119)
reify(diseq(blocksCurrentCol_00005_00002,avatarCurrentCol_00006), aux120)
reify(diseq(avatarCurrentCol_00004,blocksCurrentCol_00003_00000), aux121)
reify(diseq(avatarCurrentCol_00004,blocksCurrentCol_00003_00002), aux122)
reify(diseq(avatarCurrentCol_00004,blocksCurrentCol_00003_00001), aux123)
reify(diseq(avatarCurrentCol_00008,blocksCurrentCol_00007_00000), aux124)
watched-or({diseq(avatarCurrentRow_00008,3),diseq(avatarCurrentCol_00008,blocksCurrentCol_00008_00001)})
watched-or({diseq(3,aux153),diseq(aux145,3),w-literal(aux88,1)})
watched-or({w-literal(gridCurrent_00005_00003_00001,0),diseq(gridCurrent_00004_00003_00001,0)})
watched-or({diseq(avatarCurrentRow_00008,2),diseq(avatarCurrentCol_00008,blocksCurrentCol_00008_00000)})
diseq(aux195,0)
diseq(0,aux197)
watched-or({diseq(4,aux153),diseq(aux145,3),w-literal(aux88,1)})
watched-or({diseq(avatarCurrentCol_00001,3),diseq(avatarCurrentRow_00001,3),watched-and({w-literal(moveRow_00000,0),w-literal(moveCol_00000,0)})})
watched-or({w-literal(gridCurrent_00007_00001_00002,0),diseq(gridCurrent_00006_00001_00002,0)})
diseq(0,aux92)
watched-or({watched-and({w-literal(avatarCurrentRow_00006,3),w-literal(aux110,0)}),gaceq(blocksCurrentCol_00005_00001,blocksCurrentCol_00006_00001)})
watched-or({diseq(avatarCurrentRow_00008,4),diseq(avatarCurrentCol_00008,blocksCurrentCol_00008_00002)})
watched-or({w-literal(gridCurrent_00009_00001_00002,0),diseq(gridCurrent_00008_00001_00002,0)})
watched-or({diseq(4,aux160),w-literal(aux89,1),diseq(aux139,blocksCurrentCol_00009_00002)})
watched-or({diseq(1,aux97),w-literal(aux198,0)})
watched-or({w-literal(gridCurrent_00009_00003_00001,0),diseq(0,gridCurrent_00008_00003_00001)})
watched-or({diseq(avatarCurrentRow_00010,3),diseq(avatarCurrentCol_00010,4)})
watched-or({watched-and({gaceq(aux199,blocksCurrentCol_00009_00000),w-literal(moveRow_00008,0)}),diseq(2,avatarCurrentRow_00009),w-literal(aux102,1)})
diseq(aux201,0)
watched-or({diseq(3,avatarCurrentRow_00008),w-literal(aux101,1),watched-and({w-literal(moveRow_00007,0),gaceq(aux202,blocksCurrentCol_00008_00001)})})
watched-or({diseq(4,avatarCurrentRow_00005),watched-and({w-literal(moveRow_00004,0),gaceq(blocksCurrentCol_00005_00002,aux203)}),w-literal(aux113,1)})
watched-or({w-literal(aux204,0),diseq(aux93,1)})
diseq(0,aux206)
watched-or({diseq(2,aux161),w-literal(aux85,1),diseq(aux148,5)})
watched-or({diseq(avatarCurrentRow_00010,4),diseq(avatarCurrentCol_00010,4)})
diseq(0,aux208)
watched-or({diseq(4,avatarCurrentRow_00003),watched-and({gaceq(aux209,blocksCurrentCol_00003_00002),w-literal(moveRow_00002,0)}),diseq(avatarCurrentCol_00003,3)})
diseq(aux98,0)
watched-or({watched-and({gaceq(aux210,blocksCurrentCol_00009_00002),w-literal(moveRow_00008,0)}),diseq(4,avatarCurrentRow_00009),w-literal(aux119,1)})
watched-or({diseq(3,aux157),w-literal(aux91,1),diseq(blocksCurrentCol_00005_00001,aux141)})
watched-or({diseq(3,aux155),w-literal(aux86,1),diseq(aux147,blocksCurrentCol_00003_00001)})
watched-or({diseq(avatarCurrentCol_00001,3),diseq(avatarCurrentRow_00001,2),watched-and({w-literal(moveRow_00000,0),gaceq(blocksCurrentCol_00001_00000,aux214)})})
diseq(0,aux216)
watched-or({diseq(avatarCurrentCol_00009,blocksCurrentCol_00009_00000),diseq(avatarCurrentRow_00009,2)})
diseq(0,aux218)
watched-or({watched-and({w-literal(avatarCurrentRow_00005,2),w-literal(avatarCurrentCol_00005,3)}),w-literal(gridCurrent_00006_00001_00002,1),diseq(1,gridCurrent_00005_00001_00002)})
watched-or({diseq(gridCurrent_00009_00001_00002,1),watched-and({w-literal(avatarCurrentRow_00009,2),w-literal(avatarCurrentCol_00009,3)}),w-literal(gridCurrent_00010_00001_00002,1)})
watched-or({diseq(aux96,1),w-literal(aux222,0)})
watched-or({diseq(avatarCurrentCol_00009,blocksCurrentCol_00009_00001),diseq(avatarCurrentRow_00009,3)})
diseq(aux224,0)
watched-or({gaceq(blocksCurrentCol_00003_00001,blocksCurrentCol_00004_00001),watched-and({w-literal(avatarCurrentRow_00004,3),w-literal(aux123,0)})})
watched-or({diseq(2,aux155),w-literal(aux86,1),diseq(aux147,blocksCurrentCol_00003_00000)})
watched-or({diseq(avatarCurrentCol_00009,blocksCurrentCol_00009_00002),diseq(avatarCurrentRow_00009,4)})
watched-or({gaceq(blocksCurrentCol_00008_00000,blocksCurrentCol_00009_00000),watched-and({w-literal(avatarCurrentRow_00009,2),w-literal(aux102,0)})})
watched-or({diseq(3,aux152),diseq(aux144,blocksCurrentCol_00002_00001),w-literal(aux83,1)})
watched-or({diseq(1,aux100),w-literal(aux225,0)})
watched-or({watched-and({w-literal(avatarCurrentRow_00002,2),w-literal(aux118,0)}),gaceq(blocksCurrentCol_00001_00000,blocksCurrentCol_00002_00000)})
watched-or({diseq(4,avatarCurrentRow_00006),w-literal(aux120,1),watched-and({w-literal(moveRow_00005,0),gaceq(blocksCurrentCol_00006_00002,aux229)})})
diseq(0,aux99)
diseq(0,aux231)
watched-or({gaceq(blocksCurrentCol_00008_00001,blocksCurrentCol_00009_00001),watched-and({w-literal(avatarCurrentRow_00009,3),w-literal(aux116,0)})})
watched-or({diseq(4,aux152),w-literal(aux83,1),diseq(aux144,3)})
watched-or({diseq(4,aux158),w-literal(aux90,1),diseq(aux142,blocksCurrentCol_00008_00002)})
watched-or({watched-and({w-literal(avatarCurrentRow_00010,4),w-literal(aux107,0)}),w-literal(blocksCurrentCol_00009_00002,4)})
diseq(0,aux236)
watched-or({diseq(2,aux156),w-literal(aux82,1),diseq(aux140,blocksCurrentCol_00006_00000)})
watched-or({diseq(3,aux158),w-literal(aux90,1),diseq(aux142,blocksCurrentCol_00008_00001)})
watched-or({diseq(4,aux156),w-literal(aux82,1),diseq(aux140,blocksCurrentCol_00006_00002)})
watched-or({watched-and({w-literal(avatarCurrentRow_00010,3),w-literal(aux112,0)}),w-literal(blocksCurrentCol_00009_00001,4)})
watched-or({watched-and({w-literal(avatarCurrentRow_00007,3),w-literal(aux105,0)}),gaceq(blocksCurrentCol_00006_00001,blocksCurrentCol_00007_00001)})
watched-or({watched-and({w-literal(moveRow_00001,0),gaceq(aux240,blocksCurrentCol_00002_00000)}),diseq(2,avatarCurrentRow_00002),w-literal(aux118,1)})
watched-or({diseq(3,avatarCurrentRow_00003),w-literal(aux109,1),watched-and({w-literal(moveRow_00002,0),gaceq(aux241,blocksCurrentCol_00003_00001)})})
diseq(0,aux95)
watched-or({diseq(2,aux159),w-literal(aux87,1),diseq(aux143,blocksCurrentCol_00007_00000)})
watched-or({diseq(3,avatarCurrentRow_00002),diseq(avatarCurrentCol_00002,3),watched-and({gaceq(aux242,blocksCurrentCol_00002_00001),w-literal(moveRow_00001,0)})})
watched-or({diseq(2,avatarCurrentRow_00003),w-literal(aux114,1),watched-and({w-literal(moveRow_00002,0),gaceq(aux243,blocksCurrentCol_00003_00000)})})
diseq(0,aux100)
watched-or({diseq(avatarCurrentRow_00006,3),diseq(avatarCurrentCol_00006,blocksCurrentCol_00006_00001)})
watched-or({watched-and({w-literal(avatarCurrentRow_00010,2),w-literal(aux106,0)}),w-literal(blocksCurrentCol_00009_00000,5)})
watched-or({diseq(1,aux95),w-literal(aux244,0)})
watched-or({diseq(avatarCurrentRow_00006,2),diseq(avatarCurrentCol_00006,blocksCurrentCol_00006_00000)})
watched-or({diseq(4,aux161),w-literal(aux85,1),diseq(aux148,4)})
diseq(aux246,0)
watched-or({diseq(4,aux159),w-literal(aux87,1),diseq(aux143,blocksCurrentCol_00007_00002)})
watched-or({diseq(3,avatarCurrentRow_00005),watched-and({w-literal(moveRow_00004,0),gaceq(blocksCurrentCol_00005_00001,aux247)}),w-literal(aux108,1)})
watched-or({w-literal(gridCurrent_00008_00001_00002,1),watched-and({w-literal(avatarCurrentRow_00007,2),w-literal(avatarCurrentCol_00007,3)}),diseq(gridCurrent_00007_00001_00002,1)})
watched-or({diseq(avatarCurrentRow_00006,4),diseq(avatarCurrentCol_00006,blocksCurrentCol_00006_00002)})
watched-or({diseq(3,avatarCurrentRow_00004),watched-and({gaceq(aux248,blocksCurrentCol_00004_00001),w-literal(moveRow_00003,0)}),w-literal(aux123,1)})
watched-or({diseq(2,avatarCurrentRow_00005),watched-and({w-literal(moveRow_00004,0),gaceq(blocksCurrentCol_00005_00000,aux249)}),w-literal(aux115,1)})
watched-or({diseq(2,aux158),w-literal(aux90,1),diseq(aux142,blocksCurrentCol_00008_00000)})
watched-or({watched-and({w-literal(avatarCurrentRow_00008,4),w-literal(avatarCurrentCol_00008,2)}),w-literal(gridCurrent_00009_00003_00001,1),diseq(1,gridCurrent_00008_00003_00001)})
watched-or({diseq(avatarCurrentRow_00007,4),diseq(avatarCurrentCol_00007,blocksCurrentCol_00007_00002)})
watched-or({diseq(2,avatarCurrentRow_00008),w-literal(aux124,1),watched-and({w-literal(moveRow_00007,0),gaceq(aux250,blocksCurrentCol_00008_00000)})})
watched-or({diseq(avatarCurrentRow_00007,3),diseq(avatarCurrentCol_00007,blocksCurrentCol_00007_00001)})
watched-or({watched-and({w-literal(avatarCurrentRow_00004,2),w-literal(avatarCurrentCol_00004,3)}),w-literal(gridCurrent_00005_00001_00002,1),diseq(1,gridCurrent_00004_00001_00002)})
watched-or({diseq(avatarCurrentRow_00007,2),diseq(avatarCurrentCol_00007,blocksCurrentCol_00007_00000)})
watched-or({diseq(3,aux154),w-literal(aux84,1),diseq(aux146,blocksCurrentCol_00004_00001)})
watched-or({diseq(2,avatarCurrentRow_00006),w-literal(aux117,1),watched-and({w-literal(moveRow_00005,0),gaceq(blocksCurrentCol_00006_00000,aux251)})})
watched-or({watched-and({w-literal(avatarCurrentRow_00003,4),w-literal(avatarCurrentCol_00003,2)}),w-literal(gridCurrent_00004_00003_00001,1),diseq(gridCurrent_00003_00003_00001,1)})
watched-or({w-literal(gridCurrent_00008_00001_00002,0),diseq(gridCurrent_00007_00001_00002,0)})
watched-or({diseq(0,gridCurrent_00007_00003_00001),w-literal(gridCurrent_00008_00003_00001,0)})
watched-or({diseq(4,aux154),w-literal(aux84,1),diseq(aux146,blocksCurrentCol_00004_00002)})
watched-or({diseq(avatarCurrentRow_00003,4),diseq(avatarCurrentCol_00003,blocksCurrentCol_00003_00002)})
watched-or({diseq(avatarCurrentCol_00005,blocksCurrentCol_00005_00002),diseq(avatarCurrentRow_00005,4)})
watched-or({watched-and({w-literal(avatarCurrentRow_00006,2),w-literal(aux117,0)}),gaceq(blocksCurrentCol_00005_00000,blocksCurrentCol_00006_00000)})
watched-or({diseq(1,gridCurrent_00007_00003_00001),watched-and({w-literal(avatarCurrentRow_00007,4),w-literal(avatarCurrentCol_00007,2)}),w-literal(gridCurrent_00008_00003_00001,1)})
watched-or({diseq(1,gridCurrent_00006_00003_00001),watched-and({w-literal(avatarCurrentRow_00006,4),w-literal(avatarCurrentCol_00006,2)}),w-literal(gridCurrent_00007_00003_00001,1)})
watched-or({diseq(avatarCurrentCol_00005,blocksCurrentCol_00005_00001),diseq(avatarCurrentRow_00005,3)})
watched-or({diseq(avatarCurrentRow_00003,2),diseq(avatarCurrentCol_00003,blocksCurrentCol_00003_00000)})
watched-or({watched-and({w-literal(avatarCurrentRow_00002,3),w-literal(avatarCurrentCol_00002,3)}),w-literal(blocksCurrentCol_00002_00001,3)})
diseq(aux253,0)
watched-or({watched-and({w-literal(avatarCurrentRow_00002,4),w-literal(avatarCurrentCol_00002,2)}),w-literal(gridCurrent_00003_00003_00001,1)})
watched-or({w-literal(aux254,0),diseq(aux98,1)})
watched-or({diseq(avatarCurrentCol_00005,blocksCurrentCol_00005_00000),diseq(avatarCurrentRow_00005,2)})
watched-or({watched-and({w-literal(avatarCurrentRow_00006,4),w-literal(aux120,0)}),gaceq(blocksCurrentCol_00005_00002,blocksCurrentCol_00006_00002)})
watched-or({diseq(avatarCurrentRow_00003,3),diseq(avatarCurrentCol_00003,blocksCurrentCol_00003_00001)})
watched-or({watched-and({w-literal(avatarCurrentRow_00006,2),w-literal(avatarCurrentCol_00006,3)}),w-literal(gridCurrent_00007_00001_00002,1),diseq(gridCurrent_00006_00001_00002,1)})
watched-or({watched-and({gaceq(aux255,blocksCurrentCol_00009_00001),w-literal(moveRow_00008,0)}),diseq(3,avatarCurrentRow_00009),w-literal(aux116,1)})
diseq(0,aux257)
diseq(0,aux259)
watched-or({watched-and({w-literal(avatarCurrentRow_00001,2),w-literal(avatarCurrentCol_00001,3)}),w-literal(gridCurrent_00002_00001_00002,1)})
watched-or({diseq(0,gridCurrent_00006_00003_00001),w-literal(gridCurrent_00007_00003_00001,0)})
watched-or({diseq(3,avatarCurrentRow_00007),watched-and({w-literal(moveRow_00006,0),gaceq(aux260,blocksCurrentCol_00007_00001)}),w-literal(aux105,1)})
watched-or({diseq(1,aux99),w-literal(aux261,0)})
watched-or({diseq(3,aux160),w-literal(aux89,1),diseq(aux139,blocksCurrentCol_00009_00001)})
watched-or({watched-and({w-literal(avatarCurrentRow_00002,2),w-literal(avatarCurrentCol_00002,3)}),w-literal(gridCurrent_00003_00001_00002,1),diseq(1,gridCurrent_00002_00001_00002)})
watched-or({diseq(2,avatarCurrentRow_00007),watched-and({w-literal(moveRow_00006,0),gaceq(aux262,blocksCurrentCol_00007_00000)}),w-literal(aux111,1)})
watched-or({watched-and({w-literal(avatarCurrentRow_00009,4),w-literal(avatarCurrentCol_00009,2)}),w-literal(gridCurrent_00010_00003_00001,1),diseq(1,gridCurrent_00009_00003_00001)})
watched-or({diseq(2,avatarCurrentRow_00004),watched-and({gaceq(aux263,blocksCurrentCol_00004_00000),w-literal(moveRow_00003,0)}),w-literal(aux121,1)})
watched-or({diseq(4,avatarCurrentRow_00002),diseq(avatarCurrentCol_00002,3),watched-and({w-literal(moveRow_00001,0),w-literal(moveCol_00001,0)})})
diseq(aux96,0)
watched-or({diseq(4,aux157),w-literal(aux91,1),diseq(blocksCurrentCol_00005_00002,aux141)})
watched-or({diseq(4,avatarCurrentRow_00007),watched-and({w-literal(moveRow_00006,0),gaceq(aux264,blocksCurrentCol_00007_00002)}),w-literal(aux103,1)})
watched-or({w-literal(gridCurrent_00004_00003_00001,0),diseq(gridCurrent_00003_00003_00001,0)})
watched-or({w-literal(blocksCurrentCol_00001_00000,3),watched-and({w-literal(moveRow_00000,0),w-literal(moveCol_00000,1)})})
diseq(aux266,0)
diseq(0,aux268)
diseq(aux93,0)
watched-or({diseq(2,aux157),w-literal(aux91,1),diseq(blocksCurrentCol_00005_00000,aux141)})
watched-or({w-literal(gridCurrent_00004_00001_00002,0),diseq(0,gridCurrent_00003_00001_00002)})
watched-or({gaceq(blocksCurrentCol_00003_00002,blocksCurrentCol_00004_00002),watched-and({w-literal(avatarCurrentRow_00004,4),w-literal(aux122,0)})})
watched-or({diseq(avatarCurrentCol_00004,blocksCurrentCol_00004_00000),diseq(avatarCurrentRow_00004,2)})
watched-or({diseq(4,avatarCurrentRow_00010),watched-and({w-literal(moveRow_00009,0),w-literal(aux270,4)}),w-literal(aux107,1)})
watched-or({diseq(2,aux152),diseq(aux144,blocksCurrentCol_00002_00000),w-literal(aux83,1)})
diseq(0,aux272)
watched-or({diseq(avatarCurrentCol_00004,blocksCurrentCol_00004_00001),diseq(avatarCurrentRow_00004,3)})
watched-or({diseq(gridCurrent_00009_00001_00002,0),w-literal(gridCurrent_00010_00001_00002,0)})
diseq(aux274,0)
watched-or({diseq(avatarCurrentCol_00004,blocksCurrentCol_00004_00002),diseq(avatarCurrentRow_00004,4)})
diseq(0,aux279)
diseq(0,aux97)
watched-or({w-literal(gridCurrent_00003_00001_00002,0),diseq(0,gridCurrent_00002_00001_00002)})
watched-or({diseq(avatarCurrentRow_00002,2),diseq(avatarCurrentCol_00002,blocksCurrentCol_00002_00000)})
watched-or({gaceq(blocksCurrentCol_00003_00000,blocksCurrentCol_00004_00000),watched-and({w-literal(avatarCurrentRow_00004,2),w-literal(aux121,0)})})
watched-or({diseq(1,aux94),w-literal(aux283,0)})
watched-or({diseq(3,aux156),w-literal(aux82,1),diseq(aux140,blocksCurrentCol_00006_00001)})
watched-or({diseq(avatarCurrentRow_00002,3),diseq(avatarCurrentCol_00002,blocksCurrentCol_00002_00001)})
watched-or({watched-and({w-literal(avatarCurrentRow_00003,4),w-literal(avatarCurrentCol_00003,3)}),w-literal(blocksCurrentCol_00003_00002,3)})
watched-or({watched-and({w-literal(avatarCurrentRow_00007,2),w-literal(aux111,0)}),gaceq(blocksCurrentCol_00006_00000,blocksCurrentCol_00007_00000)})
watched-or({diseq(3,avatarCurrentRow_00010),watched-and({w-literal(moveRow_00009,0),w-literal(aux284,4)}),w-literal(aux112,1)})
watched-or({diseq(avatarCurrentRow_00002,4),diseq(avatarCurrentCol_00002,3)})
diseq(0,aux289)
watched-or({gaceq(blocksCurrentCol_00002_00001,blocksCurrentCol_00003_00001),watched-and({w-literal(avatarCurrentRow_00003,3),w-literal(aux109,0)})})
watched-or({diseq(4,avatarCurrentRow_00008),w-literal(aux104,1),watched-and({w-literal(moveRow_00007,0),gaceq(aux290,blocksCurrentCol_00008_00002)})})
watched-or({gaceq(blocksCurrentCol_00007_00000,blocksCurrentCol_00008_00000),watched-and({w-literal(avatarCurrentRow_00008,2),w-literal(aux124,0)})})
watched-or({diseq(2,avatarCurrentRow_00010),watched-and({w-literal(moveRow_00009,0),w-literal(aux291,5)}),w-literal(aux106,1)})
watched-or({gaceq(blocksCurrentCol_00008_00002,blocksCurrentCol_00009_00002),watched-and({w-literal(avatarCurrentRow_00009,4),w-literal(aux119,0)})})
watched-or({gaceq(blocksCurrentCol_00002_00000,blocksCurrentCol_00003_00000),watched-and({w-literal(avatarCurrentRow_00003,2),w-literal(aux114,0)})})
watched-or({w-literal(gridCurrent_00006_00001_00002,0),diseq(0,gridCurrent_00005_00001_00002)})
watched-or({diseq(3,aux159),w-literal(aux87,1),diseq(aux143,blocksCurrentCol_00007_00001)})
watched-or({w-literal(gridCurrent_00006_00003_00001,0),diseq(0,gridCurrent_00005_00003_00001)})
watched-or({diseq(4,aux155),w-literal(aux86,1),diseq(aux147,blocksCurrentCol_00003_00002)})
watched-or({w-literal(gridCurrent_00010_00003_00001,0),diseq(0,gridCurrent_00009_00003_00001)})
diseq(aux296,0)
watched-or({watched-and({w-literal(avatarCurrentRow_00005,4),w-literal(aux113,0)}),gaceq(blocksCurrentCol_00005_00002,blocksCurrentCol_00004_00002)})
watched-or({w-literal(gridCurrent_00005_00001_00002,0),diseq(0,gridCurrent_00004_00001_00002)})
watched-or({watched-and({w-literal(avatarCurrentRow_00007,4),w-literal(aux103,0)}),gaceq(blocksCurrentCol_00006_00002,blocksCurrentCol_00007_00002)})
watched-or({diseq(3,aux161),w-literal(aux85,1),diseq(aux148,4)})
watched-or({diseq(3,avatarCurrentRow_00006),w-literal(aux110,1),watched-and({w-literal(moveRow_00005,0),gaceq(blocksCurrentCol_00006_00001,aux297)})})
watched-or({w-literal(gridCurrent_00009_00001_00002,1),watched-and({w-literal(avatarCurrentRow_00008,2),w-literal(avatarCurrentCol_00008,3)}),diseq(gridCurrent_00008_00001_00002,1)})
diseq(0,aux94)
watched-or({watched-and({w-literal(avatarCurrentRow_00005,3),w-literal(aux108,0)}),gaceq(blocksCurrentCol_00005_00001,blocksCurrentCol_00004_00001)})
watched-or({w-literal(gridCurrent_00006_00003_00001,1),diseq(1,gridCurrent_00005_00003_00001),watched-and({w-literal(avatarCurrentRow_00005,4),w-literal(avatarCurrentCol_00005,2)})})
watched-or({diseq(2,aux160),w-literal(aux89,1),diseq(aux139,blocksCurrentCol_00009_00000)})
watched-or({diseq(2,aux154),w-literal(aux84,1),diseq(aux146,blocksCurrentCol_00004_00000)})
watched-or({gaceq(blocksCurrentCol_00007_00002,blocksCurrentCol_00008_00002),watched-and({w-literal(avatarCurrentRow_00008,4),w-literal(aux104,0)})})
diseq(aux299,0)
watched-or({diseq(avatarCurrentCol_00001,blocksCurrentCol_00001_00000),diseq(avatarCurrentRow_00001,2)})
watched-or({watched-and({w-literal(avatarCurrentRow_00005,2),w-literal(aux115,0)}),gaceq(blocksCurrentCol_00005_00000,blocksCurrentCol_00004_00000)})
watched-or({diseq(1,aux92),w-literal(aux300,0)})
watched-or({diseq(avatarCurrentRow_00001,3),diseq(avatarCurrentCol_00001,3)})
watched-or({watched-and({w-literal(avatarCurrentRow_00003,2),w-literal(avatarCurrentCol_00003,3)}),w-literal(gridCurrent_00004_00001_00002,1),diseq(1,gridCurrent_00003_00001_00002)})
watched-or({w-literal(gridCurrent_00005_00003_00001,1),watched-and({w-literal(avatarCurrentRow_00004,4),w-literal(avatarCurrentCol_00004,2)}),diseq(gridCurrent_00004_00003_00001,1)})
diseq(aux302,0)
watched-or({diseq(2,aux153),diseq(aux145,blocksCurrentCol_00001_00000),w-literal(aux88,1)})
diseq(aux304,0)
watched-or({gaceq(blocksCurrentCol_00007_00001,blocksCurrentCol_00008_00001),watched-and({w-literal(avatarCurrentRow_00008,3),w-literal(aux101,0)})})
diseq(aux306,0)
watched-or({diseq(4,avatarCurrentRow_00004),watched-and({gaceq(aux307,blocksCurrentCol_00004_00002),w-literal(moveRow_00003,0)}),w-literal(aux122,1)})
sumleq([-3,blocksCurrentCol_00007_00000],aux194)
sumgeq([-3,blocksCurrentCol_00007_00000],aux194)
sumleq([blocksCurrentCol_00005_00002,-3],aux196)
sumgeq([blocksCurrentCol_00005_00002,-3],aux196)
sumleq([moveCol_00008,blocksCurrentCol_00008_00000],aux199)
sumgeq([moveCol_00008,blocksCurrentCol_00008_00000],aux199)
sumleq([-3,blocksCurrentCol_00007_00002],aux200)
sumgeq([-3,blocksCurrentCol_00007_00002],aux200)
sumleq([moveCol_00007,blocksCurrentCol_00007_00001],aux202)
sumgeq([moveCol_00007,blocksCurrentCol_00007_00001],aux202)
sumleq([moveCol_00004,blocksCurrentCol_00004_00002],aux203)
sumgeq([moveCol_00004,blocksCurrentCol_00004_00002],aux203)
sumleq([blocksCurrentCol_00005_00000,-3],aux205)
sumgeq([blocksCurrentCol_00005_00000,-3],aux205)
sumleq([-3,blocksCurrentCol_00009_00001],aux207)
sumgeq([-3,blocksCurrentCol_00009_00001],aux207)
sumleq([moveCol_00002,3],aux209)
sumgeq([moveCol_00002,3],aux209)
sumleq([moveCol_00008,blocksCurrentCol_00008_00002],aux210)
sumgeq([moveCol_00008,blocksCurrentCol_00008_00002],aux210)
sumleq([aux211,aux212],1)
sumgeq([aux211,aux212],1)
sumleq([moveCol_00000,3],aux214)
sumgeq([moveCol_00000,3],aux214)
sumleq([blocksCurrentCol_00002_00001,-3],aux215)
sumgeq([blocksCurrentCol_00002_00001,-3],aux215)
sumleq([-3,blocksCurrentCol_00004_00001],aux217)
sumgeq([-3,blocksCurrentCol_00004_00001],aux217)
sumleq([aux219,aux220],1)
sumgeq([aux219,aux220],1)
sumleq([-3,blocksCurrentCol_00003_00001],aux223)
sumgeq([-3,blocksCurrentCol_00003_00001],aux223)
sumleq([aux226,aux227],1)
sumgeq([aux226,aux227],1)
sumleq([blocksCurrentCol_00005_00002,moveCol_00005],aux229)
sumgeq([blocksCurrentCol_00005_00002,moveCol_00005],aux229)
sumleq([-3,blocksCurrentCol_00008_00001],aux230)
sumgeq([-3,blocksCurrentCol_00008_00001],aux230)
sumleq([aux232,aux233],1)
sumgeq([aux232,aux233],1)
sumleq([-3,blocksCurrentCol_00003_00000],aux235)
sumgeq([-3,blocksCurrentCol_00003_00000],aux235)
sumleq([aux237,aux238],1)
sumgeq([aux237,aux238],1)
sumleq([moveCol_00001,blocksCurrentCol_00001_00000],aux240)
sumgeq([moveCol_00001,blocksCurrentCol_00001_00000],aux240)
sumleq([moveCol_00002,blocksCurrentCol_00002_00001],aux241)
sumgeq([moveCol_00002,blocksCurrentCol_00002_00001],aux241)
sumleq([moveCol_00001,3],aux242)
sumgeq([moveCol_00001,3],aux242)
sumleq([moveCol_00002,blocksCurrentCol_00002_00000],aux243)
sumgeq([moveCol_00002,blocksCurrentCol_00002_00000],aux243)
sumleq([blocksCurrentCol_00006_00001,-3],aux245)
sumgeq([blocksCurrentCol_00006_00001,-3],aux245)
sumleq([moveCol_00004,blocksCurrentCol_00004_00001],aux247)
sumgeq([moveCol_00004,blocksCurrentCol_00004_00001],aux247)
sumleq([moveCol_00003,blocksCurrentCol_00003_00001],aux248)
sumgeq([moveCol_00003,blocksCurrentCol_00003_00001],aux248)
sumleq([moveCol_00004,blocksCurrentCol_00004_00000],aux249)
sumgeq([moveCol_00004,blocksCurrentCol_00004_00000],aux249)
sumleq([moveCol_00007,blocksCurrentCol_00007_00000],aux250)
sumgeq([moveCol_00007,blocksCurrentCol_00007_00000],aux250)
sumleq([blocksCurrentCol_00005_00000,moveCol_00005],aux251)
sumgeq([blocksCurrentCol_00005_00000,moveCol_00005],aux251)
sumleq([-3,blocksCurrentCol_00007_00001],aux252)
sumgeq([-3,blocksCurrentCol_00007_00001],aux252)
sumleq([moveCol_00008,blocksCurrentCol_00008_00001],aux255)
sumgeq([moveCol_00008,blocksCurrentCol_00008_00001],aux255)
sumleq([blocksCurrentCol_00005_00001,-3],aux256)
sumgeq([blocksCurrentCol_00005_00001,-3],aux256)
sumleq([-4,blocksCurrentCol_00009_00000],aux258)
sumgeq([-4,blocksCurrentCol_00009_00000],aux258)
sumleq([moveCol_00006,blocksCurrentCol_00006_00001],aux260)
sumgeq([moveCol_00006,blocksCurrentCol_00006_00001],aux260)
sumleq([moveCol_00006,blocksCurrentCol_00006_00000],aux262)
sumgeq([moveCol_00006,blocksCurrentCol_00006_00000],aux262)
sumleq([moveCol_00003,blocksCurrentCol_00003_00000],aux263)
sumgeq([moveCol_00003,blocksCurrentCol_00003_00000],aux263)
sumleq([moveCol_00006,blocksCurrentCol_00006_00002],aux264)
sumgeq([moveCol_00006,blocksCurrentCol_00006_00002],aux264)
sumleq([-3,blocksCurrentCol_00003_00002],aux265)
sumgeq([-3,blocksCurrentCol_00003_00002],aux265)
sumleq([-3,blocksCurrentCol_00004_00000],aux267)
sumgeq([-3,blocksCurrentCol_00004_00000],aux267)
sumleq([moveRow_00000,moveCol_00000],1)
sumgeq([moveRow_00000,moveCol_00000],1)
sumleq([moveCol_00009,blocksCurrentCol_00009_00002],aux270)
sumgeq([moveCol_00009,blocksCurrentCol_00009_00002],aux270)
sumleq([-3,blocksCurrentCol_00009_00002],aux271)
sumgeq([-3,blocksCurrentCol_00009_00002],aux271)
sumleq([blocksCurrentCol_00002_00000,-3],aux273)
sumgeq([blocksCurrentCol_00002_00000,-3],aux273)
sumleq([aux275,aux276],1)
sumgeq([aux275,aux276],1)
sumleq([-3,blocksCurrentCol_00004_00002],aux278)
sumgeq([-3,blocksCurrentCol_00004_00002],aux278)
sumleq([aux280,aux281],1)
sumgeq([aux280,aux281],1)
sumleq([moveCol_00009,blocksCurrentCol_00009_00001],aux284)
sumgeq([moveCol_00009,blocksCurrentCol_00009_00001],aux284)
sumleq([aux285,aux286],1)
sumgeq([aux285,aux286],1)
sumleq([-3,blocksCurrentCol_00008_00002],aux288)
sumgeq([-3,blocksCurrentCol_00008_00002],aux288)
sumleq([moveCol_00007,blocksCurrentCol_00007_00002],aux290)
sumgeq([moveCol_00007,blocksCurrentCol_00007_00002],aux290)
sumleq([moveCol_00009,blocksCurrentCol_00009_00000],aux291)
sumgeq([moveCol_00009,blocksCurrentCol_00009_00000],aux291)
sumleq([aux292,aux293],1)
sumgeq([aux292,aux293],1)
sumleq([blocksCurrentCol_00006_00000,-3],aux295)
sumgeq([blocksCurrentCol_00006_00000,-3],aux295)
sumleq([blocksCurrentCol_00005_00001,moveCol_00005],aux297)
sumgeq([blocksCurrentCol_00005_00001,moveCol_00005],aux297)
sumleq([blocksCurrentCol_00001_00000,-3],aux298)
sumgeq([blocksCurrentCol_00001_00000,-3],aux298)
weightedsumleq([6,1,1],[avatarCurrentRow_00010,avatarCurrentCol_00010,-14],aux301)
weightedsumgeq([6,1,1],[avatarCurrentRow_00010,avatarCurrentCol_00010,-14],aux301)
sumleq([-3,blocksCurrentCol_00008_00000],aux303)
sumgeq([-3,blocksCurrentCol_00008_00000],aux303)
sumleq([blocksCurrentCol_00006_00002,-3],aux305)
sumgeq([blocksCurrentCol_00006_00002,-3],aux305)
sumleq([moveCol_00003,blocksCurrentCol_00003_00002],aux307)
sumgeq([moveCol_00003,blocksCurrentCol_00003_00002],aux307)
weightedsumleq([6,1,1],[avatarCurrentRow_00001,avatarCurrentCol_00001,-14],aux125)
weightedsumgeq([6,1,1],[avatarCurrentRow_00001,avatarCurrentCol_00001,-14],aux125)
weightedsumleq([6,1,1],[avatarCurrentRow_00002,avatarCurrentCol_00002,-14],aux126)
weightedsumgeq([6,1,1],[avatarCurrentRow_00002,avatarCurrentCol_00002,-14],aux126)
weightedsumleq([6,1,1],[avatarCurrentRow_00005,avatarCurrentCol_00005,-14],aux127)
weightedsumgeq([6,1,1],[avatarCurrentRow_00005,avatarCurrentCol_00005,-14],aux127)
weightedsumleq([6,1,1],[avatarCurrentRow_00007,avatarCurrentCol_00007,-14],aux128)
weightedsumgeq([6,1,1],[avatarCurrentRow_00007,avatarCurrentCol_00007,-14],aux128)
weightedsumleq([6,1,1],[avatarCurrentRow_00006,avatarCurrentCol_00006,-14],aux129)
weightedsumgeq([6,1,1],[avatarCurrentRow_00006,avatarCurrentCol_00006,-14],aux129)
weightedsumleq([6,1,1],[avatarCurrentRow_00003,avatarCurrentCol_00003,-14],aux130)
weightedsumgeq([6,1,1],[avatarCurrentRow_00003,avatarCurrentCol_00003,-14],aux130)
weightedsumleq([6,1,1],[avatarCurrentRow_00004,avatarCurrentCol_00004,-14],aux131)
weightedsumgeq([6,1,1],[avatarCurrentRow_00004,avatarCurrentCol_00004,-14],aux131)
weightedsumleq([6,1,1],[avatarCurrentRow_00008,avatarCurrentCol_00008,-14],aux132)
weightedsumgeq([6,1,1],[avatarCurrentRow_00008,avatarCurrentCol_00008,-14],aux132)
weightedsumleq([6,1,1],[avatarCurrentRow_00009,avatarCurrentCol_00009,-14],aux133)
weightedsumgeq([6,1,1],[avatarCurrentRow_00009,avatarCurrentCol_00009,-14],aux133)
sumleq([avatarCurrentRow_00007,moveRow_00007],avatarCurrentRow_00008)
sumgeq([avatarCurrentRow_00007,moveRow_00007],avatarCurrentRow_00008)
sumleq([avatarCurrentCol_00009,moveCol_00009],avatarCurrentCol_00010)
sumgeq([avatarCurrentCol_00009,moveCol_00009],avatarCurrentCol_00010)
sumleq([avatarCurrentCol_00003,moveCol_00003],avatarCurrentCol_00004)
sumgeq([avatarCurrentCol_00003,moveCol_00003],avatarCurrentCol_00004)
sumleq([avatarCurrentRow_00002,moveRow_00002],avatarCurrentRow_00003)
sumgeq([avatarCurrentRow_00002,moveRow_00002],avatarCurrentRow_00003)
weightedsumleq([1,2],[avatarCurrentRow_00007,moveRow_00006],aux138)
weightedsumgeq([1,2],[avatarCurrentRow_00007,moveRow_00006],aux138)
sumleq([avatarCurrentCol_00009,moveCol_00008],aux139)
sumgeq([avatarCurrentCol_00009,moveCol_00008],aux139)
sumleq([avatarCurrentCol_00006,moveCol_00005],aux140)
sumgeq([avatarCurrentCol_00006,moveCol_00005],aux140)
sumleq([avatarCurrentCol_00005,moveCol_00004],aux141)
sumgeq([avatarCurrentCol_00005,moveCol_00004],aux141)
sumleq([avatarCurrentCol_00008,moveCol_00007],aux142)
sumgeq([avatarCurrentCol_00008,moveCol_00007],aux142)
sumleq([avatarCurrentCol_00007,moveCol_00006],aux143)
sumgeq([avatarCurrentCol_00007,moveCol_00006],aux143)
sumleq([avatarCurrentCol_00002,moveCol_00001],aux144)
sumgeq([avatarCurrentCol_00002,moveCol_00001],aux144)
sumleq([avatarCurrentCol_00001,moveCol_00000],aux145)
sumgeq([avatarCurrentCol_00001,moveCol_00000],aux145)
sumleq([avatarCurrentCol_00004,moveCol_00003],aux146)
sumgeq([avatarCurrentCol_00004,moveCol_00003],aux146)
sumleq([avatarCurrentCol_00003,moveCol_00002],aux147)
sumgeq([avatarCurrentCol_00003,moveCol_00002],aux147)
sumleq([avatarCurrentCol_00010,moveCol_00009],aux148)
sumgeq([avatarCurrentCol_00010,moveCol_00009],aux148)
weightedsumleq([1,2],[avatarCurrentCol_00007,moveCol_00006],aux149)
weightedsumgeq([1,2],[avatarCurrentCol_00007,moveCol_00006],aux149)
sumleq([avatarCurrentCol_00004,moveCol_00004],avatarCurrentCol_00005)
sumgeq([avatarCurrentCol_00004,moveCol_00004],avatarCurrentCol_00005)
sumleq([avatarCurrentRow_00008,moveRow_00008],avatarCurrentRow_00009)
sumgeq([avatarCurrentRow_00008,moveRow_00008],avatarCurrentRow_00009)
sumleq([avatarCurrentRow_00002,moveRow_00001],aux152)
sumgeq([avatarCurrentRow_00002,moveRow_00001],aux152)
sumleq([avatarCurrentRow_00001,moveRow_00000],aux153)
sumgeq([avatarCurrentRow_00001,moveRow_00000],aux153)
sumleq([avatarCurrentRow_00004,moveRow_00003],aux154)
sumgeq([avatarCurrentRow_00004,moveRow_00003],aux154)
sumleq([avatarCurrentRow_00003,moveRow_00002],aux155)
sumgeq([avatarCurrentRow_00003,moveRow_00002],aux155)
sumleq([avatarCurrentRow_00006,moveRow_00005],aux156)
sumgeq([avatarCurrentRow_00006,moveRow_00005],aux156)
sumleq([avatarCurrentRow_00005,moveRow_00004],aux157)
sumgeq([avatarCurrentRow_00005,moveRow_00004],aux157)
sumleq([avatarCurrentRow_00008,moveRow_00007],aux158)
sumgeq([avatarCurrentRow_00008,moveRow_00007],aux158)
sumleq([avatarCurrentRow_00007,moveRow_00006],aux159)
sumgeq([avatarCurrentRow_00007,moveRow_00006],aux159)
sumleq([avatarCurrentRow_00009,moveRow_00008],aux160)
sumgeq([avatarCurrentRow_00009,moveRow_00008],aux160)
sumleq([avatarCurrentRow_00010,moveRow_00009],aux161)
sumgeq([avatarCurrentRow_00010,moveRow_00009],aux161)
weightedsumleq([1,2],[avatarCurrentRow_00004,moveRow_00003],aux162)
weightedsumgeq([1,2],[avatarCurrentRow_00004,moveRow_00003],aux162)
sumleq([avatarCurrentCol_00002,moveCol_00002],avatarCurrentCol_00003)
sumgeq([avatarCurrentCol_00002,moveCol_00002],avatarCurrentCol_00003)
weightedsumleq([1,2],[avatarCurrentCol_00008,moveCol_00007],aux164)
weightedsumgeq([1,2],[avatarCurrentCol_00008,moveCol_00007],aux164)
sumleq([avatarCurrentCol_00008,moveCol_00008],avatarCurrentCol_00009)
sumgeq([avatarCurrentCol_00008,moveCol_00008],avatarCurrentCol_00009)
sumleq([avatarCurrentRow_00009,moveRow_00009],avatarCurrentRow_00010)
sumgeq([avatarCurrentRow_00009,moveRow_00009],avatarCurrentRow_00010)
sumleq([avatarCurrentRow_00003,moveRow_00003],avatarCurrentRow_00004)
sumgeq([avatarCurrentRow_00003,moveRow_00003],avatarCurrentRow_00004)
weightedsumleq([1,2],[avatarCurrentRow_00001,moveRow_00000],aux168)
weightedsumgeq([1,2],[avatarCurrentRow_00001,moveRow_00000],aux168)
weightedsumleq([1,2],[avatarCurrentCol_00005,moveCol_00004],aux169)
weightedsumgeq([1,2],[avatarCurrentCol_00005,moveCol_00004],aux169)
weightedsumleq([1,2],[avatarCurrentCol_00002,moveCol_00001],aux170)
weightedsumgeq([1,2],[avatarCurrentCol_00002,moveCol_00001],aux170)
weightedsumleq([1,2],[avatarCurrentCol_00010,moveCol_00009],aux171)
weightedsumgeq([1,2],[avatarCurrentCol_00010,moveCol_00009],aux171)
sumleq([avatarCurrentCol_00001,moveCol_00001],avatarCurrentCol_00002)
sumgeq([avatarCurrentCol_00001,moveCol_00001],avatarCurrentCol_00002)
sumleq([moveCol_00000,2],avatarCurrentCol_00001)
sumgeq([moveCol_00000,2],avatarCurrentCol_00001)
weightedsumleq([1,2],[avatarCurrentRow_00009,moveRow_00008],aux174)
weightedsumgeq([1,2],[avatarCurrentRow_00009,moveRow_00008],aux174)
sumleq([avatarCurrentRow_00004,moveRow_00004],avatarCurrentRow_00005)
sumgeq([avatarCurrentRow_00004,moveRow_00004],avatarCurrentRow_00005)
sumleq([avatarCurrentCol_00006,moveCol_00006],avatarCurrentCol_00007)
sumgeq([avatarCurrentCol_00006,moveCol_00006],avatarCurrentCol_00007)
weightedsumleq([1,2],[avatarCurrentCol_00009,moveCol_00008],aux177)
weightedsumgeq([1,2],[avatarCurrentCol_00009,moveCol_00008],aux177)
weightedsumleq([1,2],[avatarCurrentCol_00003,moveCol_00002],aux178)
weightedsumgeq([1,2],[avatarCurrentCol_00003,moveCol_00002],aux178)
weightedsumleq([1,2],[avatarCurrentRow_00006,moveRow_00005],aux179)
weightedsumgeq([1,2],[avatarCurrentRow_00006,moveRow_00005],aux179)
sumleq([moveRow_00000,2],avatarCurrentRow_00001)
sumgeq([moveRow_00000,2],avatarCurrentRow_00001)
weightedsumleq([1,2],[avatarCurrentCol_00006,moveCol_00005],aux181)
weightedsumgeq([1,2],[avatarCurrentCol_00006,moveCol_00005],aux181)
sumleq([avatarCurrentRow_00005,moveRow_00005],avatarCurrentRow_00006)
sumgeq([avatarCurrentRow_00005,moveRow_00005],avatarCurrentRow_00006)
weightedsumleq([1,2],[avatarCurrentRow_00003,moveRow_00002],aux183)
weightedsumgeq([1,2],[avatarCurrentRow_00003,moveRow_00002],aux183)
sumleq([avatarCurrentRow_00001,moveRow_00001],avatarCurrentRow_00002)
sumgeq([avatarCurrentRow_00001,moveRow_00001],avatarCurrentRow_00002)
sumleq([avatarCurrentCol_00007,moveCol_00007],avatarCurrentCol_00008)
sumgeq([avatarCurrentCol_00007,moveCol_00007],avatarCurrentCol_00008)
weightedsumleq([1,2],[avatarCurrentCol_00004,moveCol_00003],aux186)
weightedsumgeq([1,2],[avatarCurrentCol_00004,moveCol_00003],aux186)
sumleq([avatarCurrentCol_00005,moveCol_00005],avatarCurrentCol_00006)
sumgeq([avatarCurrentCol_00005,moveCol_00005],avatarCurrentCol_00006)
sumleq([avatarCurrentRow_00006,moveRow_00006],avatarCurrentRow_00007)
sumgeq([avatarCurrentRow_00006,moveRow_00006],avatarCurrentRow_00007)
weightedsumleq([1,2],[avatarCurrentCol_00001,moveCol_00000],aux189)
weightedsumgeq([1,2],[avatarCurrentCol_00001,moveCol_00000],aux189)
weightedsumleq([1,2],[avatarCurrentRow_00005,moveRow_00004],aux190)
weightedsumgeq([1,2],[avatarCurrentRow_00005,moveRow_00004],aux190)
weightedsumleq([1,2],[avatarCurrentRow_00008,moveRow_00007],aux191)
weightedsumgeq([1,2],[avatarCurrentRow_00008,moveRow_00007],aux191)
weightedsumleq([1,2],[avatarCurrentRow_00002,moveRow_00001],aux192)
weightedsumgeq([1,2],[avatarCurrentRow_00002,moveRow_00001],aux192)
weightedsumleq([1,2],[avatarCurrentRow_00010,moveRow_00009],aux193)
weightedsumgeq([1,2],[avatarCurrentRow_00010,moveRow_00009],aux193)
**EOF**
