MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 133
# CSE_active_eliminated_expressions = 303
# CSE_active_total_size = 1346
**VARIABLES**
DISCRETE moveRow_00000 #
{0..1}
DISCRETE moveRow_00001 #
{-1..1}
DISCRETE moveRow_00002 #
{-1..1}
DISCRETE moveRow_00003 #
{-1..1}
DISCRETE moveRow_00004 #
{-1..1}
DISCRETE moveRow_00005 #
{-1..1}
DISCRETE moveRow_00006 #
{-1..1}
DISCRETE moveRow_00007 #
{-1..1}
DISCRETE moveRow_00008 #
{-1..1}
DISCRETE moveRow_00009 #
{-1..1}
DISCRETE moveRow_00010 #
{-1..1}
DISCRETE moveRow_00011 #
{-1..1}
DISCRETE moveCol_00000 #
{-1..1}
DISCRETE moveCol_00001 #
{-1..1}
DISCRETE moveCol_00002 #
{-1..1}
DISCRETE moveCol_00003 #
{-1..1}
DISCRETE moveCol_00004 #
{-1..1}
DISCRETE moveCol_00005 #
{-1..1}
DISCRETE moveCol_00006 #
{-1..1}
DISCRETE moveCol_00007 #
{-1..1}
DISCRETE moveCol_00008 #
{-1..1}
DISCRETE moveCol_00009 #
{-1..1}
DISCRETE moveCol_00010 #
{-1..1}
DISCRETE moveCol_00011 #
{-1..1}
DISCRETE avatarCurrentRow_00001 #
{2..3}
DISCRETE avatarCurrentRow_00002 #
{2..3}
DISCRETE avatarCurrentRow_00003 #
{2..4}
DISCRETE avatarCurrentRow_00004 #
{2..4}
DISCRETE avatarCurrentRow_00005 #
{2..4}
DISCRETE avatarCurrentRow_00006 #
{2..4}
DISCRETE avatarCurrentRow_00007 #
{2..4}
DISCRETE avatarCurrentRow_00008 #
{2..4}
DISCRETE avatarCurrentRow_00009 #
{2..4}
DISCRETE avatarCurrentRow_00010 #
{2..4}
DISCRETE avatarCurrentRow_00011 #
{2..4}
DISCRETE avatarCurrentRow_00012 #
{2..4}
DISCRETE avatarCurrentCol_00001 #
{2..4}
DISCRETE avatarCurrentCol_00002 #
{3..5}
DISCRETE avatarCurrentCol_00003 #
{2..5}
DISCRETE avatarCurrentCol_00004 #
{2..6}
DISCRETE avatarCurrentCol_00005 #
{2..6}
DISCRETE avatarCurrentCol_00006 #
{2..6}
DISCRETE avatarCurrentCol_00007 #
{2..6}
DISCRETE avatarCurrentCol_00008 #
{2..6}
DISCRETE avatarCurrentCol_00009 #
{2..6}
DISCRETE avatarCurrentCol_00010 #
{2..6}
DISCRETE avatarCurrentCol_00011 #
{2..6}
DISCRETE avatarCurrentCol_00012 #
{3..6}
DISCRETE blocksCurrentRow_00005_00001 #
{2..3}
DISCRETE blocksCurrentRow_00006_00001 #
{2..3}
DISCRETE blocksCurrentRow_00007_00001 #
{2..3}
DISCRETE blocksCurrentRow_00008_00001 #
{2..3}
DISCRETE blocksCurrentRow_00009_00001 #
{2..3}
DISCRETE blocksCurrentRow_00010_00001 #
{2..3}
DISCRETE blocksCurrentRow_00011_00001 #
{2..3}
DISCRETE blocksCurrentCol_00001_00000 #
{4..5}
DISCRETE blocksCurrentCol_00002_00000 #
{4..6}
DISCRETE blocksCurrentCol_00003_00000 #
{4..6}
DISCRETE blocksCurrentCol_00003_00001 #
{5..6}
DISCRETE blocksCurrentCol_00004_00000 #
{3..6}
DISCRETE blocksCurrentCol_00004_00001 #
{5..6}
DISCRETE blocksCurrentCol_00005_00000 #
{2..6}
DISCRETE blocksCurrentCol_00005_00001 #
{5..6}
DISCRETE blocksCurrentCol_00006_00000 #
{2..6}
DISCRETE blocksCurrentCol_00006_00001 #
{4..6}
DISCRETE blocksCurrentCol_00007_00000 #
{2..6}
DISCRETE blocksCurrentCol_00007_00001 #
{3..6}
DISCRETE blocksCurrentCol_00008_00000 #
{2..6}
DISCRETE blocksCurrentCol_00008_00001 #
{3..6}
DISCRETE blocksCurrentCol_00009_00000 #
{2..6}
DISCRETE blocksCurrentCol_00009_00001 #
{2..6}
DISCRETE blocksCurrentCol_00010_00000 #
{2..6}
DISCRETE blocksCurrentCol_00010_00001 #
{2..6}
DISCRETE blocksCurrentCol_00011_00000 #
{2..6}
DISCRETE blocksCurrentCol_00011_00001 #
{2..6}
DISCRETE blocksCurrentCol_00012_00000 #
{2..6}
DISCRETE blocksCurrentCol_00012_00001 #
{2..6}
DISCRETE gridCurrent_00002_00001_00003 #
{0..1}
DISCRETE gridCurrent_00003_00001_00003 #
{0..1}
DISCRETE gridCurrent_00004_00001_00003 #
{0..1}
DISCRETE gridCurrent_00004_00002_00004 #
{0..1}
DISCRETE gridCurrent_00005_00001_00003 #
{0..1}
DISCRETE gridCurrent_00005_00002_00004 #
{0..1}
DISCRETE gridCurrent_00006_00001_00003 #
{0..1}
DISCRETE gridCurrent_00006_00002_00004 #
{0..1}
DISCRETE gridCurrent_00007_00001_00003 #
{0..1}
DISCRETE gridCurrent_00007_00002_00004 #
{0..1}
DISCRETE gridCurrent_00008_00001_00003 #
{0..1}
DISCRETE gridCurrent_00008_00002_00004 #
{0..1}
DISCRETE gridCurrent_00009_00001_00003 #
{0..1}
DISCRETE gridCurrent_00009_00002_00004 #
{0..1}
DISCRETE gridCurrent_00010_00001_00003 #
{0..1}
DISCRETE gridCurrent_00010_00002_00004 #
{0..1}
DISCRETE gridCurrent_00011_00001_00003 #
{0..1}
DISCRETE gridCurrent_00011_00002_00004 #
{0..1}
DISCRETE gridCurrent_00012_00001_00003 #
{0..1}
DISCRETE gridCurrent_00012_00002_00004 #
{0..1}
BOOL aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00010 + 2*moveRow_00009)) \/ ((avatarCurrentCol_00010 + 2*moveCol_00009) != blocksCurrentCol_00010_00000)) /\ (((avatarCurrentCol_00010 + 2*moveCol_00009) != blocksCurrentCol_00010_00001) \/ ((avatarCurrentRow_00010 + 2*moveRow_00009) != blocksCurrentRow_00010_00001)))
BOOL aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (((blocksCurrentRow_00005_00001 != (avatarCurrentRow_00005 + 2*moveRow_00004)) \/ (blocksCurrentCol_00005_00001 != (avatarCurrentCol_00005 + 2*moveCol_00004))) /\ ((2 != (avatarCurrentRow_00005 + 2*moveRow_00004)) \/ (blocksCurrentCol_00005_00000 != (avatarCurrentCol_00005 + 2*moveCol_00004))))
BOOL aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00012 + 2*moveRow_00011)) \/ ((avatarCurrentCol_00012 + 2*moveCol_00011) != blocksCurrentCol_00012_00000)) /\ ((2 != (avatarCurrentRow_00012 + 2*moveRow_00011)) \/ ((avatarCurrentCol_00012 + 2*moveCol_00011) != blocksCurrentCol_00012_00001)))
BOOL aux85 #Active-CSE: 2 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00002 + 2*moveRow_00001)) \/ ((avatarCurrentCol_00002 + 2*moveCol_00001) != blocksCurrentCol_00002_00000)) /\ ((3 != (avatarCurrentRow_00002 + 2*moveRow_00001)) \/ ((avatarCurrentCol_00002 + 2*moveCol_00001) != 5)))
BOOL aux86 #Active-CSE: 2 occurrences of this expression or equivalent: ((((avatarCurrentCol_00008 + 2*moveCol_00007) != blocksCurrentCol_00008_00001) \/ (blocksCurrentRow_00008_00001 != (avatarCurrentRow_00008 + 2*moveRow_00007))) /\ ((2 != (avatarCurrentRow_00008 + 2*moveRow_00007)) \/ ((avatarCurrentCol_00008 + 2*moveCol_00007) != blocksCurrentCol_00008_00000)))
BOOL aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00004 + 2*moveRow_00003)) \/ ((avatarCurrentCol_00004 + 2*moveCol_00003) != blocksCurrentCol_00004_00000)) /\ ((3 != (avatarCurrentRow_00004 + 2*moveRow_00003)) \/ ((avatarCurrentCol_00004 + 2*moveCol_00003) != blocksCurrentCol_00004_00001)))
BOOL aux88 #Active-CSE: 2 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00006 + 2*moveRow_00005)) \/ ((avatarCurrentCol_00006 + 2*moveCol_00005) != blocksCurrentCol_00006_00000)) /\ (((avatarCurrentCol_00006 + 2*moveCol_00005) != blocksCurrentCol_00006_00001) \/ (blocksCurrentRow_00006_00001 != (avatarCurrentRow_00006 + 2*moveRow_00005))))
BOOL aux89 #Active-CSE: 2 occurrences of this expression or equivalent: (((blocksCurrentRow_00011_00001 != (avatarCurrentRow_00011 + 2*moveRow_00010)) \/ ((avatarCurrentCol_00011 + 2*moveCol_00010) != blocksCurrentCol_00011_00001)) /\ ((2 != (avatarCurrentRow_00011 + 2*moveRow_00010)) \/ ((avatarCurrentCol_00011 + 2*moveCol_00010) != blocksCurrentCol_00011_00000)))
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00001 + 2*moveRow_00000)) \/ ((avatarCurrentCol_00001 + 2*moveCol_00000) != blocksCurrentCol_00001_00000)) /\ ((3 != (avatarCurrentRow_00001 + 2*moveRow_00000)) \/ ((avatarCurrentCol_00001 + 2*moveCol_00000) != 5)))
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00003 + 2*moveRow_00002)) \/ ((avatarCurrentCol_00003 + 2*moveCol_00002) != blocksCurrentCol_00003_00000)) /\ ((3 != (avatarCurrentRow_00003 + 2*moveRow_00002)) \/ ((avatarCurrentCol_00003 + 2*moveCol_00002) != blocksCurrentCol_00003_00001)))
BOOL aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (((blocksCurrentRow_00009_00001 != (avatarCurrentRow_00009 + 2*moveRow_00008)) \/ ((avatarCurrentCol_00009 + 2*moveCol_00008) != blocksCurrentCol_00009_00001)) /\ ((2 != (avatarCurrentRow_00009 + 2*moveRow_00008)) \/ ((avatarCurrentCol_00009 + 2*moveCol_00008) != blocksCurrentCol_00009_00000)))
BOOL aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (((2 != (avatarCurrentRow_00007 + 2*moveRow_00006)) \/ ((avatarCurrentCol_00007 + 2*moveCol_00006) != blocksCurrentCol_00007_00000)) /\ ((blocksCurrentRow_00007_00001 != (avatarCurrentRow_00007 + 2*moveRow_00006)) \/ ((avatarCurrentCol_00007 + 2*moveCol_00006) != blocksCurrentCol_00007_00001)))
DISCRETE aux94 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, gridCurrent_00007_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00007_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2;int(1..19)], (7*avatarCurrentRow_00007 + avatarCurrentCol_00007-16))
{0..2}
DISCRETE aux95 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, gridCurrent_00010_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00010_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2;int(1..19)], (7*avatarCurrentRow_00010 + avatarCurrentCol_00010-16))
{0..2}
DISCRETE aux96 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, gridCurrent_00004_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00004_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2;int(1..19)], (7*avatarCurrentRow_00004 + avatarCurrentCol_00004-16))
{0..2}
DISCRETE aux97 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, gridCurrent_00006_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00006_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2;int(1..19)], (7*avatarCurrentRow_00006 + avatarCurrentCol_00006-16))
{0..2}
DISCRETE aux98 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, gridCurrent_00008_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00008_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2;int(1..19)], (7*avatarCurrentRow_00008 + avatarCurrentCol_00008-16))
{0..2}
DISCRETE aux99 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, gridCurrent_00011_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00011_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2;int(1..19)], (7*avatarCurrentRow_00011 + avatarCurrentCol_00011-16))
{0..2}
DISCRETE aux100 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, gridCurrent_00009_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00009_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2;int(1..19)], (7*avatarCurrentRow_00009 + avatarCurrentCol_00009-16))
{0..2}
DISCRETE aux101 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, gridCurrent_00005_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00005_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2;int(1..19)], (7*avatarCurrentRow_00005 + avatarCurrentCol_00005-16))
{0..2}
DISCRETE aux102 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, gridCurrent_00003_00001_00003, 2, 2, 0, 0, 0, 2, 2, 1, 2, 0, 0, 0, 0, 2, 2;int(1..18)], (7*avatarCurrentRow_00003 + avatarCurrentCol_00003-16))
{0..2}
DISCRETE aux103 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, 2, 1, 2, 2, 0, 0, 0, 2, 2;int(1..10)], (7*avatarCurrentRow_00001 + avatarCurrentCol_00001-16))
{0..2}
DISCRETE aux104 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([2, gridCurrent_00002_00001_00003, 2, 2, 0, 0, 0, 2, 2, 1;int(1..10)], (7*avatarCurrentRow_00002 + avatarCurrentCol_00002-17))
{0..2}
BOOL aux105 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00007 + moveCol_00007) != blocksCurrentCol_00007_00001)
BOOL aux106 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00008 + moveCol_00008) != blocksCurrentCol_00008_00000)
BOOL aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (blocksCurrentRow_00011_00001 != (avatarCurrentRow_00011 + moveRow_00011))
BOOL aux108 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00010 + moveCol_00010) != blocksCurrentCol_00010_00000)
BOOL aux109 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00006 + moveCol_00006) != blocksCurrentCol_00006_00001)
BOOL aux110 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00009 + moveCol_00009) != blocksCurrentCol_00009_00000)
BOOL aux111 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00004 + moveCol_00004) != blocksCurrentCol_00004_00001)
BOOL aux112 #Active-CSE: 2 occurrences of this expression or equivalent: (blocksCurrentCol_00005_00001 != (avatarCurrentCol_00005 + moveCol_00005))
BOOL aux113 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00006 + moveCol_00006) != blocksCurrentCol_00006_00000)
BOOL aux114 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00009 + moveCol_00009) != blocksCurrentCol_00009_00001)
BOOL aux115 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00002 + moveCol_00002) != blocksCurrentCol_00002_00000)
BOOL aux116 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00004 + moveCol_00004) != blocksCurrentCol_00004_00000)
BOOL aux117 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00010 + moveCol_00010) != blocksCurrentCol_00010_00001)
BOOL aux118 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00011 + moveCol_00011) != blocksCurrentCol_00011_00001)
BOOL aux119 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00008 + moveCol_00008) != blocksCurrentCol_00008_00001)
BOOL aux120 #Active-CSE: 2 occurrences of this expression or equivalent: (blocksCurrentCol_00005_00000 != (avatarCurrentCol_00005 + moveCol_00005))
BOOL aux121 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00001 + moveCol_00001) != blocksCurrentCol_00001_00000)
BOOL aux122 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentRow_00010 + moveRow_00010) != blocksCurrentRow_00010_00001)
BOOL aux123 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00011 + moveCol_00011) != blocksCurrentCol_00011_00000)
BOOL aux124 #Active-CSE: 2 occurrences of this expression or equivalent: (blocksCurrentRow_00008_00001 != (avatarCurrentRow_00008 + moveRow_00008))
BOOL aux125 #Active-CSE: 2 occurrences of this expression or equivalent: (blocksCurrentRow_00006_00001 != (avatarCurrentRow_00006 + moveRow_00006))
BOOL aux126 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00003 + moveCol_00003) != blocksCurrentCol_00003_00000)
BOOL aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (blocksCurrentRow_00007_00001 != (avatarCurrentRow_00007 + moveRow_00007))
BOOL aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (blocksCurrentRow_00005_00001 != (avatarCurrentRow_00005 + moveRow_00005))
BOOL aux129 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00003 + moveCol_00003) != blocksCurrentCol_00003_00001)
BOOL aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (blocksCurrentRow_00009_00001 != (avatarCurrentRow_00009 + moveRow_00009))
BOOL aux131 #Active-CSE: 2 occurrences of this expression or equivalent: ((avatarCurrentCol_00007 + moveCol_00007) != blocksCurrentCol_00007_00000)
DISCRETE aux132 #Active-CSE: 2 occurrences of this expression or equivalent: (7*avatarCurrentRow_00010 + avatarCurrentCol_00010-16)
{0..18}
DISCRETE aux133 #Active-CSE: 2 occurrences of this expression or equivalent: (7*avatarCurrentRow_00011 + avatarCurrentCol_00011-16)
{0..18}
DISCRETE aux134 #Active-CSE: 2 occurrences of this expression or equivalent: (7*avatarCurrentRow_00001 + avatarCurrentCol_00001-16)
{0..9}
DISCRETE aux135 #Active-CSE: 2 occurrences of this expression or equivalent: (7*avatarCurrentRow_00002 + avatarCurrentCol_00002-17)
{0..9}
DISCRETE aux136 #Active-CSE: 2 occurrences of this expression or equivalent: (7*avatarCurrentRow_00006 + avatarCurrentCol_00006-16)
{0..18}
DISCRETE aux137 #Active-CSE: 2 occurrences of this expression or equivalent: (7*avatarCurrentRow_00007 + avatarCurrentCol_00007-16)
{0..18}
DISCRETE aux138 #Active-CSE: 2 occurrences of this expression or equivalent: (7*avatarCurrentRow_00003 + avatarCurrentCol_00003-16)
{0..17}
DISCRETE aux139 #Active-CSE: 2 occurrences of this expression or equivalent: (7*avatarCurrentRow_00005 + avatarCurrentCol_00005-16)
{0..18}
DISCRETE aux140 #Active-CSE: 2 occurrences of this expression or equivalent: (7*avatarCurrentRow_00004 + avatarCurrentCol_00004-16)
{0..18}
DISCRETE aux141 #Active-CSE: 2 occurrences of this expression or equivalent: (7*avatarCurrentRow_00008 + avatarCurrentCol_00008-16)
{0..18}
DISCRETE aux142 #Active-CSE: 2 occurrences of this expression or equivalent: (7*avatarCurrentRow_00009 + avatarCurrentCol_00009-16)
{0..18}
DISCRETE aux151 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00002 + 2*moveRow_00001)
{0..5}
DISCRETE aux152 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00003 + 2*moveRow_00002)
{0..6}
DISCRETE aux153 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00001 + 2*moveRow_00000)
{2..5}
DISCRETE aux154 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00005 + 2*moveRow_00004)
{0..6}
DISCRETE aux155 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00004 + 2*moveRow_00003)
{0..6}
DISCRETE aux156 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00007 + 2*moveRow_00006)
{0..6}
DISCRETE aux157 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00006 + 2*moveRow_00005)
{0..6}
DISCRETE aux158 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00009 + 2*moveRow_00008)
{0..6}
DISCRETE aux159 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00008 + 2*moveRow_00007)
{0..6}
DISCRETE aux160 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00010 + 2*moveRow_00009)
{0..6}
DISCRETE aux161 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00011 + 2*moveRow_00010)
{0..6}
DISCRETE aux162 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00012 + 2*moveRow_00011)
{0..6}
DISCRETE aux163 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00010 + moveCol_00009)
{1..7}
DISCRETE aux164 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00011 + moveCol_00010)
{1..7}
DISCRETE aux165 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00012 + moveCol_00011)
{2..7}
DISCRETE aux166 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00009 + moveCol_00008)
{1..7}
DISCRETE aux167 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00008 + moveCol_00007)
{1..7}
DISCRETE aux168 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00007 + moveCol_00006)
{1..7}
DISCRETE aux169 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00006 + moveCol_00005)
{1..7}
DISCRETE aux170 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00005 + moveCol_00004)
{1..7}
DISCRETE aux171 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00004 + moveCol_00003)
{1..7}
DISCRETE aux172 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00003 + moveCol_00002)
{1..6}
DISCRETE aux173 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00002 + moveCol_00001)
{2..6}
DISCRETE aux174 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00001 + moveCol_00000)
{1..5}
DISCRETE aux190 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00009 + 2*moveCol_00008)
{0..8}
DISCRETE aux191 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00007 + 2*moveCol_00006)
{0..8}
DISCRETE aux192 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00008 + 2*moveCol_00007)
{0..8}
DISCRETE aux194 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00001 + 2*moveCol_00000)
{0..6}
DISCRETE aux195 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00004 + 2*moveCol_00003)
{0..8}
DISCRETE aux196 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00006 + 2*moveCol_00005)
{0..8}
DISCRETE aux197 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00005 + 2*moveCol_00004)
{0..8}
DISCRETE aux198 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00002 + 2*moveCol_00001)
{1..7}
DISCRETE aux199 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00003 + 2*moveCol_00002)
{0..7}
DISCRETE aux200 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00010 + 2*moveCol_00009)
{0..8}
DISCRETE aux201 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00011 + 2*moveCol_00010)
{0..8}
DISCRETE aux202 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentCol_00012 + 2*moveCol_00011)
{1..8}
DISCRETE aux203 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00012 + moveRow_00011)
{1..5}
DISCRETE aux204 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00011 + moveRow_00010)
{1..5}
DISCRETE aux205 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00010 + moveRow_00009)
{1..5}
DISCRETE aux206 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00001 + moveRow_00000)
{2..4}
DISCRETE aux207 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00008 + moveRow_00007)
{1..5}
DISCRETE aux208 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00009 + moveRow_00008)
{1..5}
DISCRETE aux209 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00006 + moveRow_00005)
{1..5}
DISCRETE aux210 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00007 + moveRow_00006)
{1..5}
DISCRETE aux211 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00004 + moveRow_00003)
{1..5}
DISCRETE aux212 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00005 + moveRow_00004)
{1..5}
DISCRETE aux213 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00002 + moveRow_00001)
{1..4}
DISCRETE aux214 #Active-CSE: 2 occurrences of this expression or equivalent: (avatarCurrentRow_00003 + moveRow_00002)
{1..5}
DISCRETE aux215 #(moveRow_00010 + blocksCurrentRow_00010_00001)
{1..4}
DISCRETE aux216 #(moveCol_00010 + blocksCurrentCol_00010_00001)
{1..7}
DISCRETE aux217 #SafeElement([2, gridCurrent_00003_00001_00003, 2, 2, 0, 0, 0, 2, 2, 1;int(1..10)], aux135)
{0..2}
DISCRETE aux218 #(-2 + blocksCurrentCol_00007_00000)
{0..4}
DISCRETE aux219 #SafeElement([2, 2, gridCurrent_00007_00001_00003, 2, 2;int(1..5)], aux218)
{0..2}
DISCRETE aux220 #(blocksCurrentCol_00006_00000-2)
{0..4}
DISCRETE aux221 #SafeElement([2, 2, gridCurrent_00006_00001_00003, 2, 2;int(1..5)], aux220)
{0..2}
DISCRETE aux222 #(-2 + blocksCurrentCol_00009_00000)
{0..4}
DISCRETE aux223 #SafeElement([2, 2, gridCurrent_00009_00001_00003, 2, 2;int(1..5)], aux222)
{0..2}
DISCRETE aux224 #(moveCol_00008 + blocksCurrentCol_00008_00000)
{1..7}
DISCRETE aux225 #(blocksCurrentRow_00007_00001 + moveRow_00007)
{1..4}
DISCRETE aux226 #(moveCol_00007 + blocksCurrentCol_00007_00001)
{2..7}
DISCRETE aux227 #(7*avatarCurrentRow_00012 + avatarCurrentCol_00012-17)
{0..17}
DISCRETE aux228 #SafeElement([2, gridCurrent_00012_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00012_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2;int(1..18)], aux227)
{0..2}
DISCRETE aux229 #SafeElement([2, 2, gridCurrent_00002_00001_00003, 2, 2, 0, 0, 0, 2, 2;int(1..10)], aux134)
{0..2}
DISCRETE aux230 #SafeElement([2, 2, gridCurrent_00010_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00010_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2;int(1..19)], aux142)
{0..2}
BOOL aux231 #|moveRow_00001|
BOOL aux232 #|moveCol_00001|
DISCRETE aux234 #(moveCol_00000 + 4)
{3..5}
BOOL aux235 #|moveRow_00011|
BOOL aux236 #|moveCol_00011|
BOOL aux238 #|moveRow_00003|
BOOL aux239 #|moveCol_00003|
BOOL aux241 #(-5 + blocksCurrentCol_00003_00001)
DISCRETE aux242 #SafeElement([1, 2;int(1..2)], aux241)
{0..2}
DISCRETE aux243 #SafeElement([2, 2, gridCurrent_00009_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00009_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2;int(1..19)], aux141)
{0..2}
BOOL aux244 #|moveRow_00005|
BOOL aux245 #|moveCol_00005|
BOOL aux247 #|moveCol_00000|
DISCRETE aux249 #(-4 + blocksCurrentCol_00003_00000)
{0..2}
DISCRETE aux250 #SafeElement([gridCurrent_00003_00001_00003, 2, 2;int(1..3)], aux249)
{0..2}
BOOL aux251 #|moveRow_00007|
BOOL aux252 #|moveCol_00007|
DISCRETE aux254 #(blocksCurrentCol_00010_00001-16 + 7*blocksCurrentRow_00010_00001)
{0..11}
DISCRETE aux255 #SafeElement([2, 2, gridCurrent_00010_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00010_00002_00004, 2;int(1..12)], aux254)
{0..2}
BOOL aux256 #|moveRow_00009|
BOOL aux257 #|moveCol_00009|
DISCRETE aux259 #(blocksCurrentCol_00005_00001-19 + 7*blocksCurrentRow_00005_00001)
{0..8}
DISCRETE aux260 #SafeElement([2, 2, 0, 0, 0, 2, 2, gridCurrent_00005_00002_00004, 2;int(1..9)], aux259)
{0..2}
DISCRETE aux261 #(blocksCurrentCol_00010_00000-2)
{0..4}
DISCRETE aux262 #SafeElement([2, 2, gridCurrent_00010_00001_00003, 2, 2;int(1..5)], aux261)
{0..2}
DISCRETE aux263 #(moveCol_00001 + blocksCurrentCol_00001_00000)
{3..6}
DISCRETE aux264 #(moveCol_00002 + 5)
{4..6}
DISCRETE aux265 #(-2 + blocksCurrentCol_00012_00001)
{0..4}
DISCRETE aux266 #SafeElement([2, 2, gridCurrent_00012_00001_00003, 2, 2;int(1..5)], aux265)
{0..2}
DISCRETE aux267 #(moveCol_00002 + blocksCurrentCol_00002_00000)
{3..7}
DISCRETE aux268 #SafeElement([2, 2, gridCurrent_00004_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00004_00002_00004, 2, 0, 0, 0, 0, 2, 2;int(1..18)], aux138)
{0..2}
DISCRETE aux269 #(-3 + blocksCurrentCol_00004_00000)
{0..3}
DISCRETE aux270 #SafeElement([2, gridCurrent_00004_00001_00003, 2, 2;int(1..4)], aux269)
{0..2}
DISCRETE aux271 #(moveRow_00004 + 3)
{2..4}
DISCRETE aux272 #(moveCol_00004 + blocksCurrentCol_00004_00001)
{4..7}
DISCRETE aux273 #(moveCol_00003 + blocksCurrentCol_00003_00001)
{4..7}
DISCRETE aux274 #(7*blocksCurrentRow_00011_00001-16 + blocksCurrentCol_00011_00001)
{0..11}
DISCRETE aux275 #SafeElement([2, 2, gridCurrent_00011_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00011_00002_00004, 2;int(1..12)], aux274)
{0..2}
DISCRETE aux276 #(moveCol_00004 + blocksCurrentCol_00004_00000)
{2..7}
DISCRETE aux277 #(moveCol_00007 + blocksCurrentCol_00007_00000)
{1..7}
DISCRETE aux278 #(7*blocksCurrentRow_00009_00001-16 + blocksCurrentCol_00009_00001)
{0..11}
DISCRETE aux279 #SafeElement([2, 2, gridCurrent_00009_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00009_00002_00004, 2;int(1..12)], aux278)
{0..2}
DISCRETE aux280 #(blocksCurrentCol_00005_00000-2)
{0..4}
DISCRETE aux281 #SafeElement([2, 2, gridCurrent_00005_00001_00003, 2, 2;int(1..5)], aux280)
{0..2}
DISCRETE aux282 #(blocksCurrentCol_00005_00000 + moveCol_00005)
{1..7}
DISCRETE aux283 #(moveCol_00010 + blocksCurrentCol_00010_00000)
{1..7}
DISCRETE aux284 #SafeElement([2, 2, gridCurrent_00006_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00006_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2;int(1..19)], aux139)
{0..2}
BOOL aux285 #(-5 + blocksCurrentCol_00004_00001)
DISCRETE aux286 #SafeElement([gridCurrent_00004_00002_00004, 2;int(1..2)], aux285)
{0..2}
DISCRETE aux287 #SafeElement([2, 2, gridCurrent_00005_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00005_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2;int(1..19)], aux140)
{0..2}
DISCRETE aux288 #(moveRow_00008 + blocksCurrentRow_00008_00001)
{1..4}
DISCRETE aux289 #(moveCol_00008 + blocksCurrentCol_00008_00001)
{2..7}
DISCRETE aux290 #(moveRow_00006 + blocksCurrentRow_00006_00001)
{1..4}
DISCRETE aux291 #(moveCol_00006 + blocksCurrentCol_00006_00001)
{3..7}
DISCRETE aux292 #(moveCol_00006 + blocksCurrentCol_00006_00000)
{1..7}
DISCRETE aux293 #(moveCol_00003 + blocksCurrentCol_00003_00000)
{3..7}
BOOL aux294 #|moveRow_00010|
BOOL aux295 #|moveCol_00010|
BOOL aux297 #|moveRow_00002|
BOOL aux298 #|moveCol_00002|
DISCRETE aux300 #(blocksCurrentCol_00006_00001-18 + 7*blocksCurrentRow_00006_00001)
{0..9}
DISCRETE aux301 #SafeElement([gridCurrent_00006_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00006_00002_00004, 2;int(1..10)], aux300)
{0..2}
BOOL aux302 #|moveRow_00004|
BOOL aux303 #|moveCol_00004|
DISCRETE aux305 #(moveRow_00009 + blocksCurrentRow_00009_00001)
{1..4}
DISCRETE aux306 #(moveCol_00009 + blocksCurrentCol_00009_00001)
{1..7}
BOOL aux307 #|moveRow_00006|
BOOL aux308 #|moveCol_00006|
DISCRETE aux310 #SafeElement([2, 2, gridCurrent_00011_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00011_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2;int(1..19)], aux132)
{0..2}
DISCRETE aux311 #(moveCol_00009 + blocksCurrentCol_00009_00000)
{1..7}
DISCRETE aux312 #(moveCol_00011 + blocksCurrentCol_00011_00000)
{1..7}
BOOL aux313 #(blocksCurrentCol_00001_00000-4)
DISCRETE aux314 #SafeElement([1, 2;int(1..2)], aux313)
{0..2}
BOOL aux315 #|moveRow_00008|
BOOL aux316 #|moveCol_00008|
DISCRETE aux318 #(blocksCurrentCol_00002_00000-4)
{0..2}
DISCRETE aux319 #SafeElement([gridCurrent_00002_00001_00003, 2, 2;int(1..3)], aux318)
{0..2}
DISCRETE aux320 #(-2 + blocksCurrentCol_00011_00000)
{0..4}
DISCRETE aux321 #SafeElement([2, 2, gridCurrent_00011_00001_00003, 2, 2;int(1..5)], aux320)
{0..2}
DISCRETE aux322 #(7*blocksCurrentRow_00007_00001-17 + blocksCurrentCol_00007_00001)
{0..10}
DISCRETE aux323 #SafeElement([2, gridCurrent_00007_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00007_00002_00004, 2;int(1..11)], aux322)
{0..2}
DISCRETE aux324 #(7*blocksCurrentRow_00008_00001-17 + blocksCurrentCol_00008_00001)
{0..10}
DISCRETE aux325 #SafeElement([2, gridCurrent_00008_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00008_00002_00004, 2;int(1..11)], aux324)
{0..2}
DISCRETE aux326 #SafeElement([2, 2, gridCurrent_00008_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00008_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2;int(1..19)], aux137)
{0..2}
DISCRETE aux327 #(moveCol_00011 + blocksCurrentCol_00011_00001)
{1..7}
DISCRETE aux328 #(moveRow_00011 + blocksCurrentRow_00011_00001)
{1..4}
DISCRETE aux329 #(-2 + blocksCurrentCol_00008_00000)
{0..4}
DISCRETE aux330 #SafeElement([2, 2, gridCurrent_00008_00001_00003, 2, 2;int(1..5)], aux329)
{0..2}
DISCRETE aux331 #(-2 + blocksCurrentCol_00012_00000)
{0..4}
DISCRETE aux332 #SafeElement([2, 2, gridCurrent_00012_00001_00003, 2, 2;int(1..5)], aux331)
{0..2}
DISCRETE aux333 #(blocksCurrentCol_00005_00001 + moveCol_00005)
{4..7}
DISCRETE aux334 #(moveRow_00005 + blocksCurrentRow_00005_00001)
{1..4}
DISCRETE aux335 #SafeElement([2, 2, gridCurrent_00007_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00007_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2;int(1..19)], aux136)
{0..2}
DISCRETE aux336 #SafeElement([2, 2, gridCurrent_00012_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00012_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2;int(1..19)], aux133)
{0..2}
**TUPLELIST**
gridInit 5 7
0 0 0 0 0 0 0 
0 2 2 1 2 2 0 
0 0 2 2 1 2 0 
0 0 0 2 2 2 0 
0 0 0 0 0 0 0 
**VARIABLES**
ALIAS gridInit[5,7]=[[0, 0, 0, 0, 0, 0, 0], [0, 2, 2, 1, 2, 2, 0], [0, 0, 2, 2, 1, 2, 0], [0, 0, 0, 2, 2, 2, 0], [0, 0, 0, 0, 0, 0, 0]]
ALIAS blocksInitRow[2]=[2, 3]
ALIAS blocksInitCol[2]=[4, 5]
ALIAS blocksGoalRow[2]=[2, 2]
ALIAS blocksGoalCol[2]=[2, 6]
**SEARCH**
PRINT[[moveRow_00000],[moveRow_00001],[moveRow_00002],[moveRow_00003],[moveRow_00004],[moveRow_00005],[moveRow_00006],[moveRow_00007],[moveRow_00008],[moveRow_00009],[moveRow_00010],[moveRow_00011],[moveCol_00000],[moveCol_00001],[moveCol_00002],[moveCol_00003],[moveCol_00004],[moveCol_00005],[moveCol_00006],[moveCol_00007],[moveCol_00008],[moveCol_00009],[moveCol_00010],[moveCol_00011],[avatarCurrentRow_00001],[avatarCurrentRow_00002],[avatarCurrentRow_00003],[avatarCurrentRow_00004],[avatarCurrentRow_00005],[avatarCurrentRow_00006],[avatarCurrentRow_00007],[avatarCurrentRow_00008],[avatarCurrentRow_00009],[avatarCurrentRow_00010],[avatarCurrentRow_00011],[avatarCurrentRow_00012],[avatarCurrentCol_00001],[avatarCurrentCol_00002],[avatarCurrentCol_00003],[avatarCurrentCol_00004],[avatarCurrentCol_00005],[avatarCurrentCol_00006],[avatarCurrentCol_00007],[avatarCurrentCol_00008],[avatarCurrentCol_00009],[avatarCurrentCol_00010],[avatarCurrentCol_00011],[avatarCurrentCol_00012],[blocksCurrentRow_00005_00001],[blocksCurrentRow_00006_00001],[blocksCurrentRow_00007_00001],[blocksCurrentRow_00008_00001],[blocksCurrentRow_00009_00001],[blocksCurrentRow_00010_00001],[blocksCurrentRow_00011_00001],[blocksCurrentCol_00001_00000],[blocksCurrentCol_00002_00000],[blocksCurrentCol_00003_00000],[blocksCurrentCol_00003_00001],[blocksCurrentCol_00004_00000],[blocksCurrentCol_00004_00001],[blocksCurrentCol_00005_00000],[blocksCurrentCol_00005_00001],[blocksCurrentCol_00006_00000],[blocksCurrentCol_00006_00001],[blocksCurrentCol_00007_00000],[blocksCurrentCol_00007_00001],[blocksCurrentCol_00008_00000],[blocksCurrentCol_00008_00001],[blocksCurrentCol_00009_00000],[blocksCurrentCol_00009_00001],[blocksCurrentCol_00010_00000],[blocksCurrentCol_00010_00001],[blocksCurrentCol_00011_00000],[blocksCurrentCol_00011_00001],[blocksCurrentCol_00012_00000],[blocksCurrentCol_00012_00001],[gridCurrent_00002_00001_00003],[gridCurrent_00003_00001_00003],[gridCurrent_00004_00001_00003],[gridCurrent_00004_00002_00004],[gridCurrent_00005_00001_00003],[gridCurrent_00005_00002_00004],[gridCurrent_00006_00001_00003],[gridCurrent_00006_00002_00004],[gridCurrent_00007_00001_00003],[gridCurrent_00007_00002_00004],[gridCurrent_00008_00001_00003],[gridCurrent_00008_00002_00004],[gridCurrent_00009_00001_00003],[gridCurrent_00009_00002_00004],[gridCurrent_00010_00001_00003],[gridCurrent_00010_00002_00004],[gridCurrent_00011_00001_00003],[gridCurrent_00011_00002_00004],[gridCurrent_00012_00001_00003],[gridCurrent_00012_00002_00004]]
VARORDER STATIC [moveRow_00000, moveRow_00001, moveRow_00002, moveRow_00003, moveRow_00004, moveRow_00005, moveRow_00006, moveRow_00007, moveRow_00008, moveRow_00009, moveRow_00010, moveRow_00011, moveCol_00000, moveCol_00001, moveCol_00002, moveCol_00003, moveCol_00004, moveCol_00005, moveCol_00006, moveCol_00007, moveCol_00008, moveCol_00009, moveCol_00010, moveCol_00011, 2, avatarCurrentRow_00001, avatarCurrentRow_00002, avatarCurrentRow_00003, avatarCurrentRow_00004, avatarCurrentRow_00005, avatarCurrentRow_00006, avatarCurrentRow_00007, avatarCurrentRow_00008, avatarCurrentRow_00009, avatarCurrentRow_00010, avatarCurrentRow_00011, avatarCurrentRow_00012, 3, avatarCurrentCol_00001, avatarCurrentCol_00002, avatarCurrentCol_00003, avatarCurrentCol_00004, avatarCurrentCol_00005, avatarCurrentCol_00006, avatarCurrentCol_00007, avatarCurrentCol_00008, avatarCurrentCol_00009, avatarCurrentCol_00010, avatarCurrentCol_00011, avatarCurrentCol_00012, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, blocksCurrentRow_00005_00001, 2, blocksCurrentRow_00006_00001, 2, blocksCurrentRow_00007_00001, 2, blocksCurrentRow_00008_00001, 2, blocksCurrentRow_00009_00001, 2, blocksCurrentRow_00010_00001, 2, blocksCurrentRow_00011_00001, 2, 2, 4, 5, blocksCurrentCol_00001_00000, 5, blocksCurrentCol_00002_00000, 5, blocksCurrentCol_00003_00000, blocksCurrentCol_00003_00001, blocksCurrentCol_00004_00000, blocksCurrentCol_00004_00001, blocksCurrentCol_00005_00000, blocksCurrentCol_00005_00001, blocksCurrentCol_00006_00000, blocksCurrentCol_00006_00001, blocksCurrentCol_00007_00000, blocksCurrentCol_00007_00001, blocksCurrentCol_00008_00000, blocksCurrentCol_00008_00001, blocksCurrentCol_00009_00000, blocksCurrentCol_00009_00001, blocksCurrentCol_00010_00000, blocksCurrentCol_00010_00001, blocksCurrentCol_00011_00000, blocksCurrentCol_00011_00001, blocksCurrentCol_00012_00000, blocksCurrentCol_00012_00001, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 2, 2, 0, 0, 0, 2, 2, 1, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 2, 2, 0, 0, 0, 2, 2, 1, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, gridCurrent_00002_00001_00003, 2, 2, 0, 0, 0, 2, 2, 1, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, gridCurrent_00003_00001_00003, 2, 2, 0, 0, 0, 2, 2, 1, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, gridCurrent_00004_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00004_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, gridCurrent_00005_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00005_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, gridCurrent_00006_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00006_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, gridCurrent_00007_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00007_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, gridCurrent_00008_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00008_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, gridCurrent_00009_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00009_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, gridCurrent_00010_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00010_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, gridCurrent_00011_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00011_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, gridCurrent_00012_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00012_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0]
VARORDER AUX [moveRow_00000,moveRow_00001,moveRow_00002,moveRow_00003,moveRow_00004,moveRow_00005,moveRow_00006,moveRow_00007,moveRow_00008,moveRow_00009,moveRow_00010,moveRow_00011,moveCol_00000,moveCol_00001,moveCol_00002,moveCol_00003,moveCol_00004,moveCol_00005,moveCol_00006,moveCol_00007,moveCol_00008,moveCol_00009,moveCol_00010,moveCol_00011,avatarCurrentRow_00001,avatarCurrentRow_00002,avatarCurrentRow_00003,avatarCurrentRow_00004,avatarCurrentRow_00005,avatarCurrentRow_00006,avatarCurrentRow_00007,avatarCurrentRow_00008,avatarCurrentRow_00009,avatarCurrentRow_00010,avatarCurrentRow_00011,avatarCurrentRow_00012,avatarCurrentCol_00001,avatarCurrentCol_00002,avatarCurrentCol_00003,avatarCurrentCol_00004,avatarCurrentCol_00005,avatarCurrentCol_00006,avatarCurrentCol_00007,avatarCurrentCol_00008,avatarCurrentCol_00009,avatarCurrentCol_00010,avatarCurrentCol_00011,avatarCurrentCol_00012,blocksCurrentRow_00005_00001,blocksCurrentRow_00006_00001,blocksCurrentRow_00007_00001,blocksCurrentRow_00008_00001,blocksCurrentRow_00009_00001,blocksCurrentRow_00010_00001,blocksCurrentRow_00011_00001,blocksCurrentCol_00001_00000,blocksCurrentCol_00002_00000,blocksCurrentCol_00003_00000,blocksCurrentCol_00003_00001,blocksCurrentCol_00004_00000,blocksCurrentCol_00004_00001,blocksCurrentCol_00005_00000,blocksCurrentCol_00005_00001,blocksCurrentCol_00006_00000,blocksCurrentCol_00006_00001,blocksCurrentCol_00007_00000,blocksCurrentCol_00007_00001,blocksCurrentCol_00008_00000,blocksCurrentCol_00008_00001,blocksCurrentCol_00009_00000,blocksCurrentCol_00009_00001,blocksCurrentCol_00010_00000,blocksCurrentCol_00010_00001,blocksCurrentCol_00011_00000,blocksCurrentCol_00011_00001,blocksCurrentCol_00012_00000,blocksCurrentCol_00012_00001,gridCurrent_00002_00001_00003,gridCurrent_00003_00001_00003,gridCurrent_00004_00001_00003,gridCurrent_00004_00002_00004,gridCurrent_00005_00001_00003,gridCurrent_00005_00002_00004,gridCurrent_00006_00001_00003,gridCurrent_00006_00002_00004,gridCurrent_00007_00001_00003,gridCurrent_00007_00002_00004,gridCurrent_00008_00001_00003,gridCurrent_00008_00002_00004,gridCurrent_00009_00001_00003,gridCurrent_00009_00002_00004,gridCurrent_00010_00001_00003,gridCurrent_00010_00002_00004,gridCurrent_00011_00001_00003,gridCurrent_00011_00002_00004,gridCurrent_00012_00001_00003,gridCurrent_00012_00002_00004,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,aux104,aux105,aux106,aux107,aux108,aux109,aux110,aux111,aux112,aux113,aux114,aux115,aux116,aux117,aux118,aux119,aux120,aux121,aux122,aux123,aux124,aux125,aux126,aux127,aux128,aux129,aux130,aux131,aux132,aux133,aux134,aux135,aux136,aux137,aux138,aux139,aux140,aux141,aux142,aux151,aux152,aux153,aux154,aux155,aux156,aux157,aux158,aux159,aux160,aux161,aux162,aux163,aux164,aux165,aux166,aux167,aux168,aux169,aux170,aux171,aux172,aux173,aux174,aux190,aux191,aux192,aux194,aux195,aux196,aux197,aux198,aux199,aux200,aux201,aux202,aux203,aux204,aux205,aux206,aux207,aux208,aux209,aux210,aux211,aux212,aux213,aux214,aux215,aux216,aux217,aux218,aux219,aux220,aux221,aux222,aux223,aux224,aux225,aux226,aux227,aux228,aux229,aux230,aux231,aux232,aux234,aux235,aux236,aux238,aux239,aux241,aux242,aux243,aux244,aux245,aux247,aux249,aux250,aux251,aux252,aux254,aux255,aux256,aux257,aux259,aux260,aux261,aux262,aux263,aux264,aux265,aux266,aux267,aux268,aux269,aux270,aux271,aux272,aux273,aux274,aux275,aux276,aux277,aux278,aux279,aux280,aux281,aux282,aux283,aux284,aux285,aux286,aux287,aux288,aux289,aux290,aux291,aux292,aux293,aux294,aux295,aux297,aux298,aux300,aux301,aux302,aux303,aux305,aux306,aux307,aux308,aux310,aux311,aux312,aux313,aux314,aux315,aux316,aux318,aux319,aux320,aux321,aux322,aux323,aux324,aux325,aux326,aux327,aux328,aux329,aux330,aux331,aux332,aux333,aux334,aux335,aux336]
**CONSTRAINTS**
watchelement_undefzero([2, gridCurrent_00003_00001_00003, 2, 2, 0, 0, 0, 2, 2, 1], aux135, aux217)
watchelement_undefzero([2, 2, gridCurrent_00007_00001_00003, 2, 2], aux218, aux219)
watchelement_undefzero([2, 2, gridCurrent_00006_00001_00003, 2, 2], aux220, aux221)
watchelement_undefzero([2, 2, gridCurrent_00009_00001_00003, 2, 2], aux222, aux223)
watchelement_undefzero([2, gridCurrent_00012_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00012_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2], aux227, aux228)
watchelement_undefzero([2, 2, gridCurrent_00002_00001_00003, 2, 2, 0, 0, 0, 2, 2], aux134, aux229)
watchelement_undefzero([2, 2, gridCurrent_00010_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00010_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2], aux142, aux230)
abs(aux231, moveRow_00001)
abs(aux232, moveCol_00001)
abs(aux235, moveRow_00011)
abs(aux236, moveCol_00011)
abs(aux238, moveRow_00003)
abs(aux239, moveCol_00003)
watchelement_undefzero([1, 2], aux241, aux242)
watchelement_undefzero([2, 2, gridCurrent_00009_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00009_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2], aux141, aux243)
abs(aux244, moveRow_00005)
abs(aux245, moveCol_00005)
abs(aux247, moveCol_00000)
watchelement_undefzero([gridCurrent_00003_00001_00003, 2, 2], aux249, aux250)
abs(aux251, moveRow_00007)
abs(aux252, moveCol_00007)
watchelement_undefzero([2, 2, gridCurrent_00010_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00010_00002_00004, 2], aux254, aux255)
abs(aux256, moveRow_00009)
abs(aux257, moveCol_00009)
watchelement_undefzero([2, 2, 0, 0, 0, 2, 2, gridCurrent_00005_00002_00004, 2], aux259, aux260)
watchelement_undefzero([2, 2, gridCurrent_00010_00001_00003, 2, 2], aux261, aux262)
watchelement_undefzero([2, 2, gridCurrent_00012_00001_00003, 2, 2], aux265, aux266)
watchelement_undefzero([2, 2, gridCurrent_00004_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00004_00002_00004, 2, 0, 0, 0, 0, 2, 2], aux138, aux268)
watchelement_undefzero([2, gridCurrent_00004_00001_00003, 2, 2], aux269, aux270)
watchelement_undefzero([2, 2, gridCurrent_00011_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00011_00002_00004, 2], aux274, aux275)
watchelement_undefzero([2, 2, gridCurrent_00009_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00009_00002_00004, 2], aux278, aux279)
watchelement_undefzero([2, 2, gridCurrent_00005_00001_00003, 2, 2], aux280, aux281)
watchelement_undefzero([2, 2, gridCurrent_00006_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00006_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2], aux139, aux284)
watchelement_undefzero([gridCurrent_00004_00002_00004, 2], aux285, aux286)
watchelement_undefzero([2, 2, gridCurrent_00005_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00005_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2], aux140, aux287)
abs(aux294, moveRow_00010)
abs(aux295, moveCol_00010)
abs(aux297, moveRow_00002)
abs(aux298, moveCol_00002)
watchelement_undefzero([gridCurrent_00006_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00006_00002_00004, 2], aux300, aux301)
abs(aux302, moveRow_00004)
abs(aux303, moveCol_00004)
abs(aux307, moveRow_00006)
abs(aux308, moveCol_00006)
watchelement_undefzero([2, 2, gridCurrent_00011_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00011_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2], aux132, aux310)
watchelement_undefzero([1, 2], aux313, aux314)
abs(aux315, moveRow_00008)
abs(aux316, moveCol_00008)
watchelement_undefzero([gridCurrent_00002_00001_00003, 2, 2], aux318, aux319)
watchelement_undefzero([2, 2, gridCurrent_00011_00001_00003, 2, 2], aux320, aux321)
watchelement_undefzero([2, gridCurrent_00007_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00007_00002_00004, 2], aux322, aux323)
watchelement_undefzero([2, gridCurrent_00008_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00008_00002_00004, 2], aux324, aux325)
watchelement_undefzero([2, 2, gridCurrent_00008_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00008_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2], aux137, aux326)
watchelement_undefzero([2, 2, gridCurrent_00008_00001_00003, 2, 2], aux329, aux330)
watchelement_undefzero([2, 2, gridCurrent_00012_00001_00003, 2, 2], aux331, aux332)
watchelement_undefzero([2, 2, gridCurrent_00007_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00007_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2], aux136, aux335)
watchelement_undefzero([2, 2, gridCurrent_00012_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00012_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2], aux133, aux336)
reify(watched-and({watched-or({diseq(2,aux160),diseq(aux200,blocksCurrentCol_00010_00000)}),watched-or({diseq(aux200,blocksCurrentCol_00010_00001),diseq(aux160,blocksCurrentRow_00010_00001)})}), aux82)
reify(watched-and({watched-or({diseq(blocksCurrentRow_00005_00001,aux154),diseq(blocksCurrentCol_00005_00001,aux197)}),watched-or({diseq(2,aux154),diseq(blocksCurrentCol_00005_00000,aux197)})}), aux83)
reify(watched-and({watched-or({diseq(2,aux162),diseq(aux202,blocksCurrentCol_00012_00000)}),watched-or({diseq(2,aux162),diseq(aux202,blocksCurrentCol_00012_00001)})}), aux84)
reify(watched-and({watched-or({diseq(2,aux151),diseq(aux198,blocksCurrentCol_00002_00000)}),watched-or({diseq(3,aux151),diseq(aux198,5)})}), aux85)
reify(watched-and({watched-or({diseq(aux192,blocksCurrentCol_00008_00001),diseq(blocksCurrentRow_00008_00001,aux159)}),watched-or({diseq(2,aux159),diseq(aux192,blocksCurrentCol_00008_00000)})}), aux86)
reify(watched-and({watched-or({diseq(2,aux155),diseq(aux195,blocksCurrentCol_00004_00000)}),watched-or({diseq(3,aux155),diseq(aux195,blocksCurrentCol_00004_00001)})}), aux87)
reify(watched-and({watched-or({diseq(2,aux157),diseq(aux196,blocksCurrentCol_00006_00000)}),watched-or({diseq(aux196,blocksCurrentCol_00006_00001),diseq(blocksCurrentRow_00006_00001,aux157)})}), aux88)
reify(watched-and({watched-or({diseq(blocksCurrentRow_00011_00001,aux161),diseq(aux201,blocksCurrentCol_00011_00001)}),watched-or({diseq(2,aux161),diseq(aux201,blocksCurrentCol_00011_00000)})}), aux89)
reify(watched-and({watched-or({diseq(2,aux153),diseq(aux194,blocksCurrentCol_00001_00000)}),watched-or({diseq(3,aux153),diseq(aux194,5)})}), aux90)
reify(watched-and({watched-or({diseq(2,aux152),diseq(aux199,blocksCurrentCol_00003_00000)}),watched-or({diseq(3,aux152),diseq(aux199,blocksCurrentCol_00003_00001)})}), aux91)
reify(watched-and({watched-or({diseq(blocksCurrentRow_00009_00001,aux158),diseq(aux190,blocksCurrentCol_00009_00001)}),watched-or({diseq(2,aux158),diseq(aux190,blocksCurrentCol_00009_00000)})}), aux92)
reify(watched-and({watched-or({diseq(2,aux156),diseq(aux191,blocksCurrentCol_00007_00000)}),watched-or({diseq(blocksCurrentRow_00007_00001,aux156),diseq(aux191,blocksCurrentCol_00007_00001)})}), aux93)
watchelement_undefzero([2, 2, gridCurrent_00007_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00007_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2], aux137, aux94)
watchelement_undefzero([2, 2, gridCurrent_00010_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00010_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2], aux132, aux95)
watchelement_undefzero([2, 2, gridCurrent_00004_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00004_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2], aux140, aux96)
watchelement_undefzero([2, 2, gridCurrent_00006_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00006_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2], aux136, aux97)
watchelement_undefzero([2, 2, gridCurrent_00008_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00008_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2], aux141, aux98)
watchelement_undefzero([2, 2, gridCurrent_00011_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00011_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2], aux133, aux99)
watchelement_undefzero([2, 2, gridCurrent_00009_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00009_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2], aux142, aux100)
watchelement_undefzero([2, 2, gridCurrent_00005_00001_00003, 2, 2, 0, 0, 0, 2, 2, gridCurrent_00005_00002_00004, 2, 0, 0, 0, 0, 2, 2, 2], aux139, aux101)
watchelement_undefzero([2, 2, gridCurrent_00003_00001_00003, 2, 2, 0, 0, 0, 2, 2, 1, 2, 0, 0, 0, 0, 2, 2], aux138, aux102)
watchelement_undefzero([2, 2, 1, 2, 2, 0, 0, 0, 2, 2], aux134, aux103)
watchelement_undefzero([2, gridCurrent_00002_00001_00003, 2, 2, 0, 0, 0, 2, 2, 1], aux135, aux104)
reify(diseq(avatarCurrentCol_00008,blocksCurrentCol_00007_00001), aux105)
reify(diseq(avatarCurrentCol_00009,blocksCurrentCol_00008_00000), aux106)
reify(diseq(blocksCurrentRow_00011_00001,avatarCurrentRow_00012), aux107)
reify(diseq(avatarCurrentCol_00011,blocksCurrentCol_00010_00000), aux108)
reify(diseq(avatarCurrentCol_00007,blocksCurrentCol_00006_00001), aux109)
reify(diseq(avatarCurrentCol_00010,blocksCurrentCol_00009_00000), aux110)
reify(diseq(avatarCurrentCol_00005,blocksCurrentCol_00004_00001), aux111)
reify(diseq(blocksCurrentCol_00005_00001,avatarCurrentCol_00006), aux112)
reify(diseq(avatarCurrentCol_00007,blocksCurrentCol_00006_00000), aux113)
reify(diseq(avatarCurrentCol_00010,blocksCurrentCol_00009_00001), aux114)
reify(diseq(avatarCurrentCol_00003,blocksCurrentCol_00002_00000), aux115)
reify(diseq(avatarCurrentCol_00005,blocksCurrentCol_00004_00000), aux116)
reify(diseq(avatarCurrentCol_00011,blocksCurrentCol_00010_00001), aux117)
reify(diseq(avatarCurrentCol_00012,blocksCurrentCol_00011_00001), aux118)
reify(diseq(avatarCurrentCol_00009,blocksCurrentCol_00008_00001), aux119)
reify(diseq(blocksCurrentCol_00005_00000,avatarCurrentCol_00006), aux120)
reify(diseq(avatarCurrentCol_00002,blocksCurrentCol_00001_00000), aux121)
reify(diseq(avatarCurrentRow_00011,blocksCurrentRow_00010_00001), aux122)
reify(diseq(avatarCurrentCol_00012,blocksCurrentCol_00011_00000), aux123)
reify(diseq(blocksCurrentRow_00008_00001,avatarCurrentRow_00009), aux124)
reify(diseq(blocksCurrentRow_00006_00001,avatarCurrentRow_00007), aux125)
reify(diseq(avatarCurrentCol_00004,blocksCurrentCol_00003_00000), aux126)
reify(diseq(blocksCurrentRow_00007_00001,avatarCurrentRow_00008), aux127)
reify(diseq(blocksCurrentRow_00005_00001,avatarCurrentRow_00006), aux128)
reify(diseq(avatarCurrentCol_00004,blocksCurrentCol_00003_00001), aux129)
reify(diseq(blocksCurrentRow_00009_00001,avatarCurrentRow_00010), aux130)
reify(diseq(avatarCurrentCol_00008,blocksCurrentCol_00007_00000), aux131)
watched-or({diseq(avatarCurrentRow_00008,blocksCurrentRow_00008_00001),diseq(avatarCurrentCol_00008,blocksCurrentCol_00008_00001)})
watched-or({diseq(aux163,blocksCurrentCol_00010_00001),diseq(aux205,blocksCurrentRow_00010_00001),w-literal(aux82,1)})
watched-or({diseq(avatarCurrentRow_00008,2),diseq(avatarCurrentCol_00008,blocksCurrentCol_00008_00000)})
watched-or({watched-and({gaceq(blocksCurrentRow_00011_00001,aux215),gaceq(aux216,blocksCurrentCol_00011_00001)}),w-literal(aux117,1),w-literal(aux122,1)})
watched-or({diseq(aux104,1),w-literal(aux217,0)})
diseq(0,aux219)
watched-or({w-literal(aux93,1),diseq(2,aux210),diseq(aux168,blocksCurrentCol_00007_00000)})
watched-or({watched-and({w-literal(aux128,0),w-literal(aux112,0)}),watched-and({gaceq(blocksCurrentRow_00005_00001,blocksCurrentRow_00006_00001),gaceq(blocksCurrentCol_00005_00001,blocksCurrentCol_00006_00001)})})
diseq(0,aux221)
watched-or({w-literal(gridCurrent_00009_00002_00004,0),diseq(0,gridCurrent_00008_00002_00004)})
watched-or({diseq(blocksCurrentRow_00011_00001,2),diseq(blocksCurrentCol_00011_00000,blocksCurrentCol_00011_00001)})
watched-or({diseq(blocksCurrentCol_00006_00000,blocksCurrentCol_00006_00001),diseq(2,blocksCurrentRow_00006_00001)})
watched-or({watched-and({w-literal(avatarCurrentRow_00002,2),w-literal(avatarCurrentCol_00002,4)}),w-literal(gridCurrent_00003_00001_00003,1),diseq(1,gridCurrent_00002_00001_00003)})
watched-or({watched-and({w-literal(aux117,0),w-literal(aux122,0)}),watched-and({gaceq(blocksCurrentRow_00011_00001,blocksCurrentRow_00010_00001),gaceq(blocksCurrentCol_00010_00001,blocksCurrentCol_00011_00001)})})
watched-or({diseq(avatarCurrentCol_00010,blocksCurrentCol_00010_00001),diseq(avatarCurrentRow_00010,blocksCurrentRow_00010_00001)})
diseq(0,aux223)
watched-or({watched-and({gaceq(aux224,blocksCurrentCol_00009_00000),w-literal(moveRow_00008,0)}),diseq(2,avatarCurrentRow_00009),w-literal(aux106,1)})
watched-or({watched-and({gaceq(blocksCurrentRow_00008_00001,aux225),gaceq(aux226,blocksCurrentCol_00008_00001)}),w-literal(aux127,1),w-literal(aux105,1)})
watched-or({diseq(avatarCurrentRow_00010,2),diseq(avatarCurrentCol_00010,blocksCurrentCol_00010_00000)})
watched-or({diseq(2,aux208),w-literal(aux92,1),diseq(aux166,blocksCurrentCol_00009_00000)})
watched-or({watched-and({w-literal(avatarCurrentRow_00011,2),w-literal(aux108,0)}),gaceq(blocksCurrentCol_00010_00000,blocksCurrentCol_00011_00000)})
watched-or({w-literal(gridCurrent_00010_00002_00004,0),diseq(gridCurrent_00009_00002_00004,0)})
diseq(0,aux228)
watched-or({watched-and({w-literal(avatarCurrentRow_00001,2),w-literal(avatarCurrentCol_00001,4)}),w-literal(gridCurrent_00002_00001_00003,1)})
watched-or({diseq(aux103,1),w-literal(aux229,0)})
watched-or({w-literal(aux230,0),diseq(1,aux100)})
watched-or({w-literal(aux83,1),diseq(blocksCurrentRow_00005_00001,aux212),diseq(blocksCurrentCol_00005_00001,aux170)})
watched-or({diseq(avatarCurrentCol_00001,4),diseq(avatarCurrentRow_00001,2),watched-and({w-literal(moveRow_00000,0),gaceq(blocksCurrentCol_00001_00000,aux234)})})
watched-or({diseq(avatarCurrentCol_00009,blocksCurrentCol_00009_00000),diseq(avatarCurrentRow_00009,2)})
watched-or({w-literal(gridCurrent_00012_00002_00004,0),diseq(0,gridCurrent_00011_00002_00004)})
watched-or({w-literal(gridCurrent_00011_00002_00004,0),diseq(0,gridCurrent_00010_00002_00004)})
watched-or({diseq(avatarCurrentCol_00009,blocksCurrentCol_00009_00001),diseq(avatarCurrentRow_00009,blocksCurrentRow_00009_00001)})
watched-or({w-literal(aux89,1),diseq(blocksCurrentRow_00011_00001,aux204),diseq(aux164,blocksCurrentCol_00011_00001)})
watched-or({gaceq(blocksCurrentCol_00003_00001,blocksCurrentCol_00004_00001),watched-and({w-literal(avatarCurrentRow_00004,3),w-literal(aux129,0)})})
diseq(aux242,0)
watched-or({gaceq(blocksCurrentCol_00008_00000,blocksCurrentCol_00009_00000),watched-and({w-literal(avatarCurrentRow_00009,2),w-literal(aux106,0)})})
watched-or({watched-and({w-literal(avatarCurrentRow_00006,3),w-literal(avatarCurrentCol_00006,5)}),w-literal(gridCurrent_00007_00002_00004,1),diseq(1,gridCurrent_00006_00002_00004)})
watched-or({diseq(aux98,1),w-literal(aux243,0)})
watched-or({watched-and({w-literal(avatarCurrentRow_00002,2),w-literal(aux121,0)}),gaceq(blocksCurrentCol_00001_00000,blocksCurrentCol_00002_00000)})
diseq(0,aux250)
watched-or({w-literal(gridCurrent_00007_00002_00004,0),diseq(0,gridCurrent_00006_00002_00004)})
watched-or({watched-and({gaceq(blocksCurrentRow_00008_00001,blocksCurrentRow_00009_00001),gaceq(blocksCurrentCol_00008_00001,blocksCurrentCol_00009_00001)}),watched-and({w-literal(aux119,0),w-literal(aux124,0)})})
watched-or({watched-and({w-literal(avatarCurrentRow_00005,2),w-literal(avatarCurrentCol_00005,4)}),w-literal(gridCurrent_00006_00001_00003,1),diseq(1,gridCurrent_00005_00001_00003)})
diseq(0,aux102)
watched-or({diseq(gridCurrent_00009_00001_00003,1),watched-and({w-literal(avatarCurrentRow_00009,2),w-literal(avatarCurrentCol_00009,4)}),w-literal(gridCurrent_00010_00001_00003,1)})
watched-or({w-literal(gridCurrent_00006_00002_00004,0),diseq(0,gridCurrent_00005_00002_00004)})
watched-or({w-literal(gridCurrent_00008_00002_00004,0),diseq(0,gridCurrent_00007_00002_00004)})
diseq(aux255,0)
watched-or({diseq(3,aux213),diseq(aux173,5),w-literal(aux85,1)})
watched-or({diseq(gridCurrent_00009_00001_00003,0),w-literal(gridCurrent_00010_00001_00003,0)})
watched-or({diseq(2,aux213),diseq(aux173,blocksCurrentCol_00002_00000),w-literal(aux85,1)})
diseq(0,aux260)
watched-or({watched-and({w-literal(aux130,0),w-literal(aux114,0)}),watched-and({gaceq(blocksCurrentCol_00010_00001,blocksCurrentCol_00009_00001),gaceq(blocksCurrentRow_00009_00001,blocksCurrentRow_00010_00001)})})
watched-or({watched-and({w-literal(aux109,0),w-literal(aux125,0)}),watched-and({gaceq(blocksCurrentRow_00007_00001,blocksCurrentRow_00006_00001),gaceq(blocksCurrentCol_00006_00001,blocksCurrentCol_00007_00001)})})
diseq(0,aux262)
watched-or({w-literal(gridCurrent_00011_00002_00004,1),diseq(1,gridCurrent_00010_00002_00004),watched-and({w-literal(avatarCurrentRow_00010,3),w-literal(avatarCurrentCol_00010,5)})})
diseq(aux98,0)
watched-or({watched-and({w-literal(moveRow_00001,0),gaceq(aux263,blocksCurrentCol_00002_00000)}),diseq(2,avatarCurrentRow_00002),w-literal(aux121,1)})
watched-or({w-literal(gridCurrent_00006_00001_00003,0),diseq(0,gridCurrent_00005_00001_00003)})
watched-or({diseq(3,avatarCurrentRow_00003),watched-and({gaceq(aux264,blocksCurrentCol_00003_00001),w-literal(moveRow_00002,0)}),diseq(avatarCurrentCol_00003,5)})
diseq(0,aux266)
watched-or({diseq(3,avatarCurrentRow_00002),diseq(avatarCurrentCol_00002,5),watched-and({w-literal(moveRow_00001,0),w-literal(moveCol_00001,0)})})
watched-or({diseq(2,avatarCurrentRow_00003),w-literal(aux115,1),watched-and({w-literal(moveRow_00002,0),gaceq(aux267,blocksCurrentCol_00003_00000)})})
watched-or({watched-and({w-literal(avatarCurrentRow_00003,2),w-literal(avatarCurrentCol_00003,4)}),w-literal(gridCurrent_00004_00001_00003,1),diseq(1,gridCurrent_00003_00001_00003)})
watched-or({diseq(avatarCurrentCol_00006,blocksCurrentCol_00006_00001),diseq(avatarCurrentRow_00006,blocksCurrentRow_00006_00001)})
diseq(0,aux94)
watched-or({watched-and({w-literal(avatarCurrentRow_00010,2),w-literal(aux110,0)}),gaceq(blocksCurrentCol_00010_00000,blocksCurrentCol_00009_00000)})
watched-or({diseq(avatarCurrentRow_00006,2),diseq(avatarCurrentCol_00006,blocksCurrentCol_00006_00000)})
watched-or({w-literal(aux268,0),diseq(1,aux102)})
watched-or({diseq(blocksCurrentRow_00008_00001,2),diseq(blocksCurrentCol_00008_00000,blocksCurrentCol_00008_00001)})
watched-or({diseq(2,aux211),diseq(aux171,blocksCurrentCol_00004_00000),w-literal(aux87,1)})
diseq(0,aux270)
watched-or({watched-and({gaceq(aux271,blocksCurrentRow_00005_00001),gaceq(blocksCurrentCol_00005_00001,aux272)}),diseq(3,avatarCurrentRow_00005),w-literal(aux111,1)})
watched-or({diseq(3,avatarCurrentRow_00004),watched-and({gaceq(aux273,blocksCurrentCol_00004_00001),w-literal(moveRow_00003,0)}),w-literal(aux129,1)})
diseq(0,aux275)
watched-or({diseq(2,avatarCurrentRow_00005),watched-and({w-literal(moveRow_00004,0),gaceq(blocksCurrentCol_00005_00000,aux276)}),w-literal(aux116,1)})
watched-or({watched-and({w-literal(avatarCurrentRow_00008,3),w-literal(avatarCurrentCol_00008,5)}),w-literal(gridCurrent_00009_00002_00004,1),diseq(1,gridCurrent_00008_00002_00004)})
diseq(0,aux100)
watched-or({w-literal(gridCurrent_00009_00001_00003,1),watched-and({w-literal(avatarCurrentRow_00008,2),w-literal(avatarCurrentCol_00008,4)}),diseq(gridCurrent_00008_00001_00003,1)})
watched-or({diseq(2,avatarCurrentRow_00008),w-literal(aux131,1),watched-and({w-literal(moveRow_00007,0),gaceq(aux277,blocksCurrentCol_00008_00000)})})
watched-or({diseq(blocksCurrentCol_00009_00000,blocksCurrentCol_00009_00001),diseq(blocksCurrentRow_00009_00001,2)})
watched-or({diseq(avatarCurrentCol_00007,blocksCurrentCol_00007_00001),diseq(avatarCurrentRow_00007,blocksCurrentRow_00007_00001)})
diseq(0,aux99)
diseq(0,aux279)
watched-or({diseq(avatarCurrentRow_00007,2),diseq(avatarCurrentCol_00007,blocksCurrentCol_00007_00000)})
diseq(aux281,0)
watched-or({diseq(2,aux205),diseq(aux163,blocksCurrentCol_00010_00000),w-literal(aux82,1)})
watched-or({diseq(2,avatarCurrentRow_00006),w-literal(aux120,1),watched-and({w-literal(moveRow_00005,0),gaceq(blocksCurrentCol_00006_00000,aux282)})})
watched-or({watched-and({w-literal(avatarCurrentRow_00011,2),w-literal(avatarCurrentCol_00011,4)}),w-literal(gridCurrent_00012_00001_00003,1),diseq(1,gridCurrent_00011_00001_00003)})
watched-or({diseq(blocksCurrentCol_00005_00000,blocksCurrentCol_00005_00001),diseq(2,blocksCurrentRow_00005_00001)})
watched-or({w-literal(gridCurrent_00009_00001_00003,0),diseq(gridCurrent_00008_00001_00003,0)})
watched-or({diseq(2,avatarCurrentRow_00011),w-literal(aux108,1),watched-and({gaceq(aux283,blocksCurrentCol_00011_00000),w-literal(moveRow_00010,0)})})
watched-or({w-literal(aux284,0),diseq(aux101,1)})
diseq(0,aux286)
watched-or({w-literal(gridCurrent_00011_00001_00003,0),diseq(0,gridCurrent_00010_00001_00003)})
watched-or({w-literal(gridCurrent_00012_00001_00003,0),diseq(0,gridCurrent_00011_00001_00003)})
watched-or({watched-and({w-literal(avatarCurrentRow_00006,2),w-literal(aux120,0)}),gaceq(blocksCurrentCol_00005_00000,blocksCurrentCol_00006_00000)})
diseq(aux103,0)
watched-or({diseq(avatarCurrentCol_00005,blocksCurrentCol_00005_00001),diseq(avatarCurrentRow_00005,blocksCurrentRow_00005_00001)})
watched-or({diseq(avatarCurrentRow_00003,2),diseq(avatarCurrentCol_00003,blocksCurrentCol_00003_00000)})
watched-or({diseq(avatarCurrentCol_00005,blocksCurrentCol_00005_00000),diseq(avatarCurrentRow_00005,2)})
watched-or({diseq(avatarCurrentRow_00003,3),diseq(avatarCurrentCol_00003,blocksCurrentCol_00003_00001)})
diseq(aux95,0)
diseq(0,aux96)
watched-or({w-literal(aux83,1),diseq(2,aux212),diseq(blocksCurrentCol_00005_00000,aux170)})
watched-or({diseq(1,aux96),w-literal(aux287,0)})
watched-or({watched-and({gaceq(blocksCurrentRow_00009_00001,aux288),gaceq(aux289,blocksCurrentCol_00009_00001)}),w-literal(aux119,1),w-literal(aux124,1)})
watched-or({w-literal(blocksCurrentCol_00012_00000,6),w-literal(blocksCurrentCol_00012_00001,6)})
watched-or({diseq(2,aux203),w-literal(aux84,1),diseq(aux165,blocksCurrentCol_00012_00001)})
watched-or({w-literal(aux109,1),watched-and({gaceq(blocksCurrentRow_00007_00001,aux290),gaceq(aux291,blocksCurrentCol_00007_00001)}),w-literal(aux125,1)})
watched-or({diseq(2,aux203),w-literal(aux84,1),diseq(aux165,blocksCurrentCol_00012_00000)})
watched-or({diseq(2,avatarCurrentRow_00007),watched-and({w-literal(moveRow_00006,0),gaceq(aux292,blocksCurrentCol_00007_00000)}),w-literal(aux113,1)})
watched-or({watched-and({w-literal(avatarCurrentRow_00006,2),w-literal(avatarCurrentCol_00006,4)}),w-literal(gridCurrent_00007_00001_00003,1),diseq(gridCurrent_00006_00001_00003,1)})
watched-or({diseq(2,blocksCurrentRow_00010_00001),diseq(blocksCurrentCol_00010_00000,blocksCurrentCol_00010_00001)})
watched-or({diseq(2,avatarCurrentRow_00004),watched-and({gaceq(aux293,blocksCurrentCol_00004_00000),w-literal(moveRow_00003,0)}),w-literal(aux126,1)})
watched-or({w-literal(aux86,1),diseq(aux167,blocksCurrentCol_00008_00001),diseq(blocksCurrentRow_00008_00001,aux207)})
watched-or({w-literal(blocksCurrentCol_00012_00000,2),w-literal(blocksCurrentCol_00012_00001,2)})
watched-or({watched-and({w-literal(avatarCurrentRow_00007,3),w-literal(avatarCurrentCol_00007,5)}),w-literal(gridCurrent_00008_00002_00004,1),diseq(1,gridCurrent_00007_00002_00004)})
watched-or({w-literal(blocksCurrentCol_00001_00000,4),watched-and({w-literal(moveRow_00000,0),w-literal(moveCol_00000,1)})})
watched-or({w-literal(gridCurrent_00010_00002_00004,1),watched-and({w-literal(avatarCurrentRow_00009,3),w-literal(avatarCurrentCol_00009,5)}),diseq(gridCurrent_00009_00002_00004,1)})
watched-or({w-literal(gridCurrent_00004_00001_00003,0),diseq(0,gridCurrent_00003_00001_00003)})
diseq(aux104,0)
watched-or({diseq(2,aux204),w-literal(aux89,1),diseq(aux164,blocksCurrentCol_00011_00000)})
watched-or({diseq(avatarCurrentCol_00004,blocksCurrentCol_00004_00000),diseq(avatarCurrentRow_00004,2)})
watched-or({w-literal(gridCurrent_00003_00001_00003,0),diseq(0,gridCurrent_00002_00001_00003)})
watched-or({w-literal(aux86,1),diseq(2,aux207),diseq(aux167,blocksCurrentCol_00008_00000)})
watched-or({diseq(avatarCurrentCol_00004,blocksCurrentCol_00004_00001),diseq(avatarCurrentRow_00004,3)})
diseq(0,aux301)
watched-or({diseq(avatarCurrentRow_00011,blocksCurrentRow_00011_00001),diseq(avatarCurrentCol_00011,blocksCurrentCol_00011_00001)})
watched-or({diseq(avatarCurrentRow_00011,2),diseq(avatarCurrentCol_00011,blocksCurrentCol_00011_00000)})
watched-or({diseq(avatarCurrentRow_00002,2),diseq(avatarCurrentCol_00002,blocksCurrentCol_00002_00000)})
watched-or({diseq(avatarCurrentCol_00012,blocksCurrentCol_00012_00001),diseq(avatarCurrentRow_00012,2)})
watched-or({gaceq(blocksCurrentCol_00003_00000,blocksCurrentCol_00004_00000),watched-and({w-literal(avatarCurrentRow_00004,2),w-literal(aux126,0)})})
watched-or({diseq(2,aux206),diseq(aux174,blocksCurrentCol_00001_00000),w-literal(aux90,1)})
watched-or({diseq(avatarCurrentRow_00002,3),diseq(avatarCurrentCol_00002,5)})
watched-or({diseq(avatarCurrentCol_00012,blocksCurrentCol_00012_00000),diseq(avatarCurrentRow_00012,2)})
diseq(blocksCurrentCol_00012_00000,blocksCurrentCol_00012_00001)
watched-or({watched-and({w-literal(avatarCurrentRow_00007,2),w-literal(aux113,0)}),gaceq(blocksCurrentCol_00006_00000,blocksCurrentCol_00007_00000)})
watched-or({w-literal(aux130,1),watched-and({gaceq(aux305,blocksCurrentRow_00010_00001),gaceq(blocksCurrentCol_00010_00001,aux306)}),w-literal(aux114,1)})
watched-or({diseq(blocksCurrentRow_00007_00001,2),diseq(blocksCurrentCol_00007_00000,blocksCurrentCol_00007_00001)})
watched-or({watched-and({w-literal(avatarCurrentRow_00005,3),w-literal(avatarCurrentCol_00005,5)}),w-literal(gridCurrent_00006_00002_00004,1),diseq(1,gridCurrent_00005_00002_00004)})
watched-or({watched-and({w-literal(avatarCurrentRow_00003,3),w-literal(avatarCurrentCol_00003,5)}),w-literal(blocksCurrentCol_00003_00001,5)})
watched-or({diseq(aux169,blocksCurrentCol_00006_00001),w-literal(aux88,1),diseq(blocksCurrentRow_00006_00001,aux209)})
watched-or({diseq(aux95,1),w-literal(aux310,0)})
watched-or({gaceq(blocksCurrentCol_00007_00000,blocksCurrentCol_00008_00000),watched-and({w-literal(avatarCurrentRow_00008,2),w-literal(aux131,0)})})
watched-or({diseq(2,avatarCurrentRow_00010),watched-and({w-literal(moveRow_00009,0),gaceq(blocksCurrentCol_00010_00000,aux311)}),w-literal(aux110,1)})
watched-or({watched-and({w-literal(moveRow_00011,0),gaceq(aux312,blocksCurrentCol_00012_00000)}),diseq(2,avatarCurrentRow_00012),w-literal(aux123,1)})
diseq(aux314,0)
watched-or({gaceq(blocksCurrentCol_00002_00000,blocksCurrentCol_00003_00000),watched-and({w-literal(avatarCurrentRow_00003,2),w-literal(aux115,0)})})
watched-or({diseq(0,gridCurrent_00004_00002_00004),w-literal(gridCurrent_00005_00002_00004,0)})
diseq(aux319,0)
watched-or({w-literal(gridCurrent_00008_00001_00003,1),watched-and({w-literal(avatarCurrentRow_00007,2),w-literal(avatarCurrentCol_00007,4)}),diseq(gridCurrent_00007_00001_00003,1)})
watched-or({diseq(1,gridCurrent_00004_00002_00004),watched-and({w-literal(avatarCurrentRow_00004,3),w-literal(avatarCurrentCol_00004,5)}),w-literal(gridCurrent_00005_00002_00004,1)})
diseq(0,aux321)
diseq(aux323,0)
diseq(0,aux325)
watched-or({diseq(2,aux209),diseq(aux169,blocksCurrentCol_00006_00000),w-literal(aux88,1)})
watched-or({w-literal(aux326,0),diseq(1,aux94)})
watched-or({watched-and({gaceq(aux327,blocksCurrentCol_00012_00001),w-literal(aux328,2)}),w-literal(aux107,1),w-literal(aux118,1)})
watched-or({gaceq(blocksCurrentCol_00011_00000,blocksCurrentCol_00012_00000),watched-and({w-literal(avatarCurrentRow_00012,2),w-literal(aux123,0)})})
diseq(0,aux330)
diseq(0,aux97)
watched-or({w-literal(gridCurrent_00005_00001_00003,0),diseq(0,gridCurrent_00004_00001_00003)})
diseq(0,aux332)
watched-or({watched-and({gaceq(blocksCurrentCol_00006_00001,aux333),gaceq(aux334,blocksCurrentRow_00006_00001)}),w-literal(aux128,1),w-literal(aux112,1)})
watched-or({watched-and({w-literal(avatarCurrentRow_00003,3),w-literal(avatarCurrentCol_00003,5)}),w-literal(gridCurrent_00004_00002_00004,1)})
watched-or({watched-and({w-literal(avatarCurrentRow_00005,3),w-literal(aux111,0)}),watched-and({gaceq(blocksCurrentCol_00005_00001,blocksCurrentCol_00004_00001),w-literal(blocksCurrentRow_00005_00001,3)})})
watched-or({diseq(1,aux97),w-literal(aux335,0)})
watched-or({diseq(avatarCurrentCol_00001,blocksCurrentCol_00001_00000),diseq(avatarCurrentRow_00001,2)})
watched-or({watched-and({w-literal(avatarCurrentRow_00005,2),w-literal(aux116,0)}),gaceq(blocksCurrentCol_00005_00000,blocksCurrentCol_00004_00000)})
watched-or({watched-and({w-literal(aux107,0),w-literal(aux118,0)}),watched-and({gaceq(blocksCurrentCol_00011_00001,blocksCurrentCol_00012_00001),w-literal(blocksCurrentRow_00011_00001,2)})})
watched-or({diseq(3,aux214),w-literal(aux91,1),diseq(aux172,blocksCurrentCol_00003_00001)})
watched-or({watched-and({w-literal(avatarCurrentRow_00010,2),w-literal(avatarCurrentCol_00010,4)}),w-literal(gridCurrent_00011_00001_00003,1),diseq(1,gridCurrent_00010_00001_00003)})
watched-or({w-literal(gridCurrent_00012_00002_00004,1),diseq(1,gridCurrent_00011_00002_00004),watched-and({w-literal(avatarCurrentRow_00011,3),w-literal(avatarCurrentCol_00011,5)})})
watched-or({diseq(blocksCurrentRow_00009_00001,aux208),w-literal(aux92,1),diseq(aux166,blocksCurrentCol_00009_00001)})
watched-or({w-literal(aux336,0),diseq(1,aux99)})
watched-or({diseq(2,aux214),w-literal(aux91,1),diseq(aux172,blocksCurrentCol_00003_00000)})
watched-or({watched-and({w-literal(avatarCurrentRow_00004,2),w-literal(avatarCurrentCol_00004,4)}),w-literal(gridCurrent_00005_00001_00003,1),diseq(1,gridCurrent_00004_00001_00003)})
watched-or({w-literal(gridCurrent_00007_00001_00003,0),diseq(gridCurrent_00006_00001_00003,0)})
watched-or({w-literal(aux93,1),diseq(blocksCurrentRow_00007_00001,aux210),diseq(aux168,blocksCurrentCol_00007_00001)})
watched-or({diseq(3,aux211),diseq(aux171,blocksCurrentCol_00004_00001),w-literal(aux87,1)})
watched-or({watched-and({w-literal(aux127,0),w-literal(aux105,0)}),watched-and({gaceq(blocksCurrentCol_00007_00001,blocksCurrentCol_00008_00001),gaceq(blocksCurrentRow_00007_00001,blocksCurrentRow_00008_00001)})})
watched-or({diseq(3,aux206),w-literal(aux90,1),diseq(aux174,5)})
watched-or({w-literal(gridCurrent_00008_00001_00003,0),diseq(gridCurrent_00007_00001_00003,0)})
diseq(aux101,0)
sumleq([moveRow_00010,blocksCurrentRow_00010_00001],aux215)
sumgeq([moveRow_00010,blocksCurrentRow_00010_00001],aux215)
sumleq([moveCol_00010,blocksCurrentCol_00010_00001],aux216)
sumgeq([moveCol_00010,blocksCurrentCol_00010_00001],aux216)
sumleq([-2,blocksCurrentCol_00007_00000],aux218)
sumgeq([-2,blocksCurrentCol_00007_00000],aux218)
sumleq([blocksCurrentCol_00006_00000,-2],aux220)
sumgeq([blocksCurrentCol_00006_00000,-2],aux220)
sumleq([-2,blocksCurrentCol_00009_00000],aux222)
sumgeq([-2,blocksCurrentCol_00009_00000],aux222)
sumleq([moveCol_00008,blocksCurrentCol_00008_00000],aux224)
sumgeq([moveCol_00008,blocksCurrentCol_00008_00000],aux224)
sumleq([blocksCurrentRow_00007_00001,moveRow_00007],aux225)
sumgeq([blocksCurrentRow_00007_00001,moveRow_00007],aux225)
sumleq([moveCol_00007,blocksCurrentCol_00007_00001],aux226)
sumgeq([moveCol_00007,blocksCurrentCol_00007_00001],aux226)
weightedsumleq([7,1,1],[avatarCurrentRow_00012,avatarCurrentCol_00012,-17],aux227)
weightedsumgeq([7,1,1],[avatarCurrentRow_00012,avatarCurrentCol_00012,-17],aux227)
sumleq([aux231,aux232],1)
sumgeq([aux231,aux232],1)
sumleq([moveCol_00000,4],aux234)
sumgeq([moveCol_00000,4],aux234)
sumleq([aux235,aux236],1)
sumgeq([aux235,aux236],1)
sumleq([aux238,aux239],1)
sumgeq([aux238,aux239],1)
sumleq([-5,blocksCurrentCol_00003_00001],aux241)
sumgeq([-5,blocksCurrentCol_00003_00001],aux241)
sumleq([aux244,aux245],1)
sumgeq([aux244,aux245],1)
sumleq([aux247,moveRow_00000],1)
sumgeq([aux247,moveRow_00000],1)
sumleq([-4,blocksCurrentCol_00003_00000],aux249)
sumgeq([-4,blocksCurrentCol_00003_00000],aux249)
sumleq([aux251,aux252],1)
sumgeq([aux251,aux252],1)
weightedsumleq([1,1,7],[blocksCurrentCol_00010_00001,-16,blocksCurrentRow_00010_00001],aux254)
weightedsumgeq([1,1,7],[blocksCurrentCol_00010_00001,-16,blocksCurrentRow_00010_00001],aux254)
sumleq([aux256,aux257],1)
sumgeq([aux256,aux257],1)
weightedsumleq([1,1,7],[blocksCurrentCol_00005_00001,-19,blocksCurrentRow_00005_00001],aux259)
weightedsumgeq([1,1,7],[blocksCurrentCol_00005_00001,-19,blocksCurrentRow_00005_00001],aux259)
sumleq([blocksCurrentCol_00010_00000,-2],aux261)
sumgeq([blocksCurrentCol_00010_00000,-2],aux261)
sumleq([moveCol_00001,blocksCurrentCol_00001_00000],aux263)
sumgeq([moveCol_00001,blocksCurrentCol_00001_00000],aux263)
sumleq([moveCol_00002,5],aux264)
sumgeq([moveCol_00002,5],aux264)
sumleq([-2,blocksCurrentCol_00012_00001],aux265)
sumgeq([-2,blocksCurrentCol_00012_00001],aux265)
sumleq([moveCol_00002,blocksCurrentCol_00002_00000],aux267)
sumgeq([moveCol_00002,blocksCurrentCol_00002_00000],aux267)
sumleq([-3,blocksCurrentCol_00004_00000],aux269)
sumgeq([-3,blocksCurrentCol_00004_00000],aux269)
sumleq([moveRow_00004,3],aux271)
sumgeq([moveRow_00004,3],aux271)
sumleq([moveCol_00004,blocksCurrentCol_00004_00001],aux272)
sumgeq([moveCol_00004,blocksCurrentCol_00004_00001],aux272)
sumleq([moveCol_00003,blocksCurrentCol_00003_00001],aux273)
sumgeq([moveCol_00003,blocksCurrentCol_00003_00001],aux273)
weightedsumleq([7,1,1],[blocksCurrentRow_00011_00001,-16,blocksCurrentCol_00011_00001],aux274)
weightedsumgeq([7,1,1],[blocksCurrentRow_00011_00001,-16,blocksCurrentCol_00011_00001],aux274)
sumleq([moveCol_00004,blocksCurrentCol_00004_00000],aux276)
sumgeq([moveCol_00004,blocksCurrentCol_00004_00000],aux276)
sumleq([moveCol_00007,blocksCurrentCol_00007_00000],aux277)
sumgeq([moveCol_00007,blocksCurrentCol_00007_00000],aux277)
weightedsumleq([7,1,1],[blocksCurrentRow_00009_00001,-16,blocksCurrentCol_00009_00001],aux278)
weightedsumgeq([7,1,1],[blocksCurrentRow_00009_00001,-16,blocksCurrentCol_00009_00001],aux278)
sumleq([blocksCurrentCol_00005_00000,-2],aux280)
sumgeq([blocksCurrentCol_00005_00000,-2],aux280)
sumleq([blocksCurrentCol_00005_00000,moveCol_00005],aux282)
sumgeq([blocksCurrentCol_00005_00000,moveCol_00005],aux282)
sumleq([moveCol_00010,blocksCurrentCol_00010_00000],aux283)
sumgeq([moveCol_00010,blocksCurrentCol_00010_00000],aux283)
sumleq([-5,blocksCurrentCol_00004_00001],aux285)
sumgeq([-5,blocksCurrentCol_00004_00001],aux285)
sumleq([moveRow_00008,blocksCurrentRow_00008_00001],aux288)
sumgeq([moveRow_00008,blocksCurrentRow_00008_00001],aux288)
sumleq([moveCol_00008,blocksCurrentCol_00008_00001],aux289)
sumgeq([moveCol_00008,blocksCurrentCol_00008_00001],aux289)
sumleq([moveRow_00006,blocksCurrentRow_00006_00001],aux290)
sumgeq([moveRow_00006,blocksCurrentRow_00006_00001],aux290)
sumleq([moveCol_00006,blocksCurrentCol_00006_00001],aux291)
sumgeq([moveCol_00006,blocksCurrentCol_00006_00001],aux291)
sumleq([moveCol_00006,blocksCurrentCol_00006_00000],aux292)
sumgeq([moveCol_00006,blocksCurrentCol_00006_00000],aux292)
sumleq([moveCol_00003,blocksCurrentCol_00003_00000],aux293)
sumgeq([moveCol_00003,blocksCurrentCol_00003_00000],aux293)
sumleq([aux294,aux295],1)
sumgeq([aux294,aux295],1)
sumleq([aux297,aux298],1)
sumgeq([aux297,aux298],1)
weightedsumleq([1,1,7],[blocksCurrentCol_00006_00001,-18,blocksCurrentRow_00006_00001],aux300)
weightedsumgeq([1,1,7],[blocksCurrentCol_00006_00001,-18,blocksCurrentRow_00006_00001],aux300)
sumleq([aux302,aux303],1)
sumgeq([aux302,aux303],1)
sumleq([moveRow_00009,blocksCurrentRow_00009_00001],aux305)
sumgeq([moveRow_00009,blocksCurrentRow_00009_00001],aux305)
sumleq([moveCol_00009,blocksCurrentCol_00009_00001],aux306)
sumgeq([moveCol_00009,blocksCurrentCol_00009_00001],aux306)
sumleq([aux307,aux308],1)
sumgeq([aux307,aux308],1)
sumleq([moveCol_00009,blocksCurrentCol_00009_00000],aux311)
sumgeq([moveCol_00009,blocksCurrentCol_00009_00000],aux311)
sumleq([moveCol_00011,blocksCurrentCol_00011_00000],aux312)
sumgeq([moveCol_00011,blocksCurrentCol_00011_00000],aux312)
sumleq([blocksCurrentCol_00001_00000,-4],aux313)
sumgeq([blocksCurrentCol_00001_00000,-4],aux313)
sumleq([aux315,aux316],1)
sumgeq([aux315,aux316],1)
sumleq([blocksCurrentCol_00002_00000,-4],aux318)
sumgeq([blocksCurrentCol_00002_00000,-4],aux318)
sumleq([-2,blocksCurrentCol_00011_00000],aux320)
sumgeq([-2,blocksCurrentCol_00011_00000],aux320)
weightedsumleq([7,1,1],[blocksCurrentRow_00007_00001,-17,blocksCurrentCol_00007_00001],aux322)
weightedsumgeq([7,1,1],[blocksCurrentRow_00007_00001,-17,blocksCurrentCol_00007_00001],aux322)
weightedsumleq([7,1,1],[blocksCurrentRow_00008_00001,-17,blocksCurrentCol_00008_00001],aux324)
weightedsumgeq([7,1,1],[blocksCurrentRow_00008_00001,-17,blocksCurrentCol_00008_00001],aux324)
sumleq([moveCol_00011,blocksCurrentCol_00011_00001],aux327)
sumgeq([moveCol_00011,blocksCurrentCol_00011_00001],aux327)
sumleq([moveRow_00011,blocksCurrentRow_00011_00001],aux328)
sumgeq([moveRow_00011,blocksCurrentRow_00011_00001],aux328)
sumleq([-2,blocksCurrentCol_00008_00000],aux329)
sumgeq([-2,blocksCurrentCol_00008_00000],aux329)
sumleq([-2,blocksCurrentCol_00012_00000],aux331)
sumgeq([-2,blocksCurrentCol_00012_00000],aux331)
sumleq([blocksCurrentCol_00005_00001,moveCol_00005],aux333)
sumgeq([blocksCurrentCol_00005_00001,moveCol_00005],aux333)
sumleq([moveRow_00005,blocksCurrentRow_00005_00001],aux334)
sumgeq([moveRow_00005,blocksCurrentRow_00005_00001],aux334)
weightedsumleq([7,1,1],[avatarCurrentRow_00010,avatarCurrentCol_00010,-16],aux132)
weightedsumgeq([7,1,1],[avatarCurrentRow_00010,avatarCurrentCol_00010,-16],aux132)
weightedsumleq([7,1,1],[avatarCurrentRow_00011,avatarCurrentCol_00011,-16],aux133)
weightedsumgeq([7,1,1],[avatarCurrentRow_00011,avatarCurrentCol_00011,-16],aux133)
weightedsumleq([7,1,1],[avatarCurrentRow_00001,avatarCurrentCol_00001,-16],aux134)
weightedsumgeq([7,1,1],[avatarCurrentRow_00001,avatarCurrentCol_00001,-16],aux134)
weightedsumleq([7,1,1],[avatarCurrentRow_00002,avatarCurrentCol_00002,-17],aux135)
weightedsumgeq([7,1,1],[avatarCurrentRow_00002,avatarCurrentCol_00002,-17],aux135)
weightedsumleq([7,1,1],[avatarCurrentRow_00006,avatarCurrentCol_00006,-16],aux136)
weightedsumgeq([7,1,1],[avatarCurrentRow_00006,avatarCurrentCol_00006,-16],aux136)
weightedsumleq([7,1,1],[avatarCurrentRow_00007,avatarCurrentCol_00007,-16],aux137)
weightedsumgeq([7,1,1],[avatarCurrentRow_00007,avatarCurrentCol_00007,-16],aux137)
weightedsumleq([7,1,1],[avatarCurrentRow_00003,avatarCurrentCol_00003,-16],aux138)
weightedsumgeq([7,1,1],[avatarCurrentRow_00003,avatarCurrentCol_00003,-16],aux138)
weightedsumleq([7,1,1],[avatarCurrentRow_00005,avatarCurrentCol_00005,-16],aux139)
weightedsumgeq([7,1,1],[avatarCurrentRow_00005,avatarCurrentCol_00005,-16],aux139)
weightedsumleq([7,1,1],[avatarCurrentRow_00004,avatarCurrentCol_00004,-16],aux140)
weightedsumgeq([7,1,1],[avatarCurrentRow_00004,avatarCurrentCol_00004,-16],aux140)
weightedsumleq([7,1,1],[avatarCurrentRow_00008,avatarCurrentCol_00008,-16],aux141)
weightedsumgeq([7,1,1],[avatarCurrentRow_00008,avatarCurrentCol_00008,-16],aux141)
weightedsumleq([7,1,1],[avatarCurrentRow_00009,avatarCurrentCol_00009,-16],aux142)
weightedsumgeq([7,1,1],[avatarCurrentRow_00009,avatarCurrentCol_00009,-16],aux142)
sumleq([moveRow_00000,2],avatarCurrentRow_00001)
sumgeq([moveRow_00000,2],avatarCurrentRow_00001)
sumleq([avatarCurrentCol_00004,moveCol_00004],avatarCurrentCol_00005)
sumgeq([avatarCurrentCol_00004,moveCol_00004],avatarCurrentCol_00005)
sumleq([avatarCurrentCol_00003,moveCol_00003],avatarCurrentCol_00004)
sumgeq([avatarCurrentCol_00003,moveCol_00003],avatarCurrentCol_00004)
sumleq([avatarCurrentCol_00002,moveCol_00002],avatarCurrentCol_00003)
sumgeq([avatarCurrentCol_00002,moveCol_00002],avatarCurrentCol_00003)
sumleq([avatarCurrentCol_00006,moveCol_00006],avatarCurrentCol_00007)
sumgeq([avatarCurrentCol_00006,moveCol_00006],avatarCurrentCol_00007)
sumleq([avatarCurrentCol_00005,moveCol_00005],avatarCurrentCol_00006)
sumgeq([avatarCurrentCol_00005,moveCol_00005],avatarCurrentCol_00006)
sumleq([moveCol_00000,3],avatarCurrentCol_00001)
sumgeq([moveCol_00000,3],avatarCurrentCol_00001)
sumleq([avatarCurrentRow_00001,moveRow_00001],avatarCurrentRow_00002)
sumgeq([avatarCurrentRow_00001,moveRow_00001],avatarCurrentRow_00002)
weightedsumleq([1,2],[avatarCurrentRow_00002,moveRow_00001],aux151)
weightedsumgeq([1,2],[avatarCurrentRow_00002,moveRow_00001],aux151)
weightedsumleq([1,2],[avatarCurrentRow_00003,moveRow_00002],aux152)
weightedsumgeq([1,2],[avatarCurrentRow_00003,moveRow_00002],aux152)
weightedsumleq([1,2],[avatarCurrentRow_00001,moveRow_00000],aux153)
weightedsumgeq([1,2],[avatarCurrentRow_00001,moveRow_00000],aux153)
weightedsumleq([1,2],[avatarCurrentRow_00005,moveRow_00004],aux154)
weightedsumgeq([1,2],[avatarCurrentRow_00005,moveRow_00004],aux154)
weightedsumleq([1,2],[avatarCurrentRow_00004,moveRow_00003],aux155)
weightedsumgeq([1,2],[avatarCurrentRow_00004,moveRow_00003],aux155)
weightedsumleq([1,2],[avatarCurrentRow_00007,moveRow_00006],aux156)
weightedsumgeq([1,2],[avatarCurrentRow_00007,moveRow_00006],aux156)
weightedsumleq([1,2],[avatarCurrentRow_00006,moveRow_00005],aux157)
weightedsumgeq([1,2],[avatarCurrentRow_00006,moveRow_00005],aux157)
weightedsumleq([1,2],[avatarCurrentRow_00009,moveRow_00008],aux158)
weightedsumgeq([1,2],[avatarCurrentRow_00009,moveRow_00008],aux158)
weightedsumleq([1,2],[avatarCurrentRow_00008,moveRow_00007],aux159)
weightedsumgeq([1,2],[avatarCurrentRow_00008,moveRow_00007],aux159)
weightedsumleq([1,2],[avatarCurrentRow_00010,moveRow_00009],aux160)
weightedsumgeq([1,2],[avatarCurrentRow_00010,moveRow_00009],aux160)
weightedsumleq([1,2],[avatarCurrentRow_00011,moveRow_00010],aux161)
weightedsumgeq([1,2],[avatarCurrentRow_00011,moveRow_00010],aux161)
weightedsumleq([1,2],[avatarCurrentRow_00012,moveRow_00011],aux162)
weightedsumgeq([1,2],[avatarCurrentRow_00012,moveRow_00011],aux162)
sumleq([avatarCurrentCol_00010,moveCol_00009],aux163)
sumgeq([avatarCurrentCol_00010,moveCol_00009],aux163)
sumleq([avatarCurrentCol_00011,moveCol_00010],aux164)
sumgeq([avatarCurrentCol_00011,moveCol_00010],aux164)
sumleq([avatarCurrentCol_00012,moveCol_00011],aux165)
sumgeq([avatarCurrentCol_00012,moveCol_00011],aux165)
sumleq([avatarCurrentCol_00009,moveCol_00008],aux166)
sumgeq([avatarCurrentCol_00009,moveCol_00008],aux166)
sumleq([avatarCurrentCol_00008,moveCol_00007],aux167)
sumgeq([avatarCurrentCol_00008,moveCol_00007],aux167)
sumleq([avatarCurrentCol_00007,moveCol_00006],aux168)
sumgeq([avatarCurrentCol_00007,moveCol_00006],aux168)
sumleq([avatarCurrentCol_00006,moveCol_00005],aux169)
sumgeq([avatarCurrentCol_00006,moveCol_00005],aux169)
sumleq([avatarCurrentCol_00005,moveCol_00004],aux170)
sumgeq([avatarCurrentCol_00005,moveCol_00004],aux170)
sumleq([avatarCurrentCol_00004,moveCol_00003],aux171)
sumgeq([avatarCurrentCol_00004,moveCol_00003],aux171)
sumleq([avatarCurrentCol_00003,moveCol_00002],aux172)
sumgeq([avatarCurrentCol_00003,moveCol_00002],aux172)
sumleq([avatarCurrentCol_00002,moveCol_00001],aux173)
sumgeq([avatarCurrentCol_00002,moveCol_00001],aux173)
sumleq([avatarCurrentCol_00001,moveCol_00000],aux174)
sumgeq([avatarCurrentCol_00001,moveCol_00000],aux174)
sumleq([avatarCurrentCol_00011,moveCol_00011],avatarCurrentCol_00012)
sumgeq([avatarCurrentCol_00011,moveCol_00011],avatarCurrentCol_00012)
sumleq([avatarCurrentCol_00010,moveCol_00010],avatarCurrentCol_00011)
sumgeq([avatarCurrentCol_00010,moveCol_00010],avatarCurrentCol_00011)
sumleq([avatarCurrentCol_00008,moveCol_00008],avatarCurrentCol_00009)
sumgeq([avatarCurrentCol_00008,moveCol_00008],avatarCurrentCol_00009)
sumleq([avatarCurrentCol_00007,moveCol_00007],avatarCurrentCol_00008)
sumgeq([avatarCurrentCol_00007,moveCol_00007],avatarCurrentCol_00008)
sumleq([avatarCurrentCol_00009,moveCol_00009],avatarCurrentCol_00010)
sumgeq([avatarCurrentCol_00009,moveCol_00009],avatarCurrentCol_00010)
sumleq([avatarCurrentRow_00010,moveRow_00010],avatarCurrentRow_00011)
sumgeq([avatarCurrentRow_00010,moveRow_00010],avatarCurrentRow_00011)
sumleq([avatarCurrentRow_00011,moveRow_00011],avatarCurrentRow_00012)
sumgeq([avatarCurrentRow_00011,moveRow_00011],avatarCurrentRow_00012)
sumleq([avatarCurrentRow_00002,moveRow_00002],avatarCurrentRow_00003)
sumgeq([avatarCurrentRow_00002,moveRow_00002],avatarCurrentRow_00003)
sumleq([avatarCurrentRow_00003,moveRow_00003],avatarCurrentRow_00004)
sumgeq([avatarCurrentRow_00003,moveRow_00003],avatarCurrentRow_00004)
sumleq([avatarCurrentRow_00004,moveRow_00004],avatarCurrentRow_00005)
sumgeq([avatarCurrentRow_00004,moveRow_00004],avatarCurrentRow_00005)
sumleq([avatarCurrentRow_00005,moveRow_00005],avatarCurrentRow_00006)
sumgeq([avatarCurrentRow_00005,moveRow_00005],avatarCurrentRow_00006)
sumleq([avatarCurrentRow_00006,moveRow_00006],avatarCurrentRow_00007)
sumgeq([avatarCurrentRow_00006,moveRow_00006],avatarCurrentRow_00007)
sumleq([avatarCurrentRow_00007,moveRow_00007],avatarCurrentRow_00008)
sumgeq([avatarCurrentRow_00007,moveRow_00007],avatarCurrentRow_00008)
sumleq([avatarCurrentRow_00008,moveRow_00008],avatarCurrentRow_00009)
sumgeq([avatarCurrentRow_00008,moveRow_00008],avatarCurrentRow_00009)
sumleq([avatarCurrentRow_00009,moveRow_00009],avatarCurrentRow_00010)
sumgeq([avatarCurrentRow_00009,moveRow_00009],avatarCurrentRow_00010)
weightedsumleq([1,2],[avatarCurrentCol_00009,moveCol_00008],aux190)
weightedsumgeq([1,2],[avatarCurrentCol_00009,moveCol_00008],aux190)
weightedsumleq([1,2],[avatarCurrentCol_00007,moveCol_00006],aux191)
weightedsumgeq([1,2],[avatarCurrentCol_00007,moveCol_00006],aux191)
weightedsumleq([1,2],[avatarCurrentCol_00008,moveCol_00007],aux192)
weightedsumgeq([1,2],[avatarCurrentCol_00008,moveCol_00007],aux192)
sumleq([avatarCurrentCol_00001,moveCol_00001],avatarCurrentCol_00002)
sumgeq([avatarCurrentCol_00001,moveCol_00001],avatarCurrentCol_00002)
weightedsumleq([1,2],[avatarCurrentCol_00001,moveCol_00000],aux194)
weightedsumgeq([1,2],[avatarCurrentCol_00001,moveCol_00000],aux194)
weightedsumleq([1,2],[avatarCurrentCol_00004,moveCol_00003],aux195)
weightedsumgeq([1,2],[avatarCurrentCol_00004,moveCol_00003],aux195)
weightedsumleq([1,2],[avatarCurrentCol_00006,moveCol_00005],aux196)
weightedsumgeq([1,2],[avatarCurrentCol_00006,moveCol_00005],aux196)
weightedsumleq([1,2],[avatarCurrentCol_00005,moveCol_00004],aux197)
weightedsumgeq([1,2],[avatarCurrentCol_00005,moveCol_00004],aux197)
weightedsumleq([1,2],[avatarCurrentCol_00002,moveCol_00001],aux198)
weightedsumgeq([1,2],[avatarCurrentCol_00002,moveCol_00001],aux198)
weightedsumleq([1,2],[avatarCurrentCol_00003,moveCol_00002],aux199)
weightedsumgeq([1,2],[avatarCurrentCol_00003,moveCol_00002],aux199)
weightedsumleq([1,2],[avatarCurrentCol_00010,moveCol_00009],aux200)
weightedsumgeq([1,2],[avatarCurrentCol_00010,moveCol_00009],aux200)
weightedsumleq([1,2],[avatarCurrentCol_00011,moveCol_00010],aux201)
weightedsumgeq([1,2],[avatarCurrentCol_00011,moveCol_00010],aux201)
weightedsumleq([1,2],[avatarCurrentCol_00012,moveCol_00011],aux202)
weightedsumgeq([1,2],[avatarCurrentCol_00012,moveCol_00011],aux202)
sumleq([avatarCurrentRow_00012,moveRow_00011],aux203)
sumgeq([avatarCurrentRow_00012,moveRow_00011],aux203)
sumleq([avatarCurrentRow_00011,moveRow_00010],aux204)
sumgeq([avatarCurrentRow_00011,moveRow_00010],aux204)
sumleq([avatarCurrentRow_00010,moveRow_00009],aux205)
sumgeq([avatarCurrentRow_00010,moveRow_00009],aux205)
sumleq([avatarCurrentRow_00001,moveRow_00000],aux206)
sumgeq([avatarCurrentRow_00001,moveRow_00000],aux206)
sumleq([avatarCurrentRow_00008,moveRow_00007],aux207)
sumgeq([avatarCurrentRow_00008,moveRow_00007],aux207)
sumleq([avatarCurrentRow_00009,moveRow_00008],aux208)
sumgeq([avatarCurrentRow_00009,moveRow_00008],aux208)
sumleq([avatarCurrentRow_00006,moveRow_00005],aux209)
sumgeq([avatarCurrentRow_00006,moveRow_00005],aux209)
sumleq([avatarCurrentRow_00007,moveRow_00006],aux210)
sumgeq([avatarCurrentRow_00007,moveRow_00006],aux210)
sumleq([avatarCurrentRow_00004,moveRow_00003],aux211)
sumgeq([avatarCurrentRow_00004,moveRow_00003],aux211)
sumleq([avatarCurrentRow_00005,moveRow_00004],aux212)
sumgeq([avatarCurrentRow_00005,moveRow_00004],aux212)
sumleq([avatarCurrentRow_00002,moveRow_00001],aux213)
sumgeq([avatarCurrentRow_00002,moveRow_00001],aux213)
sumleq([avatarCurrentRow_00003,moveRow_00002],aux214)
sumgeq([avatarCurrentRow_00003,moveRow_00002],aux214)
**EOF**
